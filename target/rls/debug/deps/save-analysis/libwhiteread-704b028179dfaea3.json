{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0","program":"/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","whiteread","/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=704b028179dfaea3","-C","extra-filename=-704b028179dfaea3","--out-dir","/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","-L","dependency=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin"],"output":"/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libwhiteread-704b028179dfaea3.rmeta"},"prelude":{"crate_id":{"name":"whiteread","disambiguator":[8797202632055212604,10718809282965700211]},"crate_root":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src","external_crates":[{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9052359605736874625,10969620614104782158]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10208286902242434637,2419506206398467119]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14522653865950379425,1291702403687991040]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16226811538171955058,16445660279390814719]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8256647374517566634,12796438860464481652]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9027588853239241607,17582582296105197793]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5426963357244781228,922338936816546458]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2962871395052763982,5928641137518604403]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15745431865555696781,12103685295896601039]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7271060651791987639,13811114011233058843]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2069665013813441304,7528560138124483874]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16884418941088283343,17748518302090179015]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14905414021948729466,3432527410087948583]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13029430744807000157,16797736332599686345]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[3526016130744516730,11239067909179244643]}}],"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":52,"byte_end":4247,"line_start":2,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1261,"byte_end":1271,"line_start":48,"line_end":48,"column_start":23,"column_end":33},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1331,"byte_end":1337,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":52,"byte_end":4247,"line_start":2,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":104},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214}],"decl_id":null,"docs":" Crate for reading whitespace-separated values.","sig":null,"attributes":[{"value":"allow(bare_trait_objects)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":52,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":30}},{"value":"/ Crate for reading whitespace-separated values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":83,"byte_end":133,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":134,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The crate defines a trait [`FromStream`](stream::FromStream), which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":138,"byte_end":209,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ describes types that can be parsed from whitespace-separated words,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":210,"byte_end":281,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ which includes eg. integers, tuples, vectors and various [adapters].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":282,"byte_end":354,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":355,"byte_end":358,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The definition of whitespace used in this crate is described in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":359,"byte_end":426,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`SplitAsciiWhitespace`](stream::SplitAsciiWhitespace).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":427,"byte_end":486,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":487,"byte_end":490,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":491,"byte_end":505,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":506,"byte_end":509,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basics","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":510,"byte_end":520,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":521,"byte_end":524,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":525,"byte_end":532,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":533,"byte_end":567,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ let (s, i): (String, i32) = parse_string(\"  answer  42 \").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":568,"byte_end":639,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ # assert!(s == \"answer\" && i == 42);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":640,"byte_end":680,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":681,"byte_end":688,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":689,"byte_end":692,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Easy reading from stdin.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":693,"byte_end":721,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":722,"byte_end":725,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":726,"byte_end":739,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # use whiteread::parse_line;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":740,"byte_end":772,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ let x: i32 = parse_line().unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":773,"byte_end":812,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":813,"byte_end":820,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":821,"byte_end":824,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Efficient reading from stdin (newline-agnostic) with [`Reader`](reader::Reader).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":825,"byte_end":909,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":910,"byte_end":913,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":914,"byte_end":927,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # use whiteread::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":928,"byte_end":956,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ # foo().unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":957,"byte_end":978,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ # fn foo() -> whiteread::reader::Result<()> {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":979,"byte_end":1028,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ let mut i = Reader::from_stdin_naive();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1029,"byte_end":1072,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/ while let Some(f) = i.parse::<Option<f64>>()? {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1073,"byte_end":1124,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/     println!(\"{}\", f);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1125,"byte_end":1151,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1152,"byte_end":1157,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1158,"byte_end":1170,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1171,"byte_end":1178,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1179,"byte_end":1186,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":235},{"krate":0,"index":39},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":315},{"krate":0,"index":323},{"krate":0,"index":70},{"krate":0,"index":74}],"decl_id":null,"docs":" This module defines the [`StrStream`] and [`FromStream`] traits","sig":null,"attributes":[{"value":"/ This module defines the [`StrStream`] and [`FromStream`] traits","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4249,"byte_end":4316,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4317,"byte_end":4320,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`FromStream`] trait defines how to convert a [`StrStream`] (a stream of strings) to a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4321,"byte_end":4415,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ value. See [its definition](FromStream) for more documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4416,"byte_end":4483,"line_start":4,"line_end":4,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4592,"byte_end":4601,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"StrStream","qualname":"::stream::StrStream","value":"StrStream","parent":null,"children":[{"krate":0,"index":9}],"decl_id":null,"docs":" A streaming iterator yielding borrowed strings.\n","sig":null,"attributes":[{"value":"/ A streaming iterator yielding borrowed strings.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4530,"byte_end":4581,"line_start":9,"line_end":9,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4611,"byte_end":4615,"line_start":11,"line_end":11,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StrStream::next","value":"pub fn next(&mut Self) -> io::Result<Option<&str>>","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5139,"byte_end":5159,"line_start":24,"line_end":24,"column_start":12,"column_end":32},"name":"SplitAsciiWhitespace","qualname":"::stream::SplitAsciiWhitespace","value":"SplitAsciiWhitespace {  }","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" Fast version of [`std::str::SplitWhitespace`], but with some drawbacks.","sig":null,"attributes":[{"value":"/ Fast version of [`std::str::SplitWhitespace`], but with some drawbacks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4787,"byte_end":4862,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4863,"byte_end":4866,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It considers to be whitespace everything with codepoint <= 0x20","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4867,"byte_end":4934,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ (this includes \" \\t\\n\\r\", but also some other unprintable characters).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4935,"byte_end":5009,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ It doesn't consider to be whitespace any of non-ascii UTF whitespace characters","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5010,"byte_end":5093,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"/ (such as non-breaking space).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5094,"byte_end":5127,"line_start":23,"line_end":23,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5253,"byte_end":5256,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<SplitAsciiWhitespace>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5336,"byte_end":5344,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"position","qualname":"<SplitAsciiWhitespace>::position","value":"pub fn position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5391,"byte_end":5401,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<SplitAsciiWhitespace>::from_parts","value":"pub fn from_parts(&'a str, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6401,"byte_end":6407,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"StrExt","qualname":"::stream::StrExt","value":"StrExt","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" Extends a `str` with `split_ascii_whitespace` method.\n","sig":null,"attributes":[{"value":"/ Extends a `str` with `split_ascii_whitespace` method.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6333,"byte_end":6390,"line_start":74,"line_end":74,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6417,"byte_end":6439,"line_start":76,"line_end":76,"column_start":8,"column_end":30},"name":"split_ascii_whitespace","qualname":"::stream::StrExt::split_ascii_whitespace","value":"pub fn split_ascii_whitespace(&Self) -> SplitAsciiWhitespace","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8265,"byte_end":8275,"line_start":130,"line_end":130,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::FromStream","value":"FromStream: Sized","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36}],"decl_id":null,"docs":" Trait for values that can be parsed from stream of whitespace-separated words.","sig":null,"attributes":[{"value":"/ Trait for values that can be parsed from stream of whitespace-separated words.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6597,"byte_end":6679,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6680,"byte_end":6683,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Implementations for primitives consume and parse one element from a stream","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6684,"byte_end":6762,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/ (advancing a stream).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6763,"byte_end":6788,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/ Implementations for tuples just parse elements from left to right.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6789,"byte_end":6859,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/ Implementation for vector parses till the end of stream.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6860,"byte_end":6920,"line_start":88,"line_end":88,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6921,"byte_end":6924,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ See [`adapters`](crate::adapters) module for more types that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6925,"byte_end":6989,"line_start":90,"line_end":90,"column_start":1,"column_end":65}},{"value":"/ implement this trait in a special way.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6990,"byte_end":7032,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7033,"byte_end":7036,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7037,"byte_end":7051,"line_start":93,"line_end":93,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7052,"byte_end":7055,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Using a trait directly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7056,"byte_end":7082,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7083,"byte_end":7086,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7087,"byte_end":7094,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ use whiteread::FromStream;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7095,"byte_end":7125,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/ let mut stream = \"123\".split_whitespace();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7126,"byte_end":7172,"line_start":99,"line_end":99,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(<i32 as FromStream>::read(&mut stream).unwrap(), 123)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7173,"byte_end":7241,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7242,"byte_end":7249,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7250,"byte_end":7253,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Semantics of provided trait implementations:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7254,"byte_end":7302,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7303,"byte_end":7306,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7307,"byte_end":7314,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7315,"byte_end":7349,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::{Skip, Lengthed};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7350,"byte_end":7398,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/ // tuples (up to 6)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7399,"byte_end":7422,"line_start":108,"line_end":108,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(parse_string(\"2 1 3 4\").ok(), Some( ((2, 1), (3, 4)) ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7423,"byte_end":7494,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7495,"byte_end":7498,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // optional elements at the end of stream","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7499,"byte_end":7544,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parse_string(\"2 1 3\").ok(), Some( ((2, 1), Some(3)) ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7545,"byte_end":7615,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(parse_string(\"2 1\").ok(), Some( ((2, 1), None::<i32>) ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7616,"byte_end":7688,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7689,"byte_end":7692,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // eager vector","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7693,"byte_end":7712,"line_start":115,"line_end":115,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(parse_string(\"2 1 3 4\").ok(), Some( vec![2, 1, 3, 4] ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7713,"byte_end":7784,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7785,"byte_end":7788,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // vec prefixed with length","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7789,"byte_end":7820,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parse_string(\"2 1 3\").ok(), Some( Lengthed(vec![1, 3]) ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7821,"byte_end":7894,"line_start":119,"line_end":119,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7895,"byte_end":7898,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ // placeholder","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7899,"byte_end":7917,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(parse_string(\"spam 3\").ok(), Some( (Skip, 3) ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7918,"byte_end":7981,"line_start":122,"line_end":122,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7982,"byte_end":7985,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // you can mix impls of course","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":7986,"byte_end":8020,"line_start":124,"line_end":124,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(parse_string(\"a 1 b 2\").ok(), Some( vec![('a', 1), ('b', 2)] ));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8021,"byte_end":8100,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8101,"byte_end":8108,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8109,"byte_end":8112,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ There are a few more adapter structs in [`adapters`](crate::adapters) module,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8113,"byte_end":8194,"line_start":128,"line_end":128,"column_start":1,"column_end":82}},{"value":"/ which implement the `FromStream` trait in various ways.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8195,"byte_end":8254,"line_start":129,"line_end":129,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8343,"byte_end":8347,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"read","qualname":"::stream::FromStream::read","value":"pub fn read<I: StrStream>(&mut I) -> Result<Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Reads a value from a str-producing stream.\n","sig":null,"attributes":[{"value":"/ Reads a value from a str-producing stream.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8289,"byte_end":8335,"line_start":131,"line_end":131,"column_start":5,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8851,"byte_end":8870,"line_start":141,"line_end":141,"column_start":11,"column_end":30},"name":"REQUEST_CHEAP_ERROR","qualname":"::stream::FromStream::REQUEST_CHEAP_ERROR","value":"bool","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Whether a function returning this type should produce cheap errors instead of\n pretty-printed ones.","sig":null,"attributes":[{"value":"/ Whether a function returning this type should produce cheap errors instead of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8396,"byte_end":8477,"line_start":134,"line_end":134,"column_start":5,"column_end":86}},{"value":"/ pretty-printed ones.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8482,"byte_end":8506,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8511,"byte_end":8514,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For user-facing errors, this should be set to false, so that user can see a nice rendered","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8519,"byte_end":8612,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/ error. This is the default behaviour.  If you expect the error to happen on a hot path and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8617,"byte_end":8711,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ you don't just pass it up, this should be set to false. See","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8716,"byte_end":8779,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/ [`WithCheapError`](crate::adapters::WithCheapError).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8784,"byte_end":8840,"line_start":140,"line_end":140,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8898,"byte_end":8904,"line_start":144,"line_end":144,"column_start":10,"column_end":16},"name":"Result","qualname":"::stream::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9093,"byte_end":9100,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::stream::Progress::Nothing","value":"Progress::Nothing","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The stream didn't contain any data\n","sig":null,"attributes":[{"value":"/ The stream didn't contain any data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9050,"byte_end":9088,"line_start":149,"line_end":149,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9157,"byte_end":9164,"line_start":153,"line_end":153,"column_start":5,"column_end":12},"name":"Partial","qualname":"::stream::Progress::Partial","value":"Progress::Partial","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The stream ended in the middle of parsing\n","sig":null,"attributes":[{"value":"/ The stream ended in the middle of parsing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9107,"byte_end":9152,"line_start":152,"line_end":152,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":217},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9035,"byte_end":9043,"line_start":148,"line_end":148,"column_start":10,"column_end":18},"name":"Progress","qualname":"::stream::Progress","value":"pub enum Progress {\n\n    /// The stream didn't contain any data\n    Nothing,\n\n    /// The stream ended in the middle of parsing\n    Partial,\n}","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220}],"decl_id":null,"docs":" Specifies the flavour of [`TooShort`](Error::TooShort) error\n","sig":null,"attributes":[{"value":"/ Specifies the flavour of [`TooShort`](Error::TooShort) error","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8944,"byte_end":9008,"line_start":146,"line_end":146,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9932,"byte_end":9940,"line_start":175,"line_end":175,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::stream::Error::TooShort","value":"Error::TooShort(Progress)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" There was not enough input to parse a value.\n","sig":null,"attributes":[{"value":"/ There was not enough input to parse a value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9879,"byte_end":9927,"line_start":174,"line_end":174,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9995,"byte_end":10004,"line_start":178,"line_end":178,"column_start":5,"column_end":14},"name":"Leftovers","qualname":"::stream::Error::Leftovers","value":"Error::Leftovers","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Excessive input was provided.\n","sig":null,"attributes":[{"value":"/ Excessive input was provided.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9957,"byte_end":9990,"line_start":177,"line_end":177,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10069,"byte_end":10079,"line_start":181,"line_end":181,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::stream::Error::ParseError","value":"Error::ParseError","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Parse error occured (data was in invalid format).\n","sig":null,"attributes":[{"value":"/ Parse error occured (data was in invalid format).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10011,"byte_end":10064,"line_start":180,"line_end":180,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10112,"byte_end":10119,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"IoError","qualname":"::stream::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" IO Error occured.\n","sig":null,"attributes":[{"value":"/ IO Error occured.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10086,"byte_end":10107,"line_start":183,"line_end":183,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":224},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9867,"byte_end":9872,"line_start":173,"line_end":173,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::Error","value":"pub enum Error {\n\n    /// There was not enough input to parse a value.\n    TooShort(Progress),\n\n    /// Excessive input was provided.\n    Leftovers,\n\n    /// Parse error occured (data was in invalid format).\n    ParseError,\n\n    /// IO Error occured.\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"decl_id":null,"docs":" Error which can occur while parsing [`FromStream`] object.","sig":null,"attributes":[{"value":"/ Error which can occur while parsing [`FromStream`] object.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9169,"byte_end":9231,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9232,"byte_end":9235,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ It's convertible into [`io::Error`](::std::io::Error),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9236,"byte_end":9294,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/ so it composes well with other reading functions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9295,"byte_end":9348,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9349,"byte_end":9352,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9353,"byte_end":9367,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9368,"byte_end":9371,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9372,"byte_end":9379,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9380,"byte_end":9414,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::stream::Error::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9415,"byte_end":9453,"line_start":165,"line_end":165,"column_start":1,"column_end":39}},{"value":"/ # use whiteread::stream::Progress::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9454,"byte_end":9495,"line_start":166,"line_end":166,"column_start":1,"column_end":42}},{"value":"/ if let Err(TooShort(Nothing)) = parse_string::<(u8, u16)>(\"\") {} else { panic!(); }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9496,"byte_end":9583,"line_start":167,"line_end":167,"column_start":1,"column_end":88}},{"value":"/ if let Err(TooShort(Partial)) = parse_string::<(u8, u16)>(\"1\") {} else { panic!(); }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9584,"byte_end":9672,"line_start":168,"line_end":168,"column_start":1,"column_end":89}},{"value":"/ if let Err(Leftovers) = parse_string::<char>(\"x y z\") {} else { panic!(); }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9673,"byte_end":9752,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ if let Err(ParseError) = parse_string::<i32>(\"seven\") {} else { panic!(); }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9753,"byte_end":9832,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9833,"byte_end":9840,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10248,"byte_end":10260,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"is_too_short","qualname":"<Error>::is_too_short","value":"pub fn is_too_short(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`TooShort`](Error::TooShort)\n","sig":null,"attributes":[{"value":"/ Checks if error variant is [`TooShort`](Error::TooShort)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10176,"byte_end":10236,"line_start":189,"line_end":189,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10507,"byte_end":10517,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"is_nothing","qualname":"<Error>::is_nothing","value":"pub fn is_nothing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`Nothing`](Progress::Nothing) flavour\n of [`TooShort`](Error::TooShort)\n","sig":null,"attributes":[{"value":"/ Checks if error variant is [`Nothing`](Progress::Nothing) flavour","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10385,"byte_end":10454,"line_start":197,"line_end":197,"column_start":5,"column_end":74}},{"value":"/ of [`TooShort`](Error::TooShort)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10459,"byte_end":10495,"line_start":198,"line_end":198,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10780,"byte_end":10790,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"is_partial","qualname":"<Error>::is_partial","value":"pub fn is_partial(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`Partial`](Progress::Partial) flavour\n of [`TooShort`](Error::TooShort)\n","sig":null,"attributes":[{"value":"/ Checks if error variant is [`Partial`](Progress::Partial) flavour","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10658,"byte_end":10727,"line_start":206,"line_end":206,"column_start":5,"column_end":74}},{"value":"/ of [`TooShort`](Error::TooShort)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10732,"byte_end":10768,"line_start":207,"line_end":207,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11005,"byte_end":11017,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"is_leftovers","qualname":"<Error>::is_leftovers","value":"pub fn is_leftovers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`Leftovers`](Error::Leftovers)\n","sig":null,"attributes":[{"value":"/ Checks if error variant is [`Leftovers`](Error::Leftovers)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10931,"byte_end":10993,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11216,"byte_end":11230,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"is_parse_error","qualname":"<Error>::is_parse_error","value":"pub fn is_parse_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`ParseError`](Error::ParseError)\n","sig":null,"attributes":[{"value":"/ Checks if error variant is [`ParseError`](Error::ParseError)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11140,"byte_end":11204,"line_start":223,"line_end":223,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11424,"byte_end":11435,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<Error>::is_io_error","value":"pub fn is_io_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`IoError`](Error::IoError)\n","sig":null,"attributes":[{"value":"/ Checks if error variant is [`IoError`](Error::IoError)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11354,"byte_end":11412,"line_start":231,"line_end":231,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapters","qualname":"::adapters","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":332},{"krate":0,"index":342},{"krate":0,"index":340},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":85},{"krate":0,"index":344},{"krate":0,"index":354},{"krate":0,"index":352},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":88},{"krate":0,"index":356},{"krate":0,"index":374},{"krate":0,"index":371},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":91},{"krate":0,"index":377},{"krate":0,"index":384},{"krate":0,"index":381},{"krate":0,"index":95},{"krate":0,"index":387},{"krate":0,"index":394},{"krate":0,"index":391},{"krate":0,"index":99}],"decl_id":null,"docs":" This module defines adapters for [`FromStream`] trait.","sig":null,"attributes":[{"value":"/ This module defines adapters for [`FromStream`] trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16063,"byte_end":16121,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16122,"byte_end":16125,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a few structs, which implement","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16126,"byte_end":16181,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/ [`FromStream`] in a special way. Eg. `Skip` serves the role","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16182,"byte_end":16245,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ of a placeholder, and `Lengthed` allows to read a vector","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16246,"byte_end":16306,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ prepended by its length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16307,"byte_end":16335,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16336,"byte_end":16339,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See also [implementation of `FromStream` for std types][impls]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16340,"byte_end":16406,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ which among implementation for primitives and strings,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16407,"byte_end":16465,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/ contains implementation on tuples, `Vec` and `Option`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16466,"byte_end":16524,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16525,"byte_end":16528,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [impls]: ../stream/trait.FromStream.html#foreign-impls","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16529,"byte_end":16587,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17271,"byte_end":17275,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Skip","qualname":"::adapters::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to consume and ignore one whitespace-separated value","sig":null,"attributes":[{"value":"/ Used to consume and ignore one whitespace-separated value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16653,"byte_end":16714,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16715,"byte_end":16718,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16719,"byte_end":16733,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16734,"byte_end":16737,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Providing type hint","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16738,"byte_end":16761,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16762,"byte_end":16765,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16766,"byte_end":16773,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16774,"byte_end":16808,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::Skip;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16809,"byte_end":16845,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ let (_, x, _): (Skip, i32, Skip) = parse_string(\"foo 5 30\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16846,"byte_end":16919,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(x, 5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16920,"byte_end":16941,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16942,"byte_end":16949,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16950,"byte_end":16953,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Relying on type inference (for some reason, {} are mandatory)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":16954,"byte_end":17019,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17020,"byte_end":17023,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17024,"byte_end":17031,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17032,"byte_end":17066,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::Skip;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17067,"byte_end":17103,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ let (Skip{}, x, Skip{}) = parse_string(\"foo 5 30\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17104,"byte_end":17168,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/ let x: i32 = x;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17169,"byte_end":17188,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(x, 5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17189,"byte_end":17210,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17211,"byte_end":17218,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18319,"byte_end":18326,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"SkipAll","qualname":"::adapters::SkipAll","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to ignore everything till the end of the reader","sig":null,"attributes":[{"value":"/ Used to ignore everything till the end of the reader","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17407,"byte_end":17463,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17464,"byte_end":17467,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Using this should be only necessary in conjuction with `parse_line`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17468,"byte_end":17539,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ and `parse_string`, to avoid the `Leftovers` error.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17540,"byte_end":17595,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/ When using `Reader`, you can just use `start_line` or `parse`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17596,"byte_end":17661,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ instead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17662,"byte_end":17674,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17675,"byte_end":17678,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17679,"byte_end":17693,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17694,"byte_end":17697,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Providing type hint","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17698,"byte_end":17721,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17722,"byte_end":17725,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17726,"byte_end":17733,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17734,"byte_end":17768,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::SkipAll;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17769,"byte_end":17808,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ let (s, x, _): (String, i32, SkipAll) = parse_string(\"foo 5 ... ... ...\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17809,"byte_end":17896,"line_start":62,"line_end":62,"column_start":1,"column_end":88}},{"value":"/ assert_eq!((s, x), (\"foo\".to_owned(), 5));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17897,"byte_end":17943,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17944,"byte_end":17951,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17952,"byte_end":17955,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Relying on type inference (for some reason, {} are mandatory)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17956,"byte_end":18021,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18022,"byte_end":18025,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18026,"byte_end":18033,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18034,"byte_end":18068,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::SkipAll;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18069,"byte_end":18108,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ let (s, x, SkipAll{}) = parse_string(\"foo 5\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18109,"byte_end":18168,"line_start":71,"line_end":71,"column_start":1,"column_end":60}},{"value":"/ let x: i32 = x;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18169,"byte_end":18188,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/ let s: String = s;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18189,"byte_end":18211,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ assert_eq!((s, x), (\"foo\".to_owned(), 5));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18212,"byte_end":18258,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18259,"byte_end":18266,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18946,"byte_end":18954,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Lengthed","qualname":"::adapters::Lengthed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for reading vector of values represented by a list prepended by a number of elements.","sig":null,"attributes":[{"value":"/ Wrapper for reading vector of values represented by a list prepended by a number of elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18489,"byte_end":18586,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18587,"byte_end":18590,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18591,"byte_end":18605,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18606,"byte_end":18613,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18614,"byte_end":18648,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::Lengthed;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18649,"byte_end":18689,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/ let Lengthed(v): Lengthed<u8> = parse_string(\"3 5 6 7\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18690,"byte_end":18759,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(v, &[5, 6, 7]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18760,"byte_end":18790,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18791,"byte_end":18794,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let Lengthed(v): Lengthed<u8> = parse_string(\"0\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18795,"byte_end":18858,"line_start":95,"line_end":95,"column_start":1,"column_end":64}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18859,"byte_end":18885,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18886,"byte_end":18893,"line_start":97,"line_end":97,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18958,"byte_end":18968,"line_start":99,"line_end":99,"column_start":24,"column_end":34},"name":"0","qualname":"::adapters::Lengthed::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20205,"byte_end":20211,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"Zeroed","qualname":"::adapters::Zeroed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for reading vector of numbers represented by a list ending with 0.","sig":null,"attributes":[{"value":"/ Wrapper for reading vector of numbers represented by a list ending with 0.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19346,"byte_end":19424,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19425,"byte_end":19428,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19429,"byte_end":19443,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19444,"byte_end":19447,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19448,"byte_end":19455,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19456,"byte_end":19490,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::Zeroed;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19491,"byte_end":19529,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/ # use whiteread::stream::Error;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19530,"byte_end":19565,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/ let (Zeroed(v), _): (Zeroed<u8>, String) = parse_string(\"20 21 22 0 foo\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19566,"byte_end":19653,"line_start":122,"line_end":122,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(v, &[20, 21, 22]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19654,"byte_end":19687,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19688,"byte_end":19691,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ assert!(parse_string::<Zeroed<u8>>(\"20 21 22\").is_err());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19692,"byte_end":19753,"line_start":125,"line_end":125,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19754,"byte_end":19761,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19762,"byte_end":19765,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ If the element can be represented by multiple words (eg. it's a tuple or a vector),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19766,"byte_end":19853,"line_start":128,"line_end":128,"column_start":1,"column_end":88}},{"value":"/ the full \"zeroed\" element should be provided:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19854,"byte_end":19903,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19904,"byte_end":19907,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19908,"byte_end":19915,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19916,"byte_end":19950,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ # use whiteread::adapters::{Lengthed, Zeroed};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19951,"byte_end":20001,"line_start":133,"line_end":133,"column_start":1,"column_end":51}},{"value":"/ let _: Zeroed<(i32, i32)> = parse_string(\"22 33  44 55  0 0\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20002,"byte_end":20077,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ let _: Zeroed<Lengthed<String>> = parse_string(\"3 a b c  2 d e  0\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20078,"byte_end":20159,"line_start":135,"line_end":135,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20160,"byte_end":20167,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":380},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20215,"byte_end":20225,"line_start":138,"line_end":138,"column_start":22,"column_end":32},"name":"0","qualname":"::adapters::Zeroed::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21639,"byte_end":21653,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"WithCheapError","qualname":"::adapters::WithCheapError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hints the parsing function not to render errors","sig":null,"attributes":[{"value":"/ Hints the parsing function not to render errors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20715,"byte_end":20766,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20767,"byte_end":20770,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ By default, [`Reader`](crate::Reader) will pretty-print the error location, [like","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20771,"byte_end":20856,"line_start":158,"line_end":158,"column_start":1,"column_end":86}},{"value":"/ so](crate::reader::Error).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20857,"byte_end":20887,"line_start":159,"line_end":159,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20888,"byte_end":20891,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ This struct is intended to be used when an error is expected and rendering the lineinfo (which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20892,"byte_end":20990,"line_start":161,"line_end":161,"column_start":1,"column_end":99}},{"value":"/ creates an allocation to remember the source line) is not needed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20991,"byte_end":21060,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21061,"byte_end":21064,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21065,"byte_end":21079,"line_start":164,"line_end":164,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21080,"byte_end":21083,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21084,"byte_end":21091,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ use whiteread::reader::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21092,"byte_end":21126,"line_start":167,"line_end":167,"column_start":1,"column_end":35}},{"value":"/ use whiteread::adapters::WithCheapError;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21127,"byte_end":21171,"line_start":168,"line_end":168,"column_start":1,"column_end":45}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21172,"byte_end":21196,"line_start":169,"line_end":169,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21197,"byte_end":21200,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ // The displayed error doesn't contain the rendered lineinfo.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21201,"byte_end":21266,"line_start":171,"line_end":171,"column_start":1,"column_end":66}},{"value":"/ let result = Reader::new(Cursor::new(\"foo\")).parse::<WithCheapError<i32>>();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21267,"byte_end":21347,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ assert!(!result.unwrap_err().to_string().contains(\"foo\"));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21348,"byte_end":21410,"line_start":173,"line_end":173,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21411,"byte_end":21414,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ // By default the error line is pretty printed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21415,"byte_end":21466,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ let result = Reader::new(Cursor::new(\"foo\")).parse::<i32>();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21467,"byte_end":21531,"line_start":176,"line_end":176,"column_start":1,"column_end":65}},{"value":"/ assert!(result.unwrap_err().to_string().contains(\"foo\"));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21532,"byte_end":21593,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21594,"byte_end":21601,"line_start":178,"line_end":178,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":390},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21657,"byte_end":21662,"line_start":180,"line_end":180,"column_start":30,"column_end":35},"name":"0","qualname":"::adapters::WithCheapError::0","value":"T","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":146},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":199}],"decl_id":null,"docs":" This module defines the [`Reader`] struct.","sig":null,"attributes":[{"value":"/ This module defines the [`Reader`] struct.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":22687,"byte_end":22733,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":22734,"byte_end":22737,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the [`Reader`] for docs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":22738,"byte_end":22770,"line_start":3,"line_end":3,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24840,"byte_end":24846,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Wrapper for BufRead allowing easy parsing values from a Reader.","sig":null,"attributes":[{"value":"/ Wrapper for BufRead allowing easy parsing values from a Reader.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23042,"byte_end":23109,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23110,"byte_end":23113,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This struct contains line-buffer, which enables","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23114,"byte_end":23165,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/ scanf-like behavior (newline-agnostic parsing).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23166,"byte_end":23217,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ Newline-aware parsing is also supported.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23218,"byte_end":23262,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23263,"byte_end":23266,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Reader` also provides almost zero-allocation parsing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23267,"byte_end":23324,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ (an allocation is needed to store the line-buffer).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23325,"byte_end":23380,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23381,"byte_end":23384,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23385,"byte_end":23399,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23400,"byte_end":23403,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This code","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23404,"byte_end":23417,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23418,"byte_end":23421,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23422,"byte_end":23435,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # use whiteread::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23436,"byte_end":23464,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ let i = std::io::stdin();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23465,"byte_end":23494,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ let mut i = Reader::new(i.lock());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23495,"byte_end":23533,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ let (n, k): (i32, f64) = i.p();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23534,"byte_end":23569,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23570,"byte_end":23577,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23578,"byte_end":23581,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ will accept both of following inputs:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23582,"byte_end":23623,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23624,"byte_end":23627,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23628,"byte_end":23639,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23640,"byte_end":23645,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23646,"byte_end":23649,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23650,"byte_end":23655,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23656,"byte_end":23663,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23664,"byte_end":23667,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23668,"byte_end":23679,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ 1 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23680,"byte_end":23687,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23688,"byte_end":23695,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23696,"byte_end":23699,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23700,"byte_end":23703,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Overview of how various methods handle newlines:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23704,"byte_end":23756,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23757,"byte_end":23760,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23761,"byte_end":23768,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23769,"byte_end":23797,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/ # use whiteread::stream::Error::TooShort;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23798,"byte_end":23843,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let data = std::io::Cursor::new(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23844,"byte_end":23880,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ br\"1 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23881,"byte_end":23891,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23892,"byte_end":23895,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ 3 4 5","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23896,"byte_end":23905,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/ 6 7","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23906,"byte_end":23913,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ 8","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23914,"byte_end":23919,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ \" as &[u8]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23920,"byte_end":23936,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ let mut r = Reader::new(data);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23937,"byte_end":23971,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(r.next_line().unwrap().trim(), \"1 2\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":23972,"byte_end":24025,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.continue_().ok(), Some(1));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24026,"byte_end":24070,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(r.continue_().ok(), Some( (2, 3) ));   // continue_line would return `TooShort` here","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24071,"byte_end":24170,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(r.continue_line().ok(), Some(4)); // finish_line would return `Leftovers` here","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24171,"byte_end":24264,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(r.start_line().ok(), Some(6));   // line would return `Leftovers` here","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24265,"byte_end":24350,"line_start":69,"line_end":69,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(r.line().ok(), Some(8));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24351,"byte_end":24390,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ // from now, everything will return TooShort","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24391,"byte_end":24439,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/ # match r.parse::<u8>().map_err(|e| e.into_inner()) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24440,"byte_end":24497,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"/ #     Err(TooShort(_)) => (),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24498,"byte_end":24531,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/ #     _ => panic!()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24532,"byte_end":24555,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24556,"byte_end":24563,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24564,"byte_end":24569,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ # match r.line::<u8>().map_err(|e| e.into_inner()) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24570,"byte_end":24626,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/ #     Err(TooShort(_)) => (),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24627,"byte_end":24660,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/ #     _ => panic!()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24661,"byte_end":24684,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24685,"byte_end":24692,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24693,"byte_end":24698,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ # match r.next_line().map_err(|e| e.into_inner()) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24699,"byte_end":24754,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ #     Err(TooShort(_)) => (),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24755,"byte_end":24788,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/ #     _ => panic!()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24789,"byte_end":24812,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24813,"byte_end":24820,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24821,"byte_end":24828,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25213,"byte_end":25216,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<B>>::new","value":"pub fn new(B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a BufRead.","sig":null,"attributes":[{"value":"/ Wraps a BufRead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25081,"byte_end":25101,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25106,"byte_end":25109,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Note that you don't have to pass an owned buffered reader, it could be also `&mut`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25114,"byte_end":25201,"line_start":100,"line_end":100,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27118,"byte_end":27134,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"from_stdin_naive","qualname":"<Reader<io::BufReader<io::Stdin>>>::from_stdin_naive","value":"pub fn from_stdin_naive() -> Reader<io::BufReader<io::Stdin>>","parent":null,"children":[],"decl_id":null,"docs":" Wraps stdin in the reader making some assumptions","sig":null,"attributes":[{"value":"/ Wraps stdin in the reader making some assumptions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25695,"byte_end":25748,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25753,"byte_end":25756,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This is a helper that allows constructing a Reader from [`io::stdin`](std::io::stdin) in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25761,"byte_end":25853,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/ one function.  The usual way to do it needs a separate binding for stdin, because of how","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25858,"byte_end":25950,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/ [`StdinLock`](std::io::StdinLock) works:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25955,"byte_end":25999,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26004,"byte_end":26007,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26012,"byte_end":26025,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/ # use whiteread::reader::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26030,"byte_end":26066,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ let stdin = std::io::stdin();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26071,"byte_end":26104,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/ let mut reader = Reader::new(stdin.lock());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26109,"byte_end":26156,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26161,"byte_end":26168,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26173,"byte_end":26176,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26181,"byte_end":26195,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26200,"byte_end":26203,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This struct allows you to just call","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26208,"byte_end":26247,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26252,"byte_end":26255,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26260,"byte_end":26273,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # use whiteread::reader::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26278,"byte_end":26314,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ let mut reader = Reader::from_stdin_naive();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26319,"byte_end":26367,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26372,"byte_end":26379,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26384,"byte_end":26387,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This is _almost_ equivalent to previous snippet, but:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26392,"byte_end":26449,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26454,"byte_end":26457,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Drawbacks","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26462,"byte_end":26477,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26482,"byte_end":26485,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This will construct stdin object with a separate buffer, in addition to the buffer that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26490,"byte_end":26581,"line_start":149,"line_end":149,"column_start":5,"column_end":96}},{"value":"/ stdin already uses. This may cause:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26586,"byte_end":26625,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26630,"byte_end":26633,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ * unexpected behaviour when mixing `Reader` usage with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26638,"byte_end":26696,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/ * double-buffering, which _may_ affect performance. But on the normal usage, `StdinLock`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26701,"byte_end":26793,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/   should just pass the read through and not buffer.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26798,"byte_end":26853,"line_start":154,"line_end":154,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26858,"byte_end":26861,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ So if you're not trying to get last percent of performance and you operate on stdin solely","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26866,"byte_end":26960,"line_start":156,"line_end":156,"column_start":5,"column_end":99}},{"value":"/ using the `Reader`, you're free to use this constructor.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":26965,"byte_end":27025,"line_start":157,"line_end":157,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27030,"byte_end":27033,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # See also","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27038,"byte_end":27052,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27057,"byte_end":27060,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ * [`parse_stdin`](super::parse_stdin)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27065,"byte_end":27106,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27800,"byte_end":27804,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<io::BufReader<fs::File>>>::open","value":"pub fn open<P: AsRef<Path>>(P) -> io::Result<Reader<io::BufReader<fs::File>>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file and wraps in Reader","sig":null,"attributes":[{"value":"/ Opens a file and wraps in Reader","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27280,"byte_end":27316,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27321,"byte_end":27324,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Shortcut for opening a file, wrapping it in a `BufReader` and then in a `Reader`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27329,"byte_end":27414,"line_start":170,"line_end":170,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27419,"byte_end":27422,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27427,"byte_end":27441,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27446,"byte_end":27449,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Read an integer from the beginning of file.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27454,"byte_end":27501,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27506,"byte_end":27509,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27514,"byte_end":27527,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ # use whiteread::Reader;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27532,"byte_end":27560,"line_start":177,"line_end":177,"column_start":5,"column_end":33}},{"value":"/ let mut reader = Reader::open(\"number.txt\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27565,"byte_end":27622,"line_start":178,"line_end":178,"column_start":5,"column_end":62}},{"value":"/ let x: u32 = Reader::open(\"number.txt\").unwrap().parse().unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27627,"byte_end":27697,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27702,"byte_end":27709,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27714,"byte_end":27717,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # See also","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27722,"byte_end":27736,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27741,"byte_end":27744,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ * [`parse_file`](super::parse_file)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27749,"byte_end":27788,"line_start":184,"line_end":184,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28425,"byte_end":28434,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"continue_","qualname":"<Reader<B>>::continue_","value":"pub fn continue_<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a FromStream value without specialy treating newlines (just like `scanf` or `cin>>`)\n","sig":null,"attributes":[{"value":"/ Parses a FromStream value without specialy treating newlines (just like `scanf` or `cin>>`)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28318,"byte_end":28413,"line_start":201,"line_end":201,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28709,"byte_end":28714,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"parse","qualname":"<Reader<B>>::parse","value":"pub fn parse<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Same as `continue_`.","sig":null,"attributes":[{"value":"/ Same as `continue_`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28547,"byte_end":28571,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28576,"byte_end":28579,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Using `continue_` over `parse` is preferred, as it conveys better","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28584,"byte_end":28653,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ which part of input will be parsed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28658,"byte_end":28697,"line_start":209,"line_end":209,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28927,"byte_end":28928,"line_start":217,"line_end":217,"column_start":12,"column_end":13},"name":"p","qualname":"<Reader<B>>::p","value":"pub fn p<T: FromStream>(&mut Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Just .continue_().unwrap().","sig":null,"attributes":[{"value":"/ Just .continue_().unwrap().","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28827,"byte_end":28858,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28863,"byte_end":28866,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Use it if you really value your time. ;)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28871,"byte_end":28915,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29335,"byte_end":29341,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"finish","qualname":"<Reader<B>>::finish","value":"pub fn finish<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses remaining part of reader into FromStream value\n in a line-agnostic way.","sig":null,"attributes":[{"value":"/ Parses remaining part of reader into FromStream value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28991,"byte_end":29048,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/ in a line-agnostic way.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29053,"byte_end":29080,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29085,"byte_end":29088,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ It could be used with `T=()`, to just check if we're at the EOF.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29093,"byte_end":29161,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29166,"byte_end":29169,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ### Errors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29174,"byte_end":29188,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29193,"byte_end":29196,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Additionaly to usual parse errors, this method may also return","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29201,"byte_end":29267,"line_start":226,"line_end":226,"column_start":5,"column_end":71}},{"value":"/ [`Leftovers`](crate::stream::Error::Leftovers).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29272,"byte_end":29323,"line_start":227,"line_end":227,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31083,"byte_end":31087,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"line","qualname":"<Reader<B>>::line","value":"pub fn line<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new line from input and parses it into FromStream value **as a whole**.","sig":null,"attributes":[{"value":"/ Reads a new line from input and parses it into FromStream value **as a whole**.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30720,"byte_end":30803,"line_start":275,"line_end":275,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30808,"byte_end":30811,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The function is called just `line` for brevity and also to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30816,"byte_end":30878,"line_start":277,"line_end":277,"column_start":5,"column_end":67}},{"value":"/ make it look different than global `read_line` to avoid mistakes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30883,"byte_end":30952,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30957,"byte_end":30960,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ### Errors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30965,"byte_end":30979,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30984,"byte_end":30987,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Additionaly to usual parse errors, this method may also return `Leftovers`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30992,"byte_end":31071,"line_start":282,"line_end":282,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31393,"byte_end":31403,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"start_line","qualname":"<Reader<B>>::start_line","value":"pub fn start_line<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new line from input and parses some part of it into FromStream value.\n","sig":null,"attributes":[{"value":"/ Reads a new line from input and parses some part of it into FromStream value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31300,"byte_end":31381,"line_start":290,"line_end":290,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31689,"byte_end":31702,"line_start":299,"line_end":299,"column_start":12,"column_end":25},"name":"continue_line","qualname":"<Reader<B>>::continue_line","value":"pub fn continue_line<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses some part of current line into FromStream value.\n","sig":null,"attributes":[{"value":"/ Parses some part of current line into FromStream value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31618,"byte_end":31677,"line_start":298,"line_end":298,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32368,"byte_end":32379,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"finish_line","qualname":"<Reader<B>>::finish_line","value":"pub fn finish_line<T: FromStream>(&mut Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses remaining part of current line into FromStream value.","sig":null,"attributes":[{"value":"/ Parses remaining part of current line into FromStream value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32041,"byte_end":32105,"line_start":309,"line_end":309,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32110,"byte_end":32113,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ It could be used with `T=()`, to just check if we're on the end of line.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32118,"byte_end":32194,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32199,"byte_end":32202,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ### Errors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32207,"byte_end":32221,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32226,"byte_end":32229,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Additionaly to usual parse errors, this method may also return","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32234,"byte_end":32300,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ [`Leftovers`](crate::stream::Error::Leftovers).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32305,"byte_end":32356,"line_start":316,"line_end":316,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33116,"byte_end":33125,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"next_line","qualname":"<Reader<B>>::next_line","value":"pub fn next_line(&mut Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new line and returns it.","sig":null,"attributes":[{"value":"/ Reads a new line and returns it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32792,"byte_end":32828,"line_start":330,"line_end":330,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32833,"byte_end":32836,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function should be used when `FromStream`-returning functions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32841,"byte_end":32911,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/ are insufficient or just to get a preview of a line.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32916,"byte_end":32972,"line_start":333,"line_end":333,"column_start":5,"column_end":61}},{"value":"/ Note that line's content will not be considered consumed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32977,"byte_end":33037,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/ and will be available for `continue_` and `continue_line`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33042,"byte_end":33104,"line_start":335,"line_end":335,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33366,"byte_end":33376,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Gets underlying buffer back.\n","sig":null,"attributes":[{"value":"/ Gets underlying buffer back.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33322,"byte_end":33354,"line_start":343,"line_end":343,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34544,"byte_end":34549,"line_start":382,"line_end":382,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An error type containing a lineinfo.","sig":null,"attributes":[{"value":"/ An error type containing a lineinfo.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33865,"byte_end":33905,"line_start":363,"line_end":363,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33906,"byte_end":33909,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ This error is returned from a [`Reader`]'s methods,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33910,"byte_end":33965,"line_start":365,"line_end":365,"column_start":1,"column_end":56}},{"value":"/ and it contains information about location of the error (line and column).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33966,"byte_end":34044,"line_start":366,"line_end":366,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34045,"byte_end":34048,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ The error message provides a line number and a column marker rendered underneath","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34049,"byte_end":34133,"line_start":368,"line_end":368,"column_start":1,"column_end":85}},{"value":"/ the actual line:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34134,"byte_end":34154,"line_start":369,"line_end":369,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34155,"byte_end":34158,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34159,"byte_end":34170,"line_start":371,"line_end":371,"column_start":1,"column_end":12}},{"value":"/ excessive input provided at","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34171,"byte_end":34202,"line_start":372,"line_end":372,"column_start":1,"column_end":32}},{"value":"/ 1 | 42 aaa","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34203,"byte_end":34217,"line_start":373,"line_end":373,"column_start":1,"column_end":15}},{"value":"/          ^","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34218,"byte_end":34232,"line_start":374,"line_end":374,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34233,"byte_end":34240,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34241,"byte_end":34244,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ The lineinfo will be displayed when using `Display` (like in `println!(\"{}\", e)`)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34245,"byte_end":34330,"line_start":377,"line_end":377,"column_start":1,"column_end":86}},{"value":"/ or `Debug` formatting (like in `unwrap`), although `Display` is preferred.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34331,"byte_end":34409,"line_start":378,"line_end":378,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34410,"byte_end":34413,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ The pretty-printed lineinfo won't be available if [`FromStr.REQUEST_CHEAP_ERROR`] is set on","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34414,"byte_end":34509,"line_start":380,"line_end":380,"column_start":1,"column_end":96}},{"value":"/ the returned type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34510,"byte_end":34532,"line_start":381,"line_end":381,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34982,"byte_end":34992,"line_start":397,"line_end":397,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Error>::into_inner","value":"pub fn into_inner(Self) -> stream::Error","parent":null,"children":[],"decl_id":null,"docs":" Obtains an underlying error, by stripping the location info.","sig":null,"attributes":[{"value":"/ Obtains an underlying error, by stripping the location info.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34835,"byte_end":34899,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34904,"byte_end":34907,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ You can also use `.as_ref()` to get a reference to it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34912,"byte_end":34970,"line_start":396,"line_end":396,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35347,"byte_end":35355,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"location","qualname":"<Error>::location","value":"pub fn location(&Self) -> Option<(u64, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a location (line, column) of the error.","sig":null,"attributes":[{"value":"/ Obtains a location (line, column) of the error.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35036,"byte_end":35087,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35092,"byte_end":35095,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ### Return value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35100,"byte_end":35120,"line_start":401,"line_end":401,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35125,"byte_end":35128,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The tuple contains a 1-indexed number of line","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35133,"byte_end":35182,"line_start":403,"line_end":403,"column_start":5,"column_end":54}},{"value":"/ and a 1-indexed number of column.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35187,"byte_end":35224,"line_start":404,"line_end":404,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35229,"byte_end":35232,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when the location info is not available,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35237,"byte_end":35300,"line_start":406,"line_end":406,"column_start":5,"column_end":68}},{"value":"/ eg. when IO error happens.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35305,"byte_end":35335,"line_start":407,"line_end":407,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":38478,"byte_end":38484,"line_start":533,"line_end":533,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result with `Error` as an error variant.","sig":null,"attributes":[{"value":"/ Result with `Error` as an error variant.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":38383,"byte_end":38427,"line_start":530,"line_end":530,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":38428,"byte_end":38431,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ See the [`Error`] for more docs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":38432,"byte_end":38468,"line_start":532,"line_end":532,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1997,"byte_end":2007,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"parse_line","qualname":"::parse_line","value":"pub fn parse_line<T: FromStream>() -> reader::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse [`FromStream`] value from one line of stdin.","sig":null,"attributes":[{"value":"/ Parse [`FromStream`] value from one line of stdin.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1442,"byte_end":1496,"line_start":57,"line_end":57,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1497,"byte_end":1500,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Leftovers are considered an error.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1501,"byte_end":1539,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1544,"byte_end":1558,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1559,"byte_end":1572,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/ # use whiteread::parse_line;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1573,"byte_end":1605,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ let x: i32 = parse_line().unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1606,"byte_end":1645,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1646,"byte_end":1653,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1654,"byte_end":1657,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Drawbacks and alternatives","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1658,"byte_end":1690,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1691,"byte_end":1694,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This function locks a mutex and allocates a buffer, so","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1695,"byte_end":1753,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ don't use it when reading more than few lines –","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1754,"byte_end":1807,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ use [`Reader`](reader::Reader) or [`parse_stdin`] instead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1808,"byte_end":1870,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1871,"byte_end":1874,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Note that reported line number will be wrong if you're mixing this function with other ways to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1875,"byte_end":1973,"line_start":73,"line_end":73,"column_start":1,"column_end":99}},{"value":"/ read stdin.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1974,"byte_end":1989,"line_start":74,"line_end":74,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":210},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2677,"byte_end":2689,"line_start":96,"line_end":96,"column_start":8,"column_end":20},"name":"parse_string","qualname":"::parse_string","value":"pub fn parse_string<T: FromStream>(&str) -> stream::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse [`FromStream`] value from string.","sig":null,"attributes":[{"value":"/ Parse [`FromStream`] value from string.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2430,"byte_end":2473,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2474,"byte_end":2477,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Leftovers are considered an error.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2478,"byte_end":2516,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2517,"byte_end":2520,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2521,"byte_end":2535,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2536,"byte_end":2543,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_string;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2544,"byte_end":2578,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/ let number: i32 = parse_string(\" 123  \").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2579,"byte_end":2633,"line_start":93,"line_end":93,"column_start":1,"column_end":55}},{"value":"/ assert!(number == 123);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2634,"byte_end":2661,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2662,"byte_end":2669,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3310,"byte_end":3321,"line_start":117,"line_end":117,"column_start":8,"column_end":19},"name":"parse_stdin","qualname":"::parse_stdin","value":"pub fn parse_stdin<T: FromStream>() -> reader::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse the whole stdin as a [`FromStream`] value","sig":null,"attributes":[{"value":"/ Parse the whole stdin as a [`FromStream`] value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2987,"byte_end":3038,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3039,"byte_end":3042,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Use [`Reader`](reader::Reader) if you want more complex logic.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3043,"byte_end":3109,"line_start":109,"line_end":109,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3110,"byte_end":3113,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3114,"byte_end":3128,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3129,"byte_end":3136,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ # use whiteread::parse_stdin;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3137,"byte_end":3170,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/ /// Read whitespace-separated numbers from stdin, newline agnostic.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3171,"byte_end":3242,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ let numbers: Vec<i32> = parse_stdin().unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3243,"byte_end":3294,"line_start":115,"line_end":115,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3295,"byte_end":3302,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4134,"byte_end":4144,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"parse_file","qualname":"::parse_file","value":"pub fn parse_file<T: FromStream, P: AsRef<Path>>(P) -> reader::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a whole file as a [`FromStream`] value","sig":null,"attributes":[{"value":"/ Parses a whole file as a [`FromStream`] value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3524,"byte_end":3573,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3574,"byte_end":3577,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Calling this function is equivalent to:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3578,"byte_end":3621,"line_start":125,"line_end":125,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3622,"byte_end":3625,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3626,"byte_end":3639,"line_start":127,"line_end":127,"column_start":1,"column_end":14}},{"value":"/ # use whiteread::{Reader, reader, FromStream};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3640,"byte_end":3690,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/ # fn foo<T: FromStream>() -> reader::Result<T> {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3691,"byte_end":3743,"line_start":129,"line_end":129,"column_start":1,"column_end":53}},{"value":"/ # let path = \"foo\";","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3744,"byte_end":3767,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/ # Ok(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3768,"byte_end":3777,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ Reader::open(path)?.finish()?","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3778,"byte_end":3811,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/ # )","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3812,"byte_end":3819,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3820,"byte_end":3827,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3828,"byte_end":3835,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3836,"byte_end":3839,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ If you want to parse the file in multiple steps,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3840,"byte_end":3892,"line_start":137,"line_end":137,"column_start":1,"column_end":53}},{"value":"/ use [`Reader::open`](crate::reader::Reader::open).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3893,"byte_end":3947,"line_start":138,"line_end":138,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3948,"byte_end":3951,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3952,"byte_end":3966,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3967,"byte_end":3970,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Parse the whole file as an tuple.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3971,"byte_end":4008,"line_start":142,"line_end":142,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4009,"byte_end":4012,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4013,"byte_end":4026,"line_start":144,"line_end":144,"column_start":1,"column_end":14}},{"value":"/ # use whiteread::parse_file;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4027,"byte_end":4059,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ let x: (i32, i32) = parse_file(\"coords.txt\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4060,"byte_end":4118,"line_start":146,"line_end":146,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4119,"byte_end":4126,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4682,"byte_end":4697,"line_start":14,"line_end":14,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5215,"byte_end":5235,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5563,"byte_end":5583,"line_start":42,"line_end":42,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6223,"byte_end":6243,"line_start":70,"line_end":70,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10164,"byte_end":10169,"line_start":188,"line_end":188,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11582,"byte_end":11587,"line_start":240,"line_end":240,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11679,"byte_end":11684,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12391,"byte_end":12396,"line_start":264,"line_end":264,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12685,"byte_end":12690,"line_start":274,"line_end":274,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":13163,"byte_end":13169,"line_start":290,"line_end":290,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15285,"byte_end":15291,"line_start":363,"line_end":363,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15653,"byte_end":15656,"line_start":374,"line_end":374,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17298,"byte_end":17302,"line_start":41,"line_end":41,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18349,"byte_end":18356,"line_start":79,"line_end":79,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19007,"byte_end":19015,"line_start":101,"line_end":101,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20286,"byte_end":20292,"line_start":140,"line_end":140,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21701,"byte_end":21715,"line_start":182,"line_end":182,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25065,"byte_end":25071,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25376,"byte_end":25382,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25656,"byte_end":25662,"line_start":123,"line_end":123,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27242,"byte_end":27248,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28302,"byte_end":28308,"line_start":200,"line_end":200,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30180,"byte_end":30186,"line_start":256,"line_end":256,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32776,"byte_end":32782,"line_start":329,"line_end":329,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33439,"byte_end":33445,"line_start":347,"line_end":347,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34823,"byte_end":34828,"line_start":393,"line_end":393,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35728,"byte_end":35733,"line_start":424,"line_end":424,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35895,"byte_end":35900,"line_start":429,"line_end":429,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35986,"byte_end":35991,"line_start":433,"line_end":433,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37499,"byte_end":37504,"line_start":494,"line_end":494,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37738,"byte_end":37743,"line_start":503,"line_end":503,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":39553,"byte_end":39559,"line_start":572,"line_end":572,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1231,"byte_end":1237,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1282,"byte_end":1290,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1301,"byte_end":1307,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":104}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4682,"byte_end":4697,"line_start":14,"line_end":14,"column_start":24,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":32245},"to":{"krate":0,"index":8}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5215,"byte_end":5235,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5563,"byte_end":5583,"line_start":42,"line_end":42,"column_start":23,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6223,"byte_end":6243,"line_start":70,"line_end":70,"column_start":24,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":13},"to":{"krate":0,"index":8}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8277,"byte_end":8282,"line_start":130,"line_end":130,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10164,"byte_end":10169,"line_start":188,"line_end":188,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11582,"byte_end":11587,"line_start":240,"line_end":240,"column_start":26,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11679,"byte_end":11684,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12391,"byte_end":12396,"line_start":264,"line_end":264,"column_start":30,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12685,"byte_end":12690,"line_start":274,"line_end":274,"column_start":26,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":13163,"byte_end":13169,"line_start":290,"line_end":290,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":37},"to":{"krate":0,"index":56}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15285,"byte_end":15291,"line_start":363,"line_end":363,"column_start":36,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":30061},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15653,"byte_end":15656,"line_start":374,"line_end":374,"column_start":36,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17298,"byte_end":17302,"line_start":41,"line_end":41,"column_start":21,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18349,"byte_end":18356,"line_start":79,"line_end":79,"column_start":21,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":344},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19007,"byte_end":19015,"line_start":101,"line_end":101,"column_start":36,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":356},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20286,"byte_end":20292,"line_start":140,"line_end":140,"column_start":58,"column_end":64},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21701,"byte_end":21715,"line_start":182,"line_end":182,"column_start":36,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":387},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25065,"byte_end":25071,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25376,"byte_end":25382,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25656,"byte_end":25662,"line_start":123,"line_end":123,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27242,"byte_end":27248,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28302,"byte_end":28308,"line_start":200,"line_end":200,"column_start":22,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30180,"byte_end":30186,"line_start":256,"line_end":256,"column_start":22,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32776,"byte_end":32782,"line_start":329,"line_end":329,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33439,"byte_end":33445,"line_start":347,"line_end":347,"column_start":36,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":116},"to":{"krate":0,"index":8}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34823,"byte_end":34828,"line_start":393,"line_end":393,"column_start":6,"column_end":11},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35728,"byte_end":35733,"line_start":424,"line_end":424,"column_start":19,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35895,"byte_end":35900,"line_start":429,"line_end":429,"column_start":31,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35986,"byte_end":35991,"line_start":433,"line_end":433,"column_start":26,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37499,"byte_end":37504,"line_start":494,"line_end":494,"column_start":23,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37738,"byte_end":37743,"line_start":503,"line_end":503,"column_start":21,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":39553,"byte_end":39559,"line_start":572,"line_end":572,"column_start":39,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":37},"to":{"krate":0,"index":192}}]}