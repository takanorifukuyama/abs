{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0","program":"/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","ndarray","--edition=2018","/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=508ff13bb711772f","-C","extra-filename=-508ff13bb711772f","--out-dir","/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","-L","dependency=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","--extern","itertools=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libitertools-0ff2eb2d43019eca.rmeta","--extern","matrixmultiply=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libmatrixmultiply-378130eec12c79e6.rmeta","--extern","num_complex=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libnum_complex-eaf377737ad67e05.rmeta","--extern","num_integer=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libnum_integer-1f99aa184e1d3717.rmeta","--extern","num_traits=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libnum_traits-988188baa00b519e.rmeta","--extern","rawpointer=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/librawpointer-e71257293f0465a8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin"],"output":"/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libndarray-508ff13bb711772f.rmeta"},"prelude":{"crate_id":{"name":"ndarray","disambiguator":[7749706232808562481,12006900446279370150]},"crate_root":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src","external_crates":[{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9052359605736874625,10969620614104782158]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10208286902242434637,2419506206398467119]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14522653865950379425,1291702403687991040]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16226811538171955058,16445660279390814719]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8256647374517566634,12796438860464481652]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9027588853239241607,17582582296105197793]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5426963357244781228,922338936816546458]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2962871395052763982,5928641137518604403]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15745431865555696781,12103685295896601039]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7271060651791987639,13811114011233058843]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2069665013813441304,7528560138124483874]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16884418941088283343,17748518302090179015]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14905414021948729466,3432527410087948583]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13029430744807000157,16797736332599686345]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[3526016130744516730,11239067909179244643]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","num":16,"id":{"name":"rawpointer","disambiguator":[13506793365320100789,15437942847703446651]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","num":17,"id":{"name":"num_traits","disambiguator":[344943334712668755,14491639550478805414]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/layoutfmt.rs","num":18,"id":{"name":"itertools","disambiguator":[8508046514507957510,7641150692567335893]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/layoutfmt.rs","num":19,"id":{"name":"either","disambiguator":[3719988235582567121,18416629355069713505]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/mod.rs","num":20,"id":{"name":"num_integer","disambiguator":[18199956806509080168,12960280754636143235]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","num":21,"id":{"name":"num_complex","disambiguator":[12582247424512573765,13776744810384057929]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","num":22,"id":{"name":"matrixmultiply","disambiguator":[1619006672682875159,11806287295968789855]}}],"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":356,"byte_end":55123,"line_start":8,"line_end":1613,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5290,"byte_end":5291,"line_start":120,"line_end":120,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Dim","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4366},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5320,"byte_end":5324,"line_start":121,"line_end":121,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4367},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5320,"byte_end":5324,"line_start":121,"line_end":121,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4349},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5326,"byte_end":5341,"line_start":121,"line_end":121,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4350},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5326,"byte_end":5341,"line_start":121,"line_end":121,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5343,"byte_end":5352,"line_start":121,"line_end":121,"column_start":51,"column_end":60},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1936},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5354,"byte_end":5367,"line_start":121,"line_end":121,"column_start":62,"column_end":75},"alias_span":null,"name":"IntoDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5369,"byte_end":5379,"line_start":121,"line_end":121,"column_start":77,"column_end":87},"alias_span":null,"name":"RemoveAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4727},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5409,"byte_end":5418,"line_start":123,"line_end":123,"column_start":27,"column_end":36},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5446,"byte_end":5453,"line_start":124,"line_end":124,"column_start":27,"column_end":34},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3426},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5478,"byte_end":5487,"line_start":125,"line_end":125,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3422},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5489,"byte_end":5499,"line_start":125,"line_end":125,"column_start":35,"column_end":45},"alias_span":null,"name":"ShapeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5527,"byte_end":5534,"line_start":126,"line_end":126,"column_start":26,"column_end":33},"alias_span":null,"name":"indices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5536,"byte_end":5546,"line_start":126,"line_end":126,"column_start":35,"column_end":45},"alias_span":null,"name":"indices_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3856},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5572,"byte_end":5577,"line_start":127,"line_end":127,"column_start":24,"column_end":29},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5579,"byte_end":5588,"line_start":127,"line_end":127,"column_start":31,"column_end":40},"alias_span":null,"name":"SliceInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1596},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5590,"byte_end":5602,"line_start":127,"line_end":127,"column_start":42,"column_end":54},"alias_span":null,"name":"SliceNextDim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3875},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5604,"byte_end":5616,"line_start":127,"line_end":127,"column_start":56,"column_end":68},"alias_span":null,"name":"SliceOrIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5768,"byte_end":5775,"line_start":132,"line_end":132,"column_start":29,"column_end":36},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5808,"byte_end":5820,"line_start":133,"line_end":133,"column_start":32,"column_end":44},"alias_span":null,"name":"LinalgScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5822,"byte_end":5829,"line_start":133,"line_end":133,"column_start":46,"column_end":53},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1609},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5857,"byte_end":5862,"line_start":134,"line_end":134,"column_start":26,"column_end":31},"alias_span":null,"name":"stack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3211},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5892,"byte_end":5903,"line_start":136,"line_end":136,"column_start":28,"column_end":39},"alias_span":null,"name":"IndexLonger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1496},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":5935,"byte_end":5947,"line_start":137,"line_end":137,"column_start":31,"column_end":43},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6183,"byte_end":6184,"line_start":152,"line_end":152,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"ArrayView2, Ix0, ArrayD, Array4, Array1, ArrayViewMut5, ArrayViewMut2, ArrayViewD, ArrayView4, ArrayView1, Array6, Array3, Array0, ArrayViewMutD, ArrayViewMut4, ArrayViewMut1, IxDyn, Ix5, Ix4, Ix3, Ix2, Ix1, Ix6, Array5, ArrayView0, Array2, ArrayView3, ArrayView6, ArrayViewMut6, ArrayViewMut3, ArrayViewMut0, ArrayView5","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":381},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6242,"byte_end":6246,"line_start":156,"line_end":156,"column_start":5,"column_end":9},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6248,"byte_end":6257,"line_start":156,"line_end":156,"column_start":11,"column_end":20},"alias_span":null,"name":"DataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6259,"byte_end":6266,"line_start":156,"line_end":156,"column_start":22,"column_end":29},"alias_span":null,"name":"DataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6268,"byte_end":6277,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"alias_span":null,"name":"DataOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6279,"byte_end":6289,"line_start":156,"line_end":156,"column_start":42,"column_end":52},"alias_span":null,"name":"DataShared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6291,"byte_end":6298,"line_start":156,"line_end":156,"column_start":54,"column_end":61},"alias_span":null,"name":"RawData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6300,"byte_end":6312,"line_start":156,"line_end":156,"column_start":63,"column_end":75},"alias_span":null,"name":"RawDataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6314,"byte_end":6324,"line_start":156,"line_end":156,"column_start":77,"column_end":87},"alias_span":null,"name":"RawDataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6381,"byte_end":6382,"line_start":160,"line_end":160,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"arr1, aview1, aview2, aview0, aview_mut1, arr2, arr0","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6410,"byte_end":6414,"line_start":161,"line_end":161,"column_start":27,"column_end":31},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4338},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188242,"byte_end":188246,"line_start":9,"line_end":9,"column_start":27,"column_end":31},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":3454},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188273,"byte_end":188280,"line_start":10,"line_end":10,"column_start":26,"column_end":33},"alias_span":null,"name":"Indices","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":3447},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188282,"byte_end":188293,"line_start":10,"line_end":10,"column_start":35,"column_end":46},"alias_span":null,"name":"IndicesIter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188328,"byte_end":188342,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"alias_span":null,"name":"AxisChunksIter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188344,"byte_end":188361,"line_start":12,"line_end":12,"column_start":21,"column_end":38},"alias_span":null,"name":"AxisChunksIterMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":3681},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188363,"byte_end":188371,"line_start":12,"line_end":12,"column_start":40,"column_end":48},"alias_span":null,"name":"AxisIter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188373,"byte_end":188384,"line_start":12,"line_end":12,"column_start":50,"column_end":61},"alias_span":null,"name":"AxisIterMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":717},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188386,"byte_end":188397,"line_start":12,"line_end":12,"column_start":63,"column_end":74},"alias_span":null,"name":"ExactChunks","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188399,"byte_end":188414,"line_start":12,"line_end":12,"column_start":76,"column_end":91},"alias_span":null,"name":"ExactChunksIter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":764},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188420,"byte_end":188438,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"alias_span":null,"name":"ExactChunksIterMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":744},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188440,"byte_end":188454,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"ExactChunksMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":3648},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188456,"byte_end":188467,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188456,"byte_end":188467,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":785}},{"kind":"Use","ref_id":{"krate":0,"index":1007},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188469,"byte_end":188483,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188469,"byte_end":188483,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":786}},{"kind":"Use","ref_id":{"krate":0,"index":980},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188485,"byte_end":188489,"line_start":13,"line_end":13,"column_start":70,"column_end":74},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":991},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188491,"byte_end":188498,"line_start":13,"line_end":13,"column_start":76,"column_end":83},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188500,"byte_end":188505,"line_start":13,"line_end":13,"column_start":85,"column_end":90},"alias_span":null,"name":"Lanes","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188511,"byte_end":188520,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"alias_span":null,"name":"LanesIter","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":1172},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188522,"byte_end":188534,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"alias_span":null,"name":"LanesIterMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188536,"byte_end":188544,"line_start":14,"line_end":14,"column_start":30,"column_end":38},"alias_span":null,"name":"LanesMut","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":848},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188546,"byte_end":188553,"line_start":14,"line_end":14,"column_start":40,"column_end":47},"alias_span":null,"name":"Windows","value":"","parent":{"krate":0,"index":771}},{"kind":"Use","ref_id":{"krate":0,"index":4338},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/mod.rs","byte_start":271996,"byte_end":272000,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":1856}},{"kind":"Use","ref_id":{"krate":0,"index":4727},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/mod.rs","byte_start":272179,"byte_end":272188,"line_start":19,"line_end":19,"column_start":29,"column_end":38},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":1856}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/mod.rs","byte_start":272213,"byte_end":272220,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":1856}},{"kind":"Use","ref_id":{"krate":0,"index":4322},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6680,"byte_end":6689,"line_start":182,"line_end":182,"column_start":22,"column_end":31},"alias_span":null,"name":"FoldWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1651},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6691,"byte_end":6705,"line_start":182,"line_end":182,"column_start":33,"column_end":47},"alias_span":null,"name":"IntoNdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1662},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6707,"byte_end":6717,"line_start":182,"line_end":182,"column_start":49,"column_end":59},"alias_span":null,"name":"NdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4018},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6719,"byte_end":6722,"line_start":182,"line_end":182,"column_start":61,"column_end":64},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3850},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":6749,"byte_end":6755,"line_start":184,"line_end":184,"column_start":24,"column_end":30},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2503},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360650,"byte_end":360658,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"alias_span":null,"name":"ArcArray","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2506},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360660,"byte_end":360665,"line_start":24,"line_end":24,"column_start":15,"column_end":20},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2493},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360667,"byte_end":360676,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"alias_span":null,"name":"ArrayBase","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2513},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360678,"byte_end":360687,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"alias_span":null,"name":"ArrayView","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2517},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360689,"byte_end":360701,"line_start":24,"line_end":24,"column_start":44,"column_end":56},"alias_span":null,"name":"ArrayViewMut","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2509},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360703,"byte_end":360711,"line_start":24,"line_end":24,"column_start":58,"column_end":66},"alias_span":null,"name":"CowArray","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2521},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360713,"byte_end":360725,"line_start":24,"line_end":24,"column_start":68,"column_end":80},"alias_span":null,"name":"RawArrayView","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360727,"byte_end":360742,"line_start":24,"line_end":24,"column_start":82,"column_end":97},"alias_span":null,"name":"RawArrayViewMut","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":2500},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360748,"byte_end":360755,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"RcArray","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":4366},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360795,"byte_end":360799,"line_start":29,"line_end":29,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":4367},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360795,"byte_end":360799,"line_start":29,"line_end":29,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":2436}},{"kind":"Use","ref_id":{"krate":0,"index":4567},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360801,"byte_end":360804,"line_start":29,"line_end":29,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":1972},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360801,"byte_end":360804,"line_start":29,"line_end":29,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360806,"byte_end":360815,"line_start":29,"line_end":29,"column_start":28,"column_end":37},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360853,"byte_end":360859,"line_start":32,"line_end":32,"column_start":17,"column_end":23},"alias_span":null,"name":"Array0","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360861,"byte_end":360867,"line_start":32,"line_end":32,"column_start":25,"column_end":31},"alias_span":null,"name":"Array1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360869,"byte_end":360875,"line_start":32,"line_end":32,"column_start":33,"column_end":39},"alias_span":null,"name":"Array2","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360877,"byte_end":360883,"line_start":32,"line_end":32,"column_start":41,"column_end":47},"alias_span":null,"name":"Array3","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360885,"byte_end":360891,"line_start":32,"line_end":32,"column_start":49,"column_end":55},"alias_span":null,"name":"Array4","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360893,"byte_end":360899,"line_start":32,"line_end":32,"column_start":57,"column_end":63},"alias_span":null,"name":"Array5","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":95},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360901,"byte_end":360907,"line_start":32,"line_end":32,"column_start":65,"column_end":71},"alias_span":null,"name":"Array6","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360909,"byte_end":360915,"line_start":32,"line_end":32,"column_start":73,"column_end":79},"alias_span":null,"name":"ArrayD","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360958,"byte_end":360968,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"alias_span":null,"name":"ArrayView0","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360970,"byte_end":360980,"line_start":36,"line_end":36,"column_start":17,"column_end":27},"alias_span":null,"name":"ArrayView1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":105},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360982,"byte_end":360992,"line_start":36,"line_end":36,"column_start":29,"column_end":39},"alias_span":null,"name":"ArrayView2","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360994,"byte_end":361004,"line_start":36,"line_end":36,"column_start":41,"column_end":51},"alias_span":null,"name":"ArrayView3","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361006,"byte_end":361016,"line_start":36,"line_end":36,"column_start":53,"column_end":63},"alias_span":null,"name":"ArrayView4","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361018,"byte_end":361028,"line_start":36,"line_end":36,"column_start":65,"column_end":75},"alias_span":null,"name":"ArrayView5","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361030,"byte_end":361040,"line_start":36,"line_end":36,"column_start":77,"column_end":87},"alias_span":null,"name":"ArrayView6","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361042,"byte_end":361052,"line_start":36,"line_end":36,"column_start":89,"column_end":99},"alias_span":null,"name":"ArrayViewD","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361097,"byte_end":361110,"line_start":41,"line_end":41,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut0","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361112,"byte_end":361125,"line_start":41,"line_end":41,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMut1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361127,"byte_end":361140,"line_start":41,"line_end":41,"column_start":35,"column_end":48},"alias_span":null,"name":"ArrayViewMut2","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361142,"byte_end":361155,"line_start":41,"line_end":41,"column_start":50,"column_end":63},"alias_span":null,"name":"ArrayViewMut3","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361157,"byte_end":361170,"line_start":41,"line_end":41,"column_start":65,"column_end":78},"alias_span":null,"name":"ArrayViewMut4","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361172,"byte_end":361185,"line_start":41,"line_end":41,"column_start":80,"column_end":93},"alias_span":null,"name":"ArrayViewMut5","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361191,"byte_end":361204,"line_start":42,"line_end":42,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut6","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361206,"byte_end":361219,"line_start":42,"line_end":42,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMutD","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361259,"byte_end":361262,"line_start":46,"line_end":46,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361259,"byte_end":361262,"line_start":46,"line_end":46,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361264,"byte_end":361267,"line_start":46,"line_end":46,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361264,"byte_end":361267,"line_start":46,"line_end":46,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361269,"byte_end":361272,"line_start":46,"line_end":46,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361269,"byte_end":361272,"line_start":46,"line_end":46,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":2469}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361274,"byte_end":361277,"line_start":46,"line_end":46,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361274,"byte_end":361277,"line_start":46,"line_end":46,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":2470}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361279,"byte_end":361282,"line_start":46,"line_end":46,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361279,"byte_end":361282,"line_start":46,"line_end":46,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":2471}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361284,"byte_end":361287,"line_start":46,"line_end":46,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361284,"byte_end":361287,"line_start":46,"line_end":46,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":2472}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361289,"byte_end":361292,"line_start":46,"line_end":46,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361289,"byte_end":361292,"line_start":46,"line_end":46,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":2473}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361294,"byte_end":361299,"line_start":46,"line_end":46,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361294,"byte_end":361299,"line_start":46,"line_end":46,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":2474}},{"kind":"Use","ref_id":{"krate":0,"index":539},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361337,"byte_end":361341,"line_start":49,"line_end":49,"column_start":17,"column_end":21},"alias_span":null,"name":"arr0","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361343,"byte_end":361347,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"alias_span":null,"name":"arr1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361349,"byte_end":361353,"line_start":49,"line_end":49,"column_start":29,"column_end":33},"alias_span":null,"name":"arr2","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361355,"byte_end":361361,"line_start":49,"line_end":49,"column_start":35,"column_end":41},"alias_span":null,"name":"aview0","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361363,"byte_end":361369,"line_start":49,"line_end":49,"column_start":43,"column_end":49},"alias_span":null,"name":"aview1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361371,"byte_end":361377,"line_start":49,"line_end":49,"column_start":51,"column_end":57},"alias_span":null,"name":"aview2","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361379,"byte_end":361389,"line_start":49,"line_end":49,"column_start":59,"column_end":69},"alias_span":null,"name":"aview_mut1","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361409,"byte_end":361414,"line_start":51,"line_end":51,"column_start":17,"column_end":22},"alias_span":null,"name":"array","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":1618},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361416,"byte_end":361420,"line_start":51,"line_end":51,"column_start":24,"column_end":28},"alias_span":null,"name":"azip","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361422,"byte_end":361423,"line_start":51,"line_end":51,"column_start":30,"column_end":31},"alias_span":null,"name":"s","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":1496},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361460,"byte_end":361472,"line_start":54,"line_end":54,"column_start":16,"column_end":28},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361509,"byte_end":361516,"line_start":57,"line_end":57,"column_start":17,"column_end":24},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":361518,"byte_end":361525,"line_start":57,"line_end":57,"column_start":26,"column_end":33},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":2424}},{"kind":"Use","ref_id":{"krate":0,"index":4858},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49496,"byte_end":49508,"line_start":1388,"line_end":1388,"column_start":15,"column_end":27},"alias_span":null,"name":"OwnedRcRepr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4859},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49496,"byte_end":49508,"line_start":1388,"line_end":1388,"column_start":15,"column_end":27},"alias_span":null,"name":"OwnedRcRepr","value":"","parent":{"krate":0,"index":2527}},{"kind":"Use","ref_id":{"krate":0,"index":3033},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/mod.rs","byte_start":476193,"byte_end":476208,"line_start":11,"line_end":11,"column_start":28,"column_end":43},"alias_span":null,"name":"general_mat_mul","value":"","parent":{"krate":0,"index":2966}},{"kind":"Use","ref_id":{"krate":0,"index":3038},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/mod.rs","byte_start":476237,"byte_end":476256,"line_start":12,"line_end":12,"column_start":28,"column_end":47},"alias_span":null,"name":"general_mat_vec_mul","value":"","parent":{"krate":0,"index":2966}},{"kind":"Use","ref_id":{"krate":0,"index":2986},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/mod.rs","byte_start":476285,"byte_end":476288,"line_start":13,"line_end":13,"column_start":28,"column_end":31},"alias_span":null,"name":"Dot","value":"","parent":{"krate":0,"index":2966}},{"kind":"Use","ref_id":{"krate":0,"index":3053},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54432,"byte_end":54445,"line_start":1582,"line_end":1582,"column_start":26,"column_end":39},"alias_span":null,"name":"ScalarOperand","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":356,"byte_end":55123,"line_start":8,"line_end":1613,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6920},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":6924},{"krate":0,"index":8},{"krate":0,"index":6926},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":46},{"krate":0,"index":51},{"krate":0,"index":151},{"krate":0,"index":222},{"krate":0,"index":354},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":608},{"krate":0,"index":615},{"krate":0,"index":636},{"krate":0,"index":695},{"krate":0,"index":1384},{"krate":0,"index":1410},{"krate":0,"index":1434},{"krate":0,"index":1456},{"krate":0,"index":1478},{"krate":0,"index":1490},{"krate":0,"index":1529},{"krate":0,"index":1603},{"krate":0,"index":1616},{"krate":0,"index":1856},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2424},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2513},{"krate":0,"index":2517},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":4848},{"krate":0,"index":4855},{"krate":0,"index":4852},{"krate":0,"index":2527},{"krate":0,"index":7712},{"krate":0,"index":4858},{"krate":0,"index":4862},{"krate":0,"index":2528},{"krate":0,"index":4865},{"krate":0,"index":4871},{"krate":0,"index":4868},{"krate":0,"index":2531},{"krate":0,"index":4873},{"krate":0,"index":4879},{"krate":0,"index":4876},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2546},{"krate":0,"index":2551},{"krate":0,"index":2562},{"krate":0,"index":2622},{"krate":0,"index":2875},{"krate":0,"index":2884},{"krate":0,"index":2902},{"krate":0,"index":2908},{"krate":0,"index":2922},{"krate":0,"index":2929},{"krate":0,"index":2966},{"krate":0,"index":3051},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3254},{"krate":0,"index":3284},{"krate":0,"index":6895},{"krate":0,"index":6905},{"krate":0,"index":6902},{"krate":0,"index":6899},{"krate":0,"index":6907},{"krate":0,"index":6918},{"krate":0,"index":6915},{"krate":0,"index":6912},{"krate":0,"index":3302}],"decl_id":null,"docs":" The `ndarray` crate provides an *n*-dimensional container for general elements\n and for numerics.","sig":null,"attributes":[{"value":"crate_name = \"ndarray\"","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":356,"byte_end":382,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"allow(clippy :: many_single_char_names, clippy :: deref_addrof, clippy ::\n        unreadable_literal, clippy :: many_single_char_names)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":440,"byte_end":581,"line_start":10,"line_end":15,"column_start":1,"column_end":3}},{"value":"/ The `ndarray` crate provides an *n*-dimensional container for general elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":583,"byte_end":665,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ and for numerics.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":666,"byte_end":687,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":688,"byte_end":691,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":692,"byte_end":768,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":769,"byte_end":848,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element in the array is accessed by using that many indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":849,"byte_end":933,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ Each dimension is also called an *axis*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":934,"byte_end":978,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":979,"byte_end":982,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - **[`ArrayBase`](struct.ArrayBase.html)**:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":983,"byte_end":1030,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/   The *n*-dimensional array type itself.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1031,"byte_end":1079,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/   It is used to implement both the owned arrays and the views; see its docs","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1080,"byte_end":1159,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/   for an overview of all array features.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1160,"byte_end":1208,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ - The main specific array type is **[`Array`](type.Array.html)**, which owns","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1209,"byte_end":1289,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ its elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1290,"byte_end":1307,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1308,"byte_end":1311,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Highlights","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1312,"byte_end":1329,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1330,"byte_end":1333,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Generic *n*-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1334,"byte_end":1369,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ - Slicing, also with arbitrary step size, and negative indices to mean","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1370,"byte_end":1444,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/   elements from the end of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1445,"byte_end":1485,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ - Views and subviews of arrays; iterators that yield subviews.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1486,"byte_end":1552,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ - Higher order operations and arithmetic are performant","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1553,"byte_end":1612,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ - Array views can be used to slice and mutate any `[T]` data using","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1613,"byte_end":1683,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/   `ArrayView::from` and `ArrayViewMut::from`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1684,"byte_end":1733,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ - [`Zip`](struct.Zip.html) for lock step function application across two or more arrays or other","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1734,"byte_end":1834,"line_start":41,"line_end":41,"column_start":1,"column_end":101}},{"value":"/   item producers ([`NdProducer`](trait.NdProducer.html) trait).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1835,"byte_end":1902,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Crate Status","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1907,"byte_end":1926,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1927,"byte_end":1930,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - Still iterating on and evolving the crate","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1931,"byte_end":1978,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/   + The crate is continuously developing, and breaking changes are expected","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":1979,"byte_end":2058,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/     during evolution from version to version. We adopt the newest stable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2059,"byte_end":2135,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/     rust features if we need them.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2136,"byte_end":2174,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/   + Note that functions/methods/traits/etc. hidden from the docs are not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2175,"byte_end":2251,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/     considered part of the public API, so changes to them are not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2252,"byte_end":2321,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/     considered breaking changes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2322,"byte_end":2358,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ - Performance:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2359,"byte_end":2377,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/   + Prefer higher order methods and arithmetic operations on arrays first,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2378,"byte_end":2456,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/     then iteration, and as a last priority using indexed algorithms.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2457,"byte_end":2529,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/   + The higher order functions like ``.map()``, ``.map_inplace()``,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2530,"byte_end":2601,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/     ``.zip_mut_with()``, ``Zip`` and ``azip!()`` are the most efficient ways","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2602,"byte_end":2682,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/     to perform single traversal and lock step traversal respectively.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2683,"byte_end":2756,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/   + Performance of an operation depends on the memory layout of the array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2757,"byte_end":2834,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/     or array view. Especially if it's a binary operation, which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2835,"byte_end":2902,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/     needs matching memory layout to be efficient (with some exceptions).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2903,"byte_end":2979,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/   + Efficient floating point matrix multiplication even for very large","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":2980,"byte_end":3054,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/     matrices; can optionally use BLAS to improve it further.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3055,"byte_end":3119,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ - **Requires Rust 1.37 or later**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3120,"byte_end":3157,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3158,"byte_end":3161,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3162,"byte_end":3188,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3189,"byte_end":3192,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available. They are configured in your","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3193,"byte_end":3273,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3274,"byte_end":3291,"line_start":69,"line_end":69,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3292,"byte_end":3295,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3296,"byte_end":3309,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/   - Optional, compatible with Rust stable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3310,"byte_end":3355,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   - Enables serialization support for serde 1.x","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3356,"byte_end":3407,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ - `rayon`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3408,"byte_end":3421,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/   - Optional, compatible with Rust stable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3422,"byte_end":3467,"line_start":75,"line_end":75,"column_start":1,"column_end":46}},{"value":"/   - Enables parallel iterators, parallelized methods and [`par_azip!`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3468,"byte_end":3543,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ - `approx`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3544,"byte_end":3558,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/   - Optional, compatible with Rust stable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3559,"byte_end":3604,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/   - Enables implementations of traits from the [`approx`] crate.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3605,"byte_end":3673,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ - `blas`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3674,"byte_end":3686,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/   - Optional and experimental, compatible with Rust stable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3687,"byte_end":3749,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/   - Enable transparent BLAS support for matrix multiplication.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3750,"byte_end":3816,"line_start":82,"line_end":82,"column_start":1,"column_end":67}},{"value":"/     Uses ``blas-src`` for pluggable backend, which needs to be configured","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3817,"byte_end":3894,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/     separately.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3895,"byte_end":3914,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3915,"byte_end":3918,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3919,"byte_end":3939,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3940,"byte_end":3943,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * The docs for [`ArrayBase`](struct.ArrayBase.html) provide an overview of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":3944,"byte_end":4022,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/   the *n*-dimensional array type. Other good pages to look at are the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4023,"byte_end":4096,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/   documentation for the [`s![]`](macro.s.html) and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4097,"byte_end":4151,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/   [`azip!()`](macro.azip.html) macros.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4152,"byte_end":4194,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4195,"byte_end":4198,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ * If you have experience with NumPy, you may also be interested in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4199,"byte_end":4269,"line_start":93,"line_end":93,"column_start":1,"column_end":71}},{"value":"/   [`ndarray_for_numpy_users`](doc/ndarray_for_numpy_users/index.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4270,"byte_end":4344,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4345,"byte_end":4348,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ## The ndarray ecosystem","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4349,"byte_end":4377,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4378,"byte_end":4381,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ `ndarray` provides a lot of functionality, but it's not a one-stop solution.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4382,"byte_end":4462,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4463,"byte_end":4466,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ `ndarray` includes matrix multiplication and other binary/unary operations out of the box.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4467,"byte_end":4561,"line_start":100,"line_end":100,"column_start":1,"column_end":95}},{"value":"/ More advanced linear algebra routines (e.g. SVD decomposition or eigenvalue computation)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4562,"byte_end":4654,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ can be found in [`ndarray-linalg`](https://crates.io/crates/ndarray-linalg).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4655,"byte_end":4735,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4736,"byte_end":4739,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The same holds for statistics: `ndarray` provides some basic functionalities (e.g. `mean`)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4740,"byte_end":4834,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/ but more advanced routines can be found in [`ndarray-stats`](https://crates.io/crates/ndarray-stats).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4835,"byte_end":4940,"line_start":105,"line_end":105,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4941,"byte_end":4944,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ If you are looking to generate random arrays instead, check out [`ndarray-rand`](https://crates.io/crates/ndarray-rand).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":4945,"byte_end":5069,"line_start":107,"line_end":107,"column_start":1,"column_end":125}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/private.rs","byte_start":57561,"byte_end":57574,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/private.rs","byte_start":57429,"byte_end":57494,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/private.rs","byte_start":57495,"byte_end":57549,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58261,"byte_end":58264,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"Ix0","qualname":"::aliases::Ix0","value":"pub fn Ix0() -> Ix0","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58175,"byte_end":58210,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58211,"byte_end":58235,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58236,"byte_end":58253,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58380,"byte_end":58383,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"Ix1","qualname":"::aliases::Ix1","value":"pub fn Ix1(Ix) -> Ix1","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58295,"byte_end":58329,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58330,"byte_end":58354,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58355,"byte_end":58372,"line_start":16,"line_end":16,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58507,"byte_end":58510,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"Ix2","qualname":"::aliases::Ix2","value":"pub fn Ix2(Ix, Ix) -> Ix2","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a two-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58422,"byte_end":58456,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58457,"byte_end":58481,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58482,"byte_end":58499,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58648,"byte_end":58651,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"Ix3","qualname":"::aliases::Ix3","value":"pub fn Ix3(Ix, Ix, Ix) -> Ix3","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58561,"byte_end":58597,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58598,"byte_end":58622,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58623,"byte_end":58640,"line_start":28,"line_end":28,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58800,"byte_end":58803,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"Ix4","qualname":"::aliases::Ix4","value":"pub fn Ix4(Ix, Ix, Ix, Ix) -> Ix4","parent":null,"children":[],"decl_id":null,"docs":" Create a four-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a four-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58714,"byte_end":58749,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58750,"byte_end":58774,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58775,"byte_end":58792,"line_start":34,"line_end":34,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58964,"byte_end":58967,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"Ix5","qualname":"::aliases::Ix5","value":"pub fn Ix5(Ix, Ix, Ix, Ix, Ix) -> Ix5","parent":null,"children":[],"decl_id":null,"docs":" Create a five-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a five-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58878,"byte_end":58913,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58914,"byte_end":58938,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":58939,"byte_end":58956,"line_start":40,"line_end":40,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59139,"byte_end":59142,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"Ix6","qualname":"::aliases::Ix6","value":"pub fn Ix6(Ix, Ix, Ix, Ix, Ix, Ix) -> Ix6","parent":null,"children":[],"decl_id":null,"docs":" Create a six-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a six-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59054,"byte_end":59088,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59089,"byte_end":59113,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59114,"byte_end":59131,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59331,"byte_end":59336,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"pub fn IxDyn(&[Ix]) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a dynamic-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a dynamic-dimensional index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59242,"byte_end":59280,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59281,"byte_end":59305,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59306,"byte_end":59323,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":68},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59405,"byte_end":59408,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"Ix0","qualname":"::aliases::Ix0","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensionial\n","sig":null,"attributes":[{"value":"/ zero-dimensionial","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59374,"byte_end":59395,"line_start":58,"line_end":58,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59454,"byte_end":59457,"line_start":61,"line_end":61,"column_start":10,"column_end":13},"name":"Ix1","qualname":"::aliases::Ix1","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional\n","sig":null,"attributes":[{"value":"/ one-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59425,"byte_end":59444,"line_start":60,"line_end":60,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59503,"byte_end":59506,"line_start":63,"line_end":63,"column_start":10,"column_end":13},"name":"Ix2","qualname":"::aliases::Ix2","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional\n","sig":null,"attributes":[{"value":"/ two-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59474,"byte_end":59493,"line_start":62,"line_end":62,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59554,"byte_end":59557,"line_start":65,"line_end":65,"column_start":10,"column_end":13},"name":"Ix3","qualname":"::aliases::Ix3","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional\n","sig":null,"attributes":[{"value":"/ three-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59523,"byte_end":59544,"line_start":64,"line_end":64,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59604,"byte_end":59607,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"Ix4","qualname":"::aliases::Ix4","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional\n","sig":null,"attributes":[{"value":"/ four-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59574,"byte_end":59594,"line_start":66,"line_end":66,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59654,"byte_end":59657,"line_start":69,"line_end":69,"column_start":10,"column_end":13},"name":"Ix5","qualname":"::aliases::Ix5","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional\n","sig":null,"attributes":[{"value":"/ five-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59624,"byte_end":59644,"line_start":68,"line_end":68,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59703,"byte_end":59706,"line_start":71,"line_end":71,"column_start":10,"column_end":13},"name":"Ix6","qualname":"::aliases::Ix6","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional\n","sig":null,"attributes":[{"value":"/ six-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59674,"byte_end":59693,"line_start":70,"line_end":70,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60775,"byte_end":60780,"line_start":100,"line_end":100,"column_start":10,"column_end":15},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"Dim<IxDynImpl>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional","sig":null,"attributes":[{"value":"/ dynamic-dimensional","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59723,"byte_end":59746,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59747,"byte_end":59750,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ You can use the `IxDyn` function to create a dimension for an array with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59751,"byte_end":59827,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ dynamic number of dimensions.  (`Vec<usize>` and `&[usize]` also implement","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59828,"byte_end":59906,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ `IntoDimension` to produce `IxDyn`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59907,"byte_end":59947,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59948,"byte_end":59951,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59952,"byte_end":59959,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use ndarray::ArrayD;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59960,"byte_end":59984,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ use ndarray::IxDyn;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":59985,"byte_end":60008,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60009,"byte_end":60012,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Create a 5 × 6 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60013,"byte_end":60084,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ let mut a = ArrayD::<f64>::zeros(IxDyn(&[5, 6, 3, 4]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60085,"byte_end":60144,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/ // Create a 1 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60145,"byte_end":60211,"line_start":84,"line_end":84,"column_start":1,"column_end":65}},{"value":"/ let mut b = ArrayD::<f64>::zeros(IxDyn(&[1, 3, 4]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60212,"byte_end":60268,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60269,"byte_end":60272,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // We can use broadcasting to add arrays of compatible shapes together:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60273,"byte_end":60348,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ a += &b;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60349,"byte_end":60361,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60362,"byte_end":60365,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // We can index into a, b using fixed size arrays:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60366,"byte_end":60420,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/ a[[0, 0, 0, 0]] = 0.;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60421,"byte_end":60446,"line_start":91,"line_end":91,"column_start":1,"column_end":26}},{"value":"/ b[[0, 2, 3]] = a[[0, 0, 2, 3]];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60447,"byte_end":60482,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/ // Note: indexing will panic at runtime if the number of indices given does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60483,"byte_end":60562,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ // not match the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60563,"byte_end":60590,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60591,"byte_end":60594,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // We can keep them in the same vector because both the arrays have","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60595,"byte_end":60666,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ // the same type `Array<f64, IxDyn>` a.k.a `ArrayD<f64>`:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60667,"byte_end":60728,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/ let arrays = vec![a, b];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60729,"byte_end":60757,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60758,"byte_end":60765,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60836,"byte_end":60842,"line_start":103,"line_end":103,"column_start":10,"column_end":16},"name":"Array0","qualname":"::aliases::Array0","value":"Array<A, Ix0>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array\n","sig":null,"attributes":[{"value":"/ zero-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60800,"byte_end":60826,"line_start":102,"line_end":102,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60898,"byte_end":60904,"line_start":105,"line_end":105,"column_start":10,"column_end":16},"name":"Array1","qualname":"::aliases::Array1","value":"Array<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array\n","sig":null,"attributes":[{"value":"/ one-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60863,"byte_end":60888,"line_start":104,"line_end":104,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":87},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60960,"byte_end":60966,"line_start":107,"line_end":107,"column_start":10,"column_end":16},"name":"Array2","qualname":"::aliases::Array2","value":"Array<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array\n","sig":null,"attributes":[{"value":"/ two-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60925,"byte_end":60950,"line_start":106,"line_end":106,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61024,"byte_end":61030,"line_start":109,"line_end":109,"column_start":10,"column_end":16},"name":"Array3","qualname":"::aliases::Array3","value":"Array<A, Ix3>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array\n","sig":null,"attributes":[{"value":"/ three-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":60987,"byte_end":61014,"line_start":108,"line_end":108,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61087,"byte_end":61093,"line_start":111,"line_end":111,"column_start":10,"column_end":16},"name":"Array4","qualname":"::aliases::Array4","value":"Array<A, Ix4>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array\n","sig":null,"attributes":[{"value":"/ four-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61051,"byte_end":61077,"line_start":110,"line_end":110,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61150,"byte_end":61156,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"Array5","qualname":"::aliases::Array5","value":"Array<A, Ix5>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array\n","sig":null,"attributes":[{"value":"/ five-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61114,"byte_end":61140,"line_start":112,"line_end":112,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61212,"byte_end":61218,"line_start":115,"line_end":115,"column_start":10,"column_end":16},"name":"Array6","qualname":"::aliases::Array6","value":"Array<A, Ix6>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array\n","sig":null,"attributes":[{"value":"/ six-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61177,"byte_end":61202,"line_start":114,"line_end":114,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61278,"byte_end":61284,"line_start":117,"line_end":117,"column_start":10,"column_end":16},"name":"ArrayD","qualname":"::aliases::ArrayD","value":"Array<A, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61239,"byte_end":61268,"line_start":116,"line_end":116,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61349,"byte_end":61359,"line_start":120,"line_end":120,"column_start":10,"column_end":20},"name":"ArrayView0","qualname":"::aliases::ArrayView0","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61308,"byte_end":61339,"line_start":119,"line_end":119,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61432,"byte_end":61442,"line_start":122,"line_end":122,"column_start":10,"column_end":20},"name":"ArrayView1","qualname":"::aliases::ArrayView1","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array view\n","sig":null,"attributes":[{"value":"/ one-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61392,"byte_end":61422,"line_start":121,"line_end":121,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61515,"byte_end":61525,"line_start":124,"line_end":124,"column_start":10,"column_end":20},"name":"ArrayView2","qualname":"::aliases::ArrayView2","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array view\n","sig":null,"attributes":[{"value":"/ two-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61475,"byte_end":61505,"line_start":123,"line_end":123,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61600,"byte_end":61610,"line_start":126,"line_end":126,"column_start":10,"column_end":20},"name":"ArrayView3","qualname":"::aliases::ArrayView3","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array view\n","sig":null,"attributes":[{"value":"/ three-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61558,"byte_end":61590,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":111},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61684,"byte_end":61694,"line_start":128,"line_end":128,"column_start":10,"column_end":20},"name":"ArrayView4","qualname":"::aliases::ArrayView4","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array view\n","sig":null,"attributes":[{"value":"/ four-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61643,"byte_end":61674,"line_start":127,"line_end":127,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":114},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61768,"byte_end":61778,"line_start":130,"line_end":130,"column_start":10,"column_end":20},"name":"ArrayView5","qualname":"::aliases::ArrayView5","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array view\n","sig":null,"attributes":[{"value":"/ five-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61727,"byte_end":61758,"line_start":129,"line_end":129,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":117},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61851,"byte_end":61861,"line_start":132,"line_end":132,"column_start":10,"column_end":20},"name":"ArrayView6","qualname":"::aliases::ArrayView6","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array view\n","sig":null,"attributes":[{"value":"/ six-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61811,"byte_end":61841,"line_start":131,"line_end":131,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":120},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61938,"byte_end":61948,"line_start":134,"line_end":134,"column_start":10,"column_end":20},"name":"ArrayViewD","qualname":"::aliases::ArrayViewD","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61894,"byte_end":61928,"line_start":133,"line_end":133,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":123},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62036,"byte_end":62049,"line_start":137,"line_end":137,"column_start":10,"column_end":23},"name":"ArrayViewMut0","qualname":"::aliases::ArrayViewMut0","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":61984,"byte_end":62026,"line_start":136,"line_end":136,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62136,"byte_end":62149,"line_start":139,"line_end":139,"column_start":10,"column_end":23},"name":"ArrayViewMut1","qualname":"::aliases::ArrayViewMut1","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ one-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62085,"byte_end":62126,"line_start":138,"line_end":138,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62236,"byte_end":62249,"line_start":141,"line_end":141,"column_start":10,"column_end":23},"name":"ArrayViewMut2","qualname":"::aliases::ArrayViewMut2","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ two-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62185,"byte_end":62226,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62338,"byte_end":62351,"line_start":143,"line_end":143,"column_start":10,"column_end":23},"name":"ArrayViewMut3","qualname":"::aliases::ArrayViewMut3","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ three-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62285,"byte_end":62328,"line_start":142,"line_end":142,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62439,"byte_end":62452,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"ArrayViewMut4","qualname":"::aliases::ArrayViewMut4","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ four-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62387,"byte_end":62429,"line_start":144,"line_end":144,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62540,"byte_end":62553,"line_start":147,"line_end":147,"column_start":10,"column_end":23},"name":"ArrayViewMut5","qualname":"::aliases::ArrayViewMut5","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ five-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62488,"byte_end":62530,"line_start":146,"line_end":146,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":141},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62640,"byte_end":62653,"line_start":149,"line_end":149,"column_start":10,"column_end":23},"name":"ArrayViewMut6","qualname":"::aliases::ArrayViewMut6","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ six-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62589,"byte_end":62630,"line_start":148,"line_end":148,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62744,"byte_end":62757,"line_start":151,"line_end":151,"column_start":10,"column_end":23},"name":"ArrayViewMutD","qualname":"::aliases::ArrayViewMutD","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional read-write array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62689,"byte_end":62734,"line_start":150,"line_end":150,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":147},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62934,"byte_end":62942,"line_start":156,"line_end":156,"column_start":10,"column_end":18},"name":"RcArray1","qualname":"::aliases::RcArray1","value":"RcArray<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ one-dimensional shared ownership array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62796,"byte_end":62838,"line_start":153,"line_end":153,"column_start":1,"column_end":43}},{"value":"allow(deprecated)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62839,"byte_end":62859,"line_start":154,"line_end":154,"column_start":1,"column_end":21}},{"value":"deprecated(note = \"`RcArray` has been renamed to `ArcArray`\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62860,"byte_end":62924,"line_start":155,"line_end":155,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":149},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":63103,"byte_end":63111,"line_start":160,"line_end":160,"column_start":10,"column_end":18},"name":"RcArray2","qualname":"::aliases::RcArray2","value":"RcArray<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ two-dimensional shared ownership array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":62965,"byte_end":63007,"line_start":157,"line_end":157,"column_start":1,"column_end":43}},{"value":"allow(deprecated)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":63008,"byte_end":63028,"line_start":158,"line_end":158,"column_start":1,"column_end":21}},{"value":"deprecated(note = \"`RcArray` has been renamed to `ArcArray`\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/aliases.rs","byte_start":63029,"byte_end":63093,"line_start":159,"line_end":159,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":340},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95277,"byte_end":95284,"line_start":357,"line_end":357,"column_start":11,"column_end":18},"name":"AsArray","qualname":"::arraytraits::AsArray","value":"AsArray<'a, A: 'a, D = Ix1>: Into<ArrayView>","parent":null,"children":[],"decl_id":null,"docs":" Argument conversion into an array view","sig":null,"attributes":[{"value":"/ Argument conversion into an array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94795,"byte_end":94837,"line_start":336,"line_end":336,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94838,"byte_end":94841,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ The trait is parameterized over `A`, the element type, and `D`, the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94842,"byte_end":94913,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ dimensionality of the array. `D` defaults to one-dimensional.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94914,"byte_end":94979,"line_start":339,"line_end":339,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94980,"byte_end":94983,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ Use `.into()` to do the conversion.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94984,"byte_end":95023,"line_start":341,"line_end":341,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95024,"byte_end":95027,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95028,"byte_end":95035,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ use ndarray::AsArray;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95036,"byte_end":95061,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95062,"byte_end":95065,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ fn sum<'a, V: AsArray<'a, f64>>(data: V) -> f64 {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95066,"byte_end":95119,"line_start":346,"line_end":346,"column_start":1,"column_end":54}},{"value":"/     let array_view = data.into();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95120,"byte_end":95157,"line_start":347,"line_end":347,"column_start":1,"column_end":38}},{"value":"/     array_view.sum()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95158,"byte_end":95182,"line_start":348,"line_end":348,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95183,"byte_end":95188,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95189,"byte_end":95192,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95193,"byte_end":95208,"line_start":351,"line_end":351,"column_start":1,"column_end":16}},{"value":"/     sum(&[1., 2., 3.]),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95209,"byte_end":95236,"line_start":352,"line_end":352,"column_start":1,"column_end":28}},{"value":"/     6.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95237,"byte_end":95247,"line_start":353,"line_end":353,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95248,"byte_end":95254,"line_start":354,"line_end":354,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95255,"byte_end":95258,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95259,"byte_end":95266,"line_start":356,"line_end":356,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":371},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97461,"byte_end":97468,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"name":"RawData","qualname":"::data_traits::RawData","value":"RawData: Sized","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":3312}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97013,"byte_end":97044,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97045,"byte_end":97048,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For an array that meets the invariants of the `ArrayBase` type. This trait","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97049,"byte_end":97127,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ does not imply any ownership or lifetime; pointers to elements in the array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97128,"byte_end":97207,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ may not be safe to dereference.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97208,"byte_end":97243,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97244,"byte_end":97247,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ***Note:*** `RawData` is not an extension interface at this point.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97248,"byte_end":97318,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ Traits in Rust can serve many different roles. This trait is public because","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97319,"byte_end":97398,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ it is used as a bound on public methods.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97399,"byte_end":97443,"line_start":29,"line_end":29,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97519,"byte_end":97523,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"name":"Elem","qualname":"::data_traits::RawData::Elem","value":"type Elem;","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":" The array element type.\n","sig":null,"attributes":[{"value":"/ The array element type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97482,"byte_end":97509,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97598,"byte_end":97609,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"_data_slice","qualname":"::data_traits::RawData::_data_slice","value":"pub fn _data_slice(&Self) -> Option<&[Self::Elem]>","parent":{"krate":0,"index":371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":374},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97807,"byte_end":97817,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"name":"RawDataMut","qualname":"::data_traits::RawDataMut","value":"RawDataMut: RawData","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":377}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97668,"byte_end":97699,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97700,"byte_end":97703,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97704,"byte_end":97744,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97745,"byte_end":97748,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97749,"byte_end":97789,"line_start":45,"line_end":45,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98070,"byte_end":98087,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"try_ensure_unique","qualname":"::data_traits::RawDataMut::try_ensure_unique","value":"pub fn try_ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" If possible, ensures that the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, ensures that the array has unique access to its data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97833,"byte_end":97903,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97908,"byte_end":97911,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97916,"byte_end":97985,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ **must** panic or ensure that the data is unique.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97990,"byte_end":98043,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98394,"byte_end":98407,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"try_is_unique","qualname":"::data_traits::RawDataMut::try_is_unique","value":"pub fn try_is_unique(&mut Self) -> Option<bool>","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" If possible, returns whether the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, returns whether the array has unique access to its data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98177,"byte_end":98250,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98255,"byte_end":98258,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98263,"byte_end":98332,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ **must** return `Some(_)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98337,"byte_end":98367,"line_start":60,"line_end":60,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98585,"byte_end":98597,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"name":"RawDataClone","qualname":"::data_traits::RawDataClone","value":"RawDataClone: RawData","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98439,"byte_end":98470,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98471,"byte_end":98474,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98475,"byte_end":98522,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98523,"byte_end":98526,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98527,"byte_end":98567,"line_start":69,"line_end":69,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98711,"byte_end":98725,"line_start":73,"line_end":73,"column_start":15,"column_end":29},"name":"clone_with_ptr","qualname":"::data_traits::RawDataClone::clone_with_ptr","value":"pub unsafe fn clone_with_ptr(&Self, NonNull<Self::Elem>)\n-> (Self, NonNull<Self::Elem>)","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Unsafe because, `ptr` must point inside the current storage.\n","sig":null,"attributes":[{"value":"/ Unsafe because, `ptr` must point inside the current storage.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98632,"byte_end":98696,"line_start":72,"line_end":72,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98825,"byte_end":98844,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"clone_from_with_ptr","qualname":"::data_traits::RawDataClone::clone_from_with_ptr","value":"pub unsafe fn clone_from_with_ptr(&mut Self, &Self, NonNull<Self::Elem>)\n-> NonNull<Self::Elem>","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":381},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99214,"byte_end":99218,"line_start":92,"line_end":92,"column_start":18,"column_end":22},"name":"Data","qualname":"::data_traits::Data","value":"Data: RawData","parent":null,"children":[{"krate":0,"index":382}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99048,"byte_end":99079,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99080,"byte_end":99083,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ For an array with elements that can be accessed with safe code.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99084,"byte_end":99151,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99152,"byte_end":99155,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99156,"byte_end":99196,"line_start":91,"line_end":91,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99341,"byte_end":99351,"line_start":95,"line_end":95,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::data_traits::Data::into_owned","value":"pub fn into_owned<D>(ArrayBase<Self, D>)\n-> ArrayBase<OwnedRepr<Self::Elem>, D> where Self::Elem: Clone, D: Dimension","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Converts the array to a uniquely owned array, cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Converts the array to a uniquely owned array, cloning elements if necessary.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99234,"byte_end":99314,"line_start":93,"line_end":93,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":384},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99933,"byte_end":99940,"line_start":113,"line_end":113,"column_start":18,"column_end":25},"name":"DataMut","qualname":"::data_traits::DataMut","value":"DataMut: Data + RawDataMut","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":387}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99483,"byte_end":99514,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99515,"byte_end":99518,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements that can be accessed with safe code.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99519,"byte_end":99595,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99596,"byte_end":99599,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99600,"byte_end":99637,"line_start":105,"line_end":105,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100064,"byte_end":100077,"line_start":117,"line_end":117,"column_start":8,"column_end":21},"name":"ensure_unique","qualname":"::data_traits::DataMut::ensure_unique","value":"pub fn ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Ensures that the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Ensures that the array has unique access to its data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99966,"byte_end":100023,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100047,"byte_end":100056,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100323,"byte_end":100332,"line_start":128,"line_end":128,"column_start":8,"column_end":17},"name":"is_unique","qualname":"::data_traits::DataMut::is_unique","value":"pub fn is_unique(&mut Self) -> bool","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Returns whether the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Returns whether the array has unique access to its data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100222,"byte_end":100282,"line_start":125,"line_end":125,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100306,"byte_end":100315,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":388},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100667,"byte_end":100676,"line_start":140,"line_end":140,"column_start":11,"column_end":20},"name":"DataClone","qualname":"::data_traits::DataClone","value":"DataClone: Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100401,"byte_end":100432,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100433,"byte_end":100436,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned and allows elements to be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100437,"byte_end":100509,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ accessed with safe code.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100510,"byte_end":100538,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100539,"byte_end":100542,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100543,"byte_end":100580,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"deprecated(note = \"use `Data + RawDataClone` instead\", since = \"0.13.0\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100581,"byte_end":100656,"line_start":139,"line_end":139,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":480},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106891,"byte_end":106900,"line_start":394,"line_end":394,"column_start":18,"column_end":27},"name":"DataOwned","qualname":"::data_traits::DataOwned","value":"DataOwned: Data","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106729,"byte_end":106760,"line_start":389,"line_end":389,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106761,"byte_end":106764,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ A representation that is a unique or shared owner of its data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106765,"byte_end":106831,"line_start":391,"line_end":391,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106832,"byte_end":106835,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106836,"byte_end":106873,"line_start":393,"line_end":393,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106935,"byte_end":106938,"line_start":396,"line_end":396,"column_start":8,"column_end":11},"name":"new","qualname":"::data_traits::DataOwned::new","value":"pub fn new(Vec<Self::Elem>) -> Self","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107116,"byte_end":107127,"line_start":401,"line_end":401,"column_start":8,"column_end":19},"name":"into_shared","qualname":"::data_traits::DataOwned::into_shared","value":"pub fn into_shared(Self) -> OwnedRcRepr<Self::Elem>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":" Converts the data representation to a shared (copy on write)\n representation, without any copying.\n","sig":null,"attributes":[{"value":"/ Converts the data representation to a shared (copy on write)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106980,"byte_end":107044,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/ representation, without any copying.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107049,"byte_end":107089,"line_start":399,"line_end":399,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":483},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107309,"byte_end":107319,"line_start":409,"line_end":409,"column_start":18,"column_end":28},"name":"DataShared","qualname":"::data_traits::DataShared","value":"DataShared: Clone + Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107165,"byte_end":107196,"line_start":404,"line_end":404,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107197,"byte_end":107200,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ A representation that is a lightweight view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107201,"byte_end":107249,"line_start":406,"line_end":406,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107250,"byte_end":107253,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107254,"byte_end":107291,"line_start":408,"line_end":408,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112261,"byte_end":112265,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"arr0","qualname":"::free_functions::arr0","value":"pub fn arr0<A>(A) -> Array0<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array with the element `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array with the element `x`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112196,"byte_end":112253,"line_start":55,"line_end":55,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112424,"byte_end":112428,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"arr1","qualname":"::free_functions::arr1","value":"pub fn arr1<A: Clone>(&[A]) -> Array1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112357,"byte_end":112416,"line_start":60,"line_end":60,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":543},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112567,"byte_end":112573,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"rcarr1","qualname":"::free_functions::rcarr1","value":"pub fn rcarr1<A: Clone>(&[A]) -> ArcArray<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112500,"byte_end":112559,"line_start":65,"line_end":65,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":545},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112709,"byte_end":112715,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"aview0","qualname":"::free_functions::aview0","value":"pub fn aview0<A>(&A) -> ArrayView0<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array view borrowing `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array view borrowing `x`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112646,"byte_end":112701,"line_start":70,"line_end":70,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113108,"byte_end":113114,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"aview1","qualname":"::free_functions::aview1","value":"pub fn aview1<A>(&[A]) -> ArrayView1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112803,"byte_end":112872,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112873,"byte_end":112876,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112877,"byte_end":112884,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112885,"byte_end":112909,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112910,"byte_end":112913,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let data = [1.0; 1024];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112914,"byte_end":112941,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112942,"byte_end":112945,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Create a 2D array view from borrowed data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112946,"byte_end":112994,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/ let a2d = aview1(&data).into_shape((32, 32)).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":112995,"byte_end":113053,"line_start":83,"line_end":83,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113054,"byte_end":113057,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a2d.sum(), 1024.0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113058,"byte_end":113092,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113093,"byte_end":113100,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":549},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113383,"byte_end":113389,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"aview2","qualname":"::free_functions::aview2","value":"pub fn aview2<A, V: FixedInitializer<Elem = A>>(&[V]) -> ArrayView2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113178,"byte_end":113247,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113248,"byte_end":113251,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113252,"byte_end":113331,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":113332,"byte_end":113375,"line_start":94,"line_end":94,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114786,"byte_end":114796,"line_start":132,"line_end":132,"column_start":8,"column_end":18},"name":"aview_mut1","qualname":"::free_functions::aview_mut1","value":"pub fn aview_mut1<A>(&mut [A]) -> ArrayViewMut1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114272,"byte_end":114352,"line_start":115,"line_end":115,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114353,"byte_end":114356,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114357,"byte_end":114364,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114365,"byte_end":114390,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114391,"byte_end":114394,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{aview_mut1, s};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114395,"byte_end":114428,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114429,"byte_end":114432,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ // Create an array view over some data, then slice it and modify it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114433,"byte_end":114505,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ fn main() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114506,"byte_end":114521,"line_start":123,"line_end":123,"column_start":1,"column_end":16}},{"value":"/     let mut data = [0; 1024];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114522,"byte_end":114555,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114556,"byte_end":114565,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/         let mut a = aview_mut1(&mut data).into_shape((32, 32)).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114566,"byte_end":114642,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/         a.slice_mut(s![.., ..;3]).fill(5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114643,"byte_end":114689,"line_start":127,"line_end":127,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114690,"byte_end":114699,"line_start":128,"line_end":128,"column_start":1,"column_end":10}},{"value":"/     assert_eq!(&data[..10], [5, 0, 0, 5, 0, 0, 5, 0, 0, 5]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114700,"byte_end":114764,"line_start":129,"line_end":129,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114765,"byte_end":114770,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114771,"byte_end":114778,"line_start":131,"line_end":131,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115729,"byte_end":115739,"line_start":161,"line_end":161,"column_start":8,"column_end":18},"name":"aview_mut2","qualname":"::free_functions::aview_mut2","value":"pub fn aview_mut2<A, V: FixedInitializer<Elem = A>>(&mut [V])\n-> ArrayViewMut2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114870,"byte_end":114950,"line_start":136,"line_end":136,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114951,"byte_end":114954,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":114955,"byte_end":115034,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115035,"byte_end":115078,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115079,"byte_end":115082,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115083,"byte_end":115096,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115097,"byte_end":115100,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115101,"byte_end":115108,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview_mut2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115109,"byte_end":115137,"line_start":144,"line_end":144,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115138,"byte_end":115141,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115142,"byte_end":115157,"line_start":146,"line_end":146,"column_start":1,"column_end":16}},{"value":"/     // The inner (nested) array must be of length 1 to 16, but the outer","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115158,"byte_end":115234,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/     // can be of any length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115235,"byte_end":115267,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/     let mut data = [[0.; 2]; 128];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115268,"byte_end":115306,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/     {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115307,"byte_end":115316,"line_start":150,"line_end":150,"column_start":1,"column_end":10}},{"value":"/         // Make a 128 x 2 mut array view then turn it into 2 x 128","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115317,"byte_end":115387,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/         let mut a = aview_mut2(&mut data).reversed_axes();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115388,"byte_end":115450,"line_start":152,"line_end":152,"column_start":1,"column_end":63}},{"value":"/         // Make the first row ones and second row minus ones.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115451,"byte_end":115516,"line_start":153,"line_end":153,"column_start":1,"column_end":66}},{"value":"/         a.row_mut(0).fill(1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115517,"byte_end":115551,"line_start":154,"line_end":154,"column_start":1,"column_end":35}},{"value":"/         a.row_mut(1).fill(-1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115552,"byte_end":115587,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115588,"byte_end":115597,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/     // look at the start of the result","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115598,"byte_end":115640,"line_start":157,"line_end":157,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(&data[..3], [[1., -1.], [1., -1.], [1., -1.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115641,"byte_end":115707,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115708,"byte_end":115713,"line_start":159,"line_end":159,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":115714,"byte_end":115721,"line_start":160,"line_end":160,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":557},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":116710,"byte_end":116726,"line_start":182,"line_end":182,"column_start":18,"column_end":34},"name":"FixedInitializer","qualname":"::free_functions::FixedInitializer","value":"FixedInitializer","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" Fixed-size array used for array initialization\n","sig":null,"attributes":[{"value":"/ Fixed-size array used for array initialization","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":116642,"byte_end":116692,"line_start":181,"line_end":181,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":558},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":116738,"byte_end":116742,"line_start":183,"line_end":183,"column_start":10,"column_end":14},"name":"Elem","qualname":"::free_functions::FixedInitializer::Elem","value":"type Elem;","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":116751,"byte_end":116764,"line_start":184,"line_end":184,"column_start":8,"column_end":21},"name":"as_init_slice","qualname":"::free_functions::FixedInitializer::as_init_slice","value":"pub fn as_init_slice(&Self) -> &[Self::Elem]","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":116797,"byte_end":116800,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"len","qualname":"::free_functions::FixedInitializer::len","value":"pub fn len() -> usize","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":562},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117860,"byte_end":117864,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"arr2","qualname":"::free_functions::arr2","value":"pub fn arr2<A: Clone, V: FixedInitializer<Elem = A>>(&[V]) -> Array2<A> where\nV: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117636,"byte_end":117695,"line_start":211,"line_end":211,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117696,"byte_end":117699,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117700,"byte_end":117707,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117708,"byte_end":117730,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117731,"byte_end":117734,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1, 2, 3],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117735,"byte_end":117764,"line_start":216,"line_end":216,"column_start":1,"column_end":30}},{"value":"/                [4, 5, 6]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117765,"byte_end":117796,"line_start":217,"line_end":217,"column_start":1,"column_end":32}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117797,"byte_end":117809,"line_start":218,"line_end":218,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [2, 3]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117810,"byte_end":117837,"line_start":219,"line_end":219,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117838,"byte_end":117844,"line_start":220,"line_end":220,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":117845,"byte_end":117852,"line_start":221,"line_end":221,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":574},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120377,"byte_end":120383,"line_start":292,"line_end":292,"column_start":8,"column_end":14},"name":"rcarr2","qualname":"::free_functions::rcarr2","value":"pub fn rcarr2<A: Clone, V: Clone + FixedInitializer<Elem = A>>(&[V])\n-> ArcArray<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120306,"byte_end":120365,"line_start":290,"line_end":290,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120366,"byte_end":120369,"line_start":291,"line_end":291,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":577},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120900,"byte_end":120904,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"arr3","qualname":"::free_functions::arr3","value":"pub fn arr3<A: Clone, V: FixedInitializer<Elem = U>, U: FixedInitializer<Elem\n            = A>>(&[V]) -> Array3<A> where V: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120495,"byte_end":120556,"line_start":296,"line_end":296,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120557,"byte_end":120560,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the slices are not all of the same length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120561,"byte_end":120621,"line_start":298,"line_end":298,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120622,"byte_end":120625,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120626,"byte_end":120633,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120634,"byte_end":120656,"line_start":301,"line_end":301,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120657,"byte_end":120660,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[1, 2],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120661,"byte_end":120688,"line_start":303,"line_end":303,"column_start":1,"column_end":28}},{"value":"/                 [3, 4]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120689,"byte_end":120717,"line_start":304,"line_end":304,"column_start":1,"column_end":29}},{"value":"/                [[5, 6],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120718,"byte_end":120745,"line_start":305,"line_end":305,"column_start":1,"column_end":28}},{"value":"/                 [7, 8]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120746,"byte_end":120774,"line_start":306,"line_end":306,"column_start":1,"column_end":29}},{"value":"/                [[9, 0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120775,"byte_end":120802,"line_start":307,"line_end":307,"column_start":1,"column_end":28}},{"value":"/                 [1, 2]]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120803,"byte_end":120833,"line_start":308,"line_end":308,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120834,"byte_end":120846,"line_start":309,"line_end":309,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [3, 2, 2]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120847,"byte_end":120877,"line_start":310,"line_end":310,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120878,"byte_end":120884,"line_start":311,"line_end":311,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":120885,"byte_end":120892,"line_start":312,"line_end":312,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":121145,"byte_end":121151,"line_start":324,"line_end":324,"column_start":8,"column_end":14},"name":"rcarr3","qualname":"::free_functions::rcarr3","value":"pub fn rcarr3<A: Clone, V: FixedInitializer<Elem = U>,\n              U: FixedInitializer<Elem = A>>(&[V]) -> ArcArray<A, Ix3> where\nV: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":121076,"byte_end":121137,"line_start":323,"line_end":323,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":121818,"byte_end":121828,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"ShapeError","qualname":"::error::ShapeError","value":"ShapeError {  }","parent":null,"children":[{"krate":0,"index":3423}],"decl_id":null,"docs":" An error related to array shape or layout.\n","sig":null,"attributes":[{"value":"/ An error related to array shape or layout.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":121743,"byte_end":121789,"line_start":12,"line_end":12,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122006,"byte_end":122010,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"kind","qualname":"<ShapeError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the `ErrorKind` of this error.\n","sig":null,"attributes":[{"value":"/ Return the `ErrorKind` of this error.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":121939,"byte_end":121980,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":121985,"byte_end":121994,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122103,"byte_end":122112,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ShapeError>::from_kind","value":"pub fn from_kind(ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ShapeError`\n","sig":null,"attributes":[{"value":"/ Create a new `ShapeError`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122062,"byte_end":122091,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122417,"byte_end":122434,"line_start":39,"line_end":39,"column_start":5,"column_end":22},"name":"IncompatibleShape","qualname":"::error::ErrorKind::IncompatibleShape","value":"ErrorKind::IncompatibleShape","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" incompatible shape\n","sig":null,"attributes":[{"value":"/ incompatible shape","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122390,"byte_end":122412,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122479,"byte_end":122497,"line_start":41,"line_end":41,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::error::ErrorKind::IncompatibleLayout","value":"ErrorKind::IncompatibleLayout","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" incompatible memory layout\n","sig":null,"attributes":[{"value":"/ incompatible memory layout","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122444,"byte_end":122474,"line_start":40,"line_end":40,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3432},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122553,"byte_end":122565,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"name":"RangeLimited","qualname":"::error::ErrorKind::RangeLimited","value":"ErrorKind::RangeLimited","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" the shape does not fit inside type limits\n","sig":null,"attributes":[{"value":"/ the shape does not fit inside type limits","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122503,"byte_end":122548,"line_start":42,"line_end":42,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122602,"byte_end":122613,"line_start":45,"line_end":45,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::error::ErrorKind::OutOfBounds","value":"ErrorKind::OutOfBounds","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" out of bounds indexing\n","sig":null,"attributes":[{"value":"/ out of bounds indexing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122571,"byte_end":122597,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122651,"byte_end":122662,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ErrorKind::Unsupported","value":"ErrorKind::Unsupported","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" aliasing array elements\n","sig":null,"attributes":[{"value":"/ aliasing array elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122619,"byte_end":122646,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122721,"byte_end":122729,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::error::ErrorKind::Overflow","value":"ErrorKind::Overflow","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" overflow when computing offset, length, etc.\n","sig":null,"attributes":[{"value":"/ overflow when computing offset, length, etc.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122668,"byte_end":122716,"line_start":48,"line_end":48,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122754,"byte_end":122766,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"name":"__Incomplete","qualname":"::error::ErrorKind::__Incomplete","value":"ErrorKind::__Incomplete","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3426},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122374,"byte_end":122383,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// incompatible shape\n    IncompatibleShape = ,\n\n    /// incompatible memory layout\n    IncompatibleLayout,\n\n    /// the shape does not fit inside type limits\n    RangeLimited,\n\n    /// out of bounds indexing\n    OutOfBounds,\n\n    /// aliasing array elements\n    Unsupported,\n\n    /// overflow when computing offset, length, etc.\n    Overflow,\n\n    #[doc(hidden)]\n    __Incomplete,\n}","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3440}],"decl_id":null,"docs":" Error code for an error related to array shape or layout.","sig":null,"attributes":[{"value":"/ Error code for an error related to array shape or layout.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122175,"byte_end":122236,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122237,"byte_end":122240,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This enumeration is not exhaustive. The representation of the enum","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122241,"byte_end":122311,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ is not guaranteed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122312,"byte_end":122334,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":130923,"byte_end":130934,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"IndicesIter","qualname":"::indexes::IndicesIter","value":"IndicesIter {  }","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3450}],"decl_id":null,"docs":" An iterator over the indexes of an array shape.","sig":null,"attributes":[{"value":"/ An iterator over the indexes of an array shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":130805,"byte_end":130856,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":130857,"byte_end":130860,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `D`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":130861,"byte_end":130894,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131154,"byte_end":131161,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"indices","qualname":"::indexes::indices","value":"pub fn indices<E>(E) -> Indices<E::Dim> where E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create an iterable of the array shape `shape`.","sig":null,"attributes":[{"value":"/ Create an iterable of the array shape `shape`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":130977,"byte_end":131027,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131028,"byte_end":131031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131032,"byte_end":131098,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131099,"byte_end":131146,"line_start":28,"line_end":28,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131528,"byte_end":131538,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"indices_of","qualname":"::indexes::indices_of","value":"pub fn indices_of<S, D>(&ArrayBase<S, D>) -> Indices<D> where S: Data,\nD: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return an iterable of the indices of the passed-in array.","sig":null,"attributes":[{"value":"/ Return an iterable of the indices of the passed-in array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131340,"byte_end":131401,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131402,"byte_end":131405,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131406,"byte_end":131472,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131473,"byte_end":131520,"line_start":43,"line_end":43,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":133109,"byte_end":133116,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"Indices","qualname":"::indexes::Indices","value":"Indices {  }","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":3457}],"decl_id":null,"docs":" Indices producer and iterable.","sig":null,"attributes":[{"value":"/ Indices producer and iterable.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132951,"byte_end":132985,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132986,"byte_end":132989,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `Indices` is an `NdProducer` that produces the indices of an array shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132990,"byte_end":133067,"line_start":105,"line_end":105,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":133216,"byte_end":133224,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"IndexPtr","qualname":"::indexes::IndexPtr","value":"IndexPtr {  }","parent":null,"children":[{"krate":0,"index":3468}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":717},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183196,"byte_end":183207,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"ExactChunks","qualname":"::iterators::chunks::ExactChunks","value":"ExactChunks {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183022,"byte_end":183061,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183062,"byte_end":183065,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183066,"byte_end":183148,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183149,"byte_end":183165,"line_start":32,"line_end":32,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":737},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184713,"byte_end":184728,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"ExactChunksIter","qualname":"::iterators::chunks::ExactChunksIter","value":"ExactChunksIter {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184571,"byte_end":184597,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184598,"byte_end":184601,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184602,"byte_end":184684,"line_start":91,"line_end":91,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184685,"byte_end":184701,"line_start":92,"line_end":92,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185436,"byte_end":185450,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"ExactChunksMut","qualname":"::iterators::chunks::ExactChunksMut","value":"ExactChunksMut {  }","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185254,"byte_end":185293,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185294,"byte_end":185297,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185298,"byte_end":185379,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185380,"byte_end":185405,"line_start":122,"line_end":122,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":764},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":187903,"byte_end":187921,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"ExactChunksIterMut","qualname":"::iterators::chunks::ExactChunksIterMut","value":"ExactChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":187753,"byte_end":187779,"line_start":223,"line_end":223,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":187780,"byte_end":187783,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":187784,"byte_end":187865,"line_start":225,"line_end":225,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":187866,"byte_end":187891,"line_start":226,"line_end":226,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":771},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iterators::iter","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":7152},{"krate":0,"index":786},{"krate":0,"index":7154},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"decl_id":null,"docs":" Producers, iterables and iterators.","sig":null,"attributes":[{"value":"/ Producers, iterables and iterators.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188010,"byte_end":188049,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188050,"byte_end":188053,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module collects all concrete producer, iterable and iterator","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188054,"byte_end":188123,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ implementation structs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188124,"byte_end":188151,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188152,"byte_end":188155,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188156,"byte_end":188159,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See also [`NdProducer`](../trait.NdProducer.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/iter.rs","byte_start":188160,"byte_end":188214,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":189173,"byte_end":189178,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Lanes","qualname":"::iterators::lanes::Lanes","value":"Lanes {  }","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" See [`.lanes()`](../struct.ArrayBase.html#method.lanes)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":189076,"byte_end":189135,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":189136,"byte_end":189161,"line_start":27,"line_end":27,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":822},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190825,"byte_end":190833,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"LanesMut","qualname":"::iterators::lanes::LanesMut","value":"LanesMut {  }","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190720,"byte_end":190787,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190788,"byte_end":190813,"line_start":96,"line_end":96,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":848},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192282,"byte_end":192289,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Windows","qualname":"::iterators::windows::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"decl_id":null,"docs":" Window producer and iterable","sig":null,"attributes":[{"value":"/ Window producer and iterable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192144,"byte_end":192176,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192177,"byte_end":192180,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192181,"byte_end":192253,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192254,"byte_end":192270,"line_start":10,"line_end":10,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":868},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":194389,"byte_end":194400,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"WindowsIter","qualname":"::iterators::windows::WindowsIter","value":"WindowsIter {  }","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"decl_id":null,"docs":" Window iterator.","sig":null,"attributes":[{"value":"/ Window iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":194263,"byte_end":194283,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":194284,"byte_end":194287,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":194288,"byte_end":194360,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":194361,"byte_end":194377,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145412,"byte_end":145416,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iterators::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":984}],"decl_id":null,"docs":" An iterator over the elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145228,"byte_end":145274,"line_start":308,"line_end":308,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145275,"byte_end":145278,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a A`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145279,"byte_end":145316,"line_start":310,"line_end":310,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145317,"byte_end":145320,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ See [`.iter()`](../struct.ArrayBase.html#method.iter) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145321,"byte_end":145400,"line_start":312,"line_end":312,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145832,"byte_end":145839,"line_start":328,"line_end":328,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iterators::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An iterator over the elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array (mutable).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145626,"byte_end":145682,"line_start":323,"line_end":323,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145683,"byte_end":145686,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a mut A`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145687,"byte_end":145728,"line_start":325,"line_end":325,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145729,"byte_end":145732,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ See [`.iter_mut()`](../struct.ArrayBase.html#method.iter_mut) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":145733,"byte_end":145820,"line_start":327,"line_end":327,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146532,"byte_end":146543,"line_start":353,"line_end":353,"column_start":12,"column_end":23},"name":"IndexedIter","qualname":"::iterators::IndexedIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146345,"byte_end":146403,"line_start":349,"line_end":349,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146404,"byte_end":146407,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter()`](../struct.ArrayBase.html#method.indexed_iter) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146408,"byte_end":146503,"line_start":351,"line_end":351,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146767,"byte_end":146781,"line_start":357,"line_end":357,"column_start":12,"column_end":26},"name":"IndexedIterMut","qualname":"::iterators::IndexedIterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array (mutable).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146579,"byte_end":146647,"line_start":354,"line_end":354,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146648,"byte_end":146651,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter_mut()`](../struct.ArrayBase.html#method.indexed_iter_mut) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146652,"byte_end":146755,"line_start":356,"line_end":356,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154613,"byte_end":154622,"line_start":679,"line_end":679,"column_start":12,"column_end":21},"name":"LanesIter","qualname":"::iterators::LanesIter","value":"LanesIter {  }","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" An iterator that traverses over all axes but one, and yields a view for\n each lane along that axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over all axes but one, and yields a view for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154409,"byte_end":154484,"line_start":675,"line_end":675,"column_start":1,"column_end":76}},{"value":"/ each lane along that axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154485,"byte_end":154515,"line_start":676,"line_end":676,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154516,"byte_end":154519,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154520,"byte_end":154601,"line_start":678,"line_end":678,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155840,"byte_end":155852,"line_start":731,"line_end":731,"column_start":12,"column_end":24},"name":"LanesIterMut","qualname":"::iterators::LanesIterMut","value":"LanesIterMut {  }","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179}],"decl_id":null,"docs":" An iterator that traverses over all dimensions but the innermost,\n and yields each inner row (mutable).","sig":null,"attributes":[{"value":"/ An iterator that traverses over all dimensions but the innermost,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155620,"byte_end":155689,"line_start":726,"line_end":726,"column_start":1,"column_end":70}},{"value":"/ and yields each inner row (mutable).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155690,"byte_end":155730,"line_start":727,"line_end":727,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155731,"byte_end":155734,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155735,"byte_end":155802,"line_start":729,"line_end":729,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155803,"byte_end":155828,"line_start":730,"line_end":730,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3681},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161144,"byte_end":161152,"line_start":928,"line_end":928,"column_start":12,"column_end":20},"name":"AxisIter","qualname":"::iterators::AxisIter","value":"AxisIter {  }","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":3686}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview.","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160524,"byte_end":160571,"line_start":913,"line_end":913,"column_start":1,"column_end":48}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160572,"byte_end":160600,"line_start":914,"line_end":914,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160601,"byte_end":160604,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160605,"byte_end":160676,"line_start":916,"line_end":916,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160677,"byte_end":160742,"line_start":917,"line_end":917,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160743,"byte_end":160746,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160747,"byte_end":160819,"line_start":919,"line_end":919,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160820,"byte_end":160892,"line_start":920,"line_end":920,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160893,"byte_end":160896,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160897,"byte_end":160948,"line_start":922,"line_end":922,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160949,"byte_end":160952,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter()`](../struct.ArrayBase.html#method.outer_iter)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160953,"byte_end":161022,"line_start":924,"line_end":924,"column_start":1,"column_end":70}},{"value":"/ or [`.axis_iter()`](../struct.ArrayBase.html#method.axis_iter)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161023,"byte_end":161089,"line_start":925,"line_end":925,"column_start":1,"column_end":67}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161090,"byte_end":161115,"line_start":926,"line_end":926,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162017,"byte_end":162025,"line_start":962,"line_end":962,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIter>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161702,"byte_end":161770,"line_start":955,"line_end":955,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161775,"byte_end":161778,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161783,"byte_end":161857,"line_start":957,"line_end":957,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161862,"byte_end":161901,"line_start":958,"line_end":958,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161906,"byte_end":161909,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161914,"byte_end":161989,"line_start":960,"line_end":960,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161994,"byte_end":162005,"line_start":961,"line_end":961,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163656,"byte_end":163667,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"AxisIterMut","qualname":"::iterators::AxisIterMut","value":"AxisIterMut {  }","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview (mutable)","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163025,"byte_end":163072,"line_start":1010,"line_end":1010,"column_start":1,"column_end":48}},{"value":"/ and yields each subview (mutable)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163073,"byte_end":163110,"line_start":1011,"line_end":1011,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163111,"byte_end":163114,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163115,"byte_end":163186,"line_start":1013,"line_end":1013,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163187,"byte_end":163252,"line_start":1014,"line_end":1014,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163253,"byte_end":163256,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163257,"byte_end":163329,"line_start":1016,"line_end":1016,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163330,"byte_end":163402,"line_start":1017,"line_end":1017,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163403,"byte_end":163406,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163407,"byte_end":163461,"line_start":1019,"line_end":1019,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163462,"byte_end":163465,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter_mut()`](../struct.ArrayBase.html#method.outer_iter_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163466,"byte_end":163543,"line_start":1021,"line_end":1021,"column_start":1,"column_end":78}},{"value":"/ or [`.axis_iter_mut()`](../struct.ArrayBase.html#method.axis_iter_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163544,"byte_end":163618,"line_start":1022,"line_end":1022,"column_start":1,"column_end":75}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163619,"byte_end":163644,"line_start":1023,"line_end":1023,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164415,"byte_end":164423,"line_start":1048,"line_end":1048,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIterMut>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164100,"byte_end":164168,"line_start":1041,"line_end":1041,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164173,"byte_end":164176,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164181,"byte_end":164255,"line_start":1043,"line_end":1043,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164260,"byte_end":164299,"line_start":1044,"line_end":1044,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164304,"byte_end":164307,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164312,"byte_end":164387,"line_start":1046,"line_end":1046,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164392,"byte_end":164403,"line_start":1047,"line_end":1047,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":169181,"byte_end":169195,"line_start":1220,"line_end":1220,"column_start":12,"column_end":26},"name":"AxisChunksIter","qualname":"::iterators::AxisChunksIter","value":"AxisChunksIter {  }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":168715,"byte_end":168769,"line_start":1210,"line_end":1210,"column_start":1,"column_end":55}},{"value":"/ and yields views of the specified size on this axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":168770,"byte_end":168826,"line_start":1211,"line_end":1211,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":168827,"byte_end":168830,"line_start":1212,"line_end":1212,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":168831,"byte_end":168896,"line_start":1213,"line_end":1213,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":168897,"byte_end":168951,"line_start":1214,"line_end":1214,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":168952,"byte_end":169005,"line_start":1215,"line_end":1215,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":169006,"byte_end":169009,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":169010,"byte_end":169061,"line_start":1217,"line_end":1217,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":169062,"byte_end":169065,"line_start":1218,"line_end":1218,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter()`](../struct.ArrayBase.html#method.axis_chunks_iter) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":169066,"byte_end":169169,"line_start":1219,"line_end":1219,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":175019,"byte_end":175036,"line_start":1400,"line_end":1400,"column_start":12,"column_end":29},"name":"AxisChunksIterMut","qualname":"::iterators::AxisChunksIterMut","value":"AxisChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields mutable views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174530,"byte_end":174584,"line_start":1389,"line_end":1389,"column_start":1,"column_end":55}},{"value":"/ and yields mutable views of the specified size on this axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174585,"byte_end":174649,"line_start":1390,"line_end":1390,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174650,"byte_end":174653,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174654,"byte_end":174719,"line_start":1392,"line_end":1392,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174720,"byte_end":174774,"line_start":1393,"line_end":1393,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174775,"byte_end":174828,"line_start":1394,"line_end":1394,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174829,"byte_end":174832,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174833,"byte_end":174887,"line_start":1396,"line_end":1396,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174888,"byte_end":174891,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter_mut()`](../struct.ArrayBase.html#method.axis_chunks_iter_mut)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174892,"byte_end":174981,"line_start":1398,"line_end":1398,"column_start":1,"column_end":90}},{"value":"/ for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":174982,"byte_end":175007,"line_start":1399,"line_end":1399,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195063,"byte_end":195069,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory layout description\n","sig":null,"attributes":[{"value":"/ Memory layout description","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":194999,"byte_end":195028,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195678,"byte_end":195693,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"one_dimensional","qualname":"<Layout>::one_dimensional","value":"pub fn one_dimensional() -> Layout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195649,"byte_end":195666,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195798,"byte_end":195799,"line_start":45,"line_end":45,"column_start":12,"column_end":13},"name":"c","qualname":"<Layout>::c","value":"pub fn c() -> Layout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195769,"byte_end":195786,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195895,"byte_end":195896,"line_start":50,"line_end":50,"column_start":12,"column_end":13},"name":"f","qualname":"<Layout>::f","value":"pub fn f() -> Layout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195866,"byte_end":195883,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195992,"byte_end":195996,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"none","qualname":"<Layout>::none","value":"pub fn none() -> Layout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195944,"byte_end":195961,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197933,"byte_end":197945,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"LinalgScalar","qualname":"::linalg_traits::LinalgScalar","value":"LinalgScalar: 'static + Copy + Zero + One + Add<Output = Self> + Sub<Output = Self> +\nMul<Output = Self> + Div<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" Elements that support linear algebra operations.","sig":null,"attributes":[{"value":"/ Elements that support linear algebra operations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197720,"byte_end":197772,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197773,"byte_end":197776,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `'static` for type-based specialization, `Copy` so that they don't need move","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197777,"byte_end":197857,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ semantics or destructors, and the rest are numerical traits.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197858,"byte_end":197922,"line_start":17,"line_end":17,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198680,"byte_end":198687,"line_start":50,"line_end":50,"column_start":11,"column_end":18},"name":"NdFloat","qualname":"::linalg_traits::NdFloat","value":"NdFloat: Float + AddAssign + SubAssign + MulAssign + DivAssign + RemAssign +\nfmt::Display + fmt::Debug + fmt::LowerExp + fmt::UpperExp + ScalarOperand +\nLinalgScalar + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Floating-point element types `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Floating-point element types `f32` and `f64`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198297,"byte_end":198346,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198347,"byte_end":198350,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Trait `NdFloat` is only implemented for `f32` and `f64` but encompasses as","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198351,"byte_end":198429,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ much float-relevant ndarray functionality as possible, including the traits","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198430,"byte_end":198509,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ needed for linear algebra and for *right hand side* scalar","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198510,"byte_end":198572,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ operations (`ScalarOperand`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198573,"byte_end":198606,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198607,"byte_end":198610,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This trait can only be implemented by `f32` and `f64`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198611,"byte_end":198669,"line_start":49,"line_end":49,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210499,"byte_end":210511,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"ShapeBuilder","qualname":"::shape_builder::ShapeBuilder","value":"ShapeBuilder","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502}],"decl_id":null,"docs":" A trait for `Shape` and `D where D: Dimension` that allows\n customizing the memory layout (strides) of an array shape.","sig":null,"attributes":[{"value":"/ A trait for `Shape` and `D where D: Dimension` that allows","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210262,"byte_end":210324,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ customizing the memory layout (strides) of an array shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210325,"byte_end":210387,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210388,"byte_end":210391,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used together with array constructor methods like","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210392,"byte_end":210459,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ `Array::from_shape_vec`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210460,"byte_end":210488,"line_start":9,"line_end":9,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210523,"byte_end":210526,"line_start":11,"line_end":11,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeBuilder::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210548,"byte_end":210555,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"Strides","qualname":"::shape_builder::ShapeBuilder::Strides","value":"type Strides;","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210565,"byte_end":210575,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"into_shape","qualname":"::shape_builder::ShapeBuilder::into_shape","value":"pub fn into_shape(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210610,"byte_end":210611,"line_start":15,"line_end":15,"column_start":8,"column_end":9},"name":"f","qualname":"::shape_builder::ShapeBuilder::f","value":"pub fn f(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210646,"byte_end":210651,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"set_f","qualname":"::shape_builder::ShapeBuilder::set_f","value":"pub fn set_f(Self, bool) -> Shape<Self::Dim>","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210698,"byte_end":210705,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"strides","qualname":"::shape_builder::ShapeBuilder::strides","value":"pub fn strides(Self, Self::Strides) -> StrideShape<Self::Dim>","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":212951,"byte_end":212955,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"size","qualname":"<Shape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":212885,"byte_end":212939,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214439,"byte_end":214444,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, step }","parent":null,"children":[{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859}],"decl_id":null,"docs":" A slice (range with step size).","sig":null,"attributes":[{"value":"/ A slice (range with step size).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213568,"byte_end":213603,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213604,"byte_end":213607,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `end` is an exclusive index. Negative `begin` or `end` indexes are counted","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213608,"byte_end":213686,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ from the back of the axis. If `end` is `None`, the slice extends to the end","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213687,"byte_end":213766,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213767,"byte_end":213783,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213784,"byte_end":213787,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s.html) macro.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213788,"byte_end":213834,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213835,"byte_end":213838,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213839,"byte_end":213854,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213855,"byte_end":213858,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(0, None, 1)` is the full range of an axis. It can also be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213859,"byte_end":213932,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ created with `Slice::from(..)`. The Python equivalent is `[:]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":213933,"byte_end":214000,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214001,"byte_end":214004,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, b, 2)` is every second element from `a` until `b`. It can","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214005,"byte_end":214081,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ also be created with `Slice::from(a..b).step_by(2)`. The Python equivalent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214082,"byte_end":214160,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214161,"byte_end":214178,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214179,"byte_end":214182,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, None, -1)` is every element, from `a` until the end, in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214183,"byte_end":214257,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ reverse order. It can also be created with `Slice::from(a..).step_by(-1)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214258,"byte_end":214336,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ The Python equivalent is `[a::-1]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214337,"byte_end":214376,"line_start":33,"line_end":33,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214455,"byte_end":214460,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"isize","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214477,"byte_end":214480,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"std::option::Option<isize>","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214505,"byte_end":214509,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"step","qualname":"::slice::Slice::step","value":"isize","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214845,"byte_end":214848,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Slice>::new","value":"pub fn new(isize, Option<isize>, isize) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given extents.","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given extents.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214538,"byte_end":214586,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214591,"byte_end":214594,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ See also the `From` impls, converting from ranges; for example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214599,"byte_end":214665,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ `Slice::from(i..)` or `Slice::from(j..k)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214670,"byte_end":214716,"line_start":45,"line_end":45,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214721,"byte_end":214724,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214729,"byte_end":214756,"line_start":47,"line_end":47,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214761,"byte_end":214833,"line_start":48,"line_end":48,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215266,"byte_end":215273,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"step_by","qualname":"<Slice>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given step size (multiplied with the\n previous step size).","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given step size (multiplied with the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215024,"byte_end":215094,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ previous step size).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215099,"byte_end":215123,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215128,"byte_end":215131,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215136,"byte_end":215163,"line_start":57,"line_end":57,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215168,"byte_end":215240,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215245,"byte_end":215254,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216871,"byte_end":216876,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Slice","qualname":"::slice::SliceOrIndex::Slice","value":"SliceOrIndex::Slice { start, end, step }","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" A range with step size. `end` is an exclusive index. Negative `begin`\n or `end` indexes are counted from the back of the axis. If `end` is\n `None`, the slice extends to the end of the axis.\n","sig":null,"attributes":[{"value":"/ A range with step size. `end` is an exclusive index. Negative `begin`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216659,"byte_end":216732,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ or `end` indexes are counted from the back of the axis. If `end` is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216737,"byte_end":216808,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/ `None`, the slice extends to the end of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216813,"byte_end":216866,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216985,"byte_end":216990,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Index","qualname":"::slice::SliceOrIndex::Index","value":"SliceOrIndex::Index(isize)","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":" A single index.\n","sig":null,"attributes":[{"value":"/ A single index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216961,"byte_end":216980,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216640,"byte_end":216652,"line_start":94,"line_end":94,"column_start":10,"column_end":22},"name":"SliceOrIndex","qualname":"::slice::SliceOrIndex","value":"pub enum SliceOrIndex {\n\n    /// A range with step size. `end` is an exclusive index. Negative `begin`\n    /// or `end` indexes are counted from the back of the axis. If `end` is\n    /// `None`, the slice extends to the end of the axis.\n    Slice {\n        start: isize,\n        end: Option<isize>,\n        step: isize,\n    },\n\n    /// A single index.\n    Index(isize),\n}","parent":null,"children":[{"krate":0,"index":3876},{"krate":0,"index":3880}],"decl_id":null,"docs":" A slice (range with step) or an index.","sig":null,"attributes":[{"value":"/ A slice (range with step) or an index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215468,"byte_end":215510,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215511,"byte_end":215514,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s!.html) macro for a convenient way to create a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215515,"byte_end":215594,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ `&SliceInfo<[SliceOrIndex; n], D>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215595,"byte_end":215634,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215635,"byte_end":215638,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215639,"byte_end":215654,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215655,"byte_end":215658,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Index(a)` is the index `a`. It can also be created with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215659,"byte_end":215733,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `SliceOrIndex::from(a)`. The Python equivalent is `[a]`. The macro","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215734,"byte_end":215804,"line_start":77,"line_end":77,"column_start":1,"column_end":71}},{"value":"/ equivalent is `s![a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215805,"byte_end":215831,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215832,"byte_end":215835,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Slice { start: 0, end: None, step: 1 }` is the full range of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215836,"byte_end":215915,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ an axis. It can also be created with `SliceOrIndex::from(..)`. The Python","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215916,"byte_end":215993,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ equivalent is `[:]`. The macro equivalent is `s![..]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":215994,"byte_end":216052,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216053,"byte_end":216056,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Slice { start: a, end: Some(b), step: 2 }` is every second","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216057,"byte_end":216134,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ element from `a` until `b`. It can also be created with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216135,"byte_end":216194,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ `SliceOrIndex::from(a..b).step_by(2)`. The Python equivalent is `[a:b:2]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216195,"byte_end":216273,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ The macro equivalent is `s![a..b;2]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216274,"byte_end":216315,"line_start":87,"line_end":87,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216316,"byte_end":216319,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `SliceOrIndex::Slice { start: a, end: None, step: -1 }` is every element,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216320,"byte_end":216397,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ from `a` until the end, in reverse order. It can also be created with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216398,"byte_end":216471,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ `SliceOrIndex::from(a..).step_by(-1)`. The Python equivalent is `[a::-1]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216472,"byte_end":216550,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ The macro equivalent is `s![a..;-1]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":216551,"byte_end":216592,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217118,"byte_end":217126,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"is_slice","qualname":"<SliceOrIndex>::is_slice","value":"pub fn is_slice(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Slice` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Slice` value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217058,"byte_end":217106,"line_start":110,"line_end":110,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217319,"byte_end":217327,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"is_index","qualname":"<SliceOrIndex>::is_index","value":"pub fn is_index(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an `Index` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an `Index` value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217258,"byte_end":217307,"line_start":118,"line_end":118,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217705,"byte_end":217712,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"step_by","qualname":"<SliceOrIndex>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceOrIndex` with the given step size (multiplied with\n the previous step size).","sig":null,"attributes":[{"value":"/ Returns a new `SliceOrIndex` with the given step size (multiplied with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217455,"byte_end":217529,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ the previous step size).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217534,"byte_end":217562,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217567,"byte_end":217570,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217575,"byte_end":217602,"line_start":129,"line_end":129,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217607,"byte_end":217679,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217684,"byte_end":217693,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222295,"byte_end":222304,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"SliceInfo","qualname":"::slice::SliceInfo","value":"SliceInfo {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968}],"decl_id":null,"docs":" Represents all of the necessary information to perform a slice.","sig":null,"attributes":[{"value":"/ Represents all of the necessary information to perform a slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":221961,"byte_end":222028,"line_start":284,"line_end":284,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222029,"byte_end":222032,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ The type `T` is typically `[SliceOrIndex; n]`, `[SliceOrIndex]`, or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222033,"byte_end":222104,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/ `Vec<SliceOrIndex>`. The type `D` is the output dimension after calling","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222105,"byte_end":222180,"line_start":287,"line_end":287,"column_start":1,"column_end":76}},{"value":"/ [`.slice()`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222181,"byte_end":222198,"line_start":288,"line_end":288,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222199,"byte_end":222202,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: struct.ArrayBase.html#method.slice","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222203,"byte_end":222255,"line_start":290,"line_end":290,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222273,"byte_end":222283,"line_start":292,"line_end":292,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222791,"byte_end":222804,"line_start":317,"line_end":317,"column_start":19,"column_end":32},"name":"new_unchecked","qualname":"<SliceInfo<T, D>>::new_unchecked","value":"pub unsafe fn new_unchecked(T, PhantomData<D>) -> SliceInfo<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222599,"byte_end":222638,"line_start":312,"line_end":312,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222643,"byte_end":222646,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If you call this method, you are guaranteeing that `out_dim` is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222651,"byte_end":222718,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ consistent with `indices`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222723,"byte_end":222753,"line_start":315,"line_end":315,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223113,"byte_end":223116,"line_start":330,"line_end":330,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceInfo<T, D>>::new","value":"pub fn new(T) -> Result<SliceInfo<T, D>, ShapeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222998,"byte_end":223037,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223042,"byte_end":223045,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Errors if `D` is not consistent with `indices`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223050,"byte_end":223101,"line_start":329,"line_end":329,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223935,"byte_end":223943,"line_start":355,"line_end":355,"column_start":12,"column_end":20},"name":"out_ndim","qualname":"<SliceInfo<T, D>>::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions after calling\n [`.slice()`](struct.ArrayBase.html#method.slice) (including taking\n subviews).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions after calling","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223588,"byte_end":223638,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/ [`.slice()`](struct.ArrayBase.html#method.slice) (including taking","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223643,"byte_end":223713,"line_start":349,"line_end":349,"column_start":5,"column_end":75}},{"value":"/ subviews).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223718,"byte_end":223732,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223737,"byte_end":223740,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If `D` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223745,"byte_end":223814,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ `D::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223819,"byte_end":223890,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/ over the ranges/indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223895,"byte_end":223923,"line_start":354,"line_end":354,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":225251,"byte_end":225263,"line_start":414,"line_end":414,"column_start":11,"column_end":23},"name":"SliceNextDim","qualname":"::slice::SliceNextDim","value":"SliceNextDim<D1, D2>","parent":null,"children":[{"krate":0,"index":1599}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":225281,"byte_end":225289,"line_start":415,"line_end":415,"column_start":8,"column_end":16},"name":"next_dim","qualname":"::slice::SliceNextDim::next_dim","value":"pub fn next_dim(&Self, PhantomData<D1>) -> PhantomData<D2>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234335,"byte_end":234340,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"stack","qualname":"::stacking::stack","value":"pub fn stack<'a, A, D>(Axis, &[ArrayView]) -> Result<Array<A, D>, ShapeError>\nwhere A: Copy, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the given axis.","sig":null,"attributes":[{"value":"/ Stack arrays along the given axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":233713,"byte_end":233751,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":233752,"byte_end":233755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes, apart from along `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":233756,"byte_end":233836,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ (may be made more flexible in the future).<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":233837,"byte_end":233887,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":233888,"byte_end":233954,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":233955,"byte_end":234013,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234014,"byte_end":234017,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234018,"byte_end":234025,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, Axis, stack};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234026,"byte_end":234063,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234064,"byte_end":234067,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234068,"byte_end":234096,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234097,"byte_end":234127,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234128,"byte_end":234140,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/     stack(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234141,"byte_end":234186,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/     == Ok(arr2(&[[2., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234187,"byte_end":234217,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234218,"byte_end":234248,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/                  [2., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234249,"byte_end":234279,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.]]))","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234280,"byte_end":234312,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234313,"byte_end":234319,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/stacking.rs","byte_start":234320,"byte_end":234327,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":237386,"byte_end":237392,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::Broadcast::Output","value":"type Output: NdProducer<Dim = E::Dim>;","parent":{"krate":0,"index":1631},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239099,"byte_end":239113,"line_start":105,"line_end":105,"column_start":11,"column_end":25},"name":"IntoNdProducer","qualname":"::zip::IntoNdProducer","value":"IntoNdProducer","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655}],"decl_id":null,"docs":" Argument conversion into a producer.","sig":null,"attributes":[{"value":"/ Argument conversion into a producer.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238884,"byte_end":238924,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238925,"byte_end":238928,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Slices and vectors can be used (equivalent to 1-dimensional array views).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238929,"byte_end":239006,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239007,"byte_end":239010,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This trait is like `IntoIterator` for `NdProducers` instead of iterators.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239011,"byte_end":239088,"line_start":104,"line_end":104,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239169,"byte_end":239173,"line_start":107,"line_end":107,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::IntoNdProducer::Item","value":"type Item;","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239120,"byte_end":239159,"line_start":106,"line_end":106,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239223,"byte_end":239226,"line_start":109,"line_end":109,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::IntoNdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Dimension type of the producer\n","sig":null,"attributes":[{"value":"/ Dimension type of the producer","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239179,"byte_end":239213,"line_start":108,"line_end":108,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239248,"byte_end":239254,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::IntoNdProducer::Output","value":"type Output: NdProducer<Dim = Self::Dim, Item = Self::Item>;","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239359,"byte_end":239372,"line_start":112,"line_end":112,"column_start":8,"column_end":21},"name":"into_producer","qualname":"::zip::IntoNdProducer::into_producer","value":"pub fn into_producer(Self) -> Self::Output","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Convert the value into an `NdProducer`.\n","sig":null,"attributes":[{"value":"/ Convert the value into an `NdProducer`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239308,"byte_end":239351,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240499,"byte_end":240509,"line_start":147,"line_end":147,"column_start":11,"column_end":21},"name":"NdProducer","qualname":"::zip::NdProducer","value":"NdProducer","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":4010}],"decl_id":null,"docs":" A producer of an n-dimensional set of elements;\n for example an array view, mutable array view or an iterator\n that yields chunks.","sig":null,"attributes":[{"value":"/ A producer of an n-dimensional set of elements;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239594,"byte_end":239645,"line_start":127,"line_end":127,"column_start":1,"column_end":52}},{"value":"/ for example an array view, mutable array view or an iterator","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239646,"byte_end":239710,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/ that yields chunks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239711,"byte_end":239734,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239735,"byte_end":239738,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Producers are used as a arguments to [`Zip`](struct.Zip.html) and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239739,"byte_end":239808,"line_start":131,"line_end":131,"column_start":1,"column_end":70}},{"value":"/ [`azip!()`](macro.azip.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239809,"byte_end":239842,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239843,"byte_end":239846,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # Comparison to `IntoIterator`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239847,"byte_end":239881,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239882,"byte_end":239885,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Most `NdProducers` are *iterable* (implement `IntoIterator`) but not directly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239886,"byte_end":239967,"line_start":136,"line_end":136,"column_start":1,"column_end":82}},{"value":"/ iterators. This separation is needed because the producer represents","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239968,"byte_end":240040,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/ a multidimensional set of items, it can be split along a particular axis for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240041,"byte_end":240121,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ parallelization, and it has no fixed correspondance to a sequence.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240122,"byte_end":240192,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240193,"byte_end":240196,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The natural exception is one dimensional producers, like `AxisIter`, which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240197,"byte_end":240275,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ implement `Iterator` directly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240276,"byte_end":240309,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ (`AxisIter` traverses a one dimensional sequence, along an axis, while","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240310,"byte_end":240384,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ *producing* multidimensional items).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240385,"byte_end":240425,"line_start":144,"line_end":144,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240426,"byte_end":240429,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ See also [`IntoNdProducer`](trait.IntoNdProducer.html)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240430,"byte_end":240488,"line_start":146,"line_end":146,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240565,"byte_end":240569,"line_start":149,"line_end":149,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::NdProducer::Item","value":"type Item;","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240516,"byte_end":240555,"line_start":148,"line_end":148,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240638,"byte_end":240641,"line_start":152,"line_end":152,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::NdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" Dimension type\n","sig":null,"attributes":[{"value":"/ Dimension type","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240610,"byte_end":240628,"line_start":151,"line_end":151,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240980,"byte_end":240983,"line_start":160,"line_end":160,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::NdProducer::Ptr","value":"type Ptr: Offset<Stride = Self::Stride>;","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" Pointer or stand-in for pointer\n","sig":null,"attributes":[{"value":"/ Pointer or stand-in for pointer","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":240935,"byte_end":240970,"line_start":159,"line_end":159,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241067,"byte_end":241073,"line_start":163,"line_end":163,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::NdProducer::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" Pointer stride\n","sig":null,"attributes":[{"value":"/ Pointer stride","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241039,"byte_end":241057,"line_start":162,"line_end":162,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241108,"byte_end":241114,"line_start":166,"line_end":166,"column_start":8,"column_end":14},"name":"layout","qualname":"::zip::NdProducer::layout","value":"pub fn layout(&Self) -> Layout","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241159,"byte_end":241166,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"raw_dim","qualname":"::zip::NdProducer::raw_dim","value":"pub fn raw_dim(&Self) -> Self::Dim","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241214,"byte_end":241223,"line_start":170,"line_end":170,"column_start":8,"column_end":17},"name":"equal_dim","qualname":"::zip::NdProducer::equal_dim","value":"pub fn equal_dim(&Self, &Self::Dim) -> bool","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241321,"byte_end":241327,"line_start":174,"line_end":174,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::zip::NdProducer::as_ptr","value":"pub fn as_ptr(&Self) -> Self::Ptr","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241382,"byte_end":241388,"line_start":176,"line_end":176,"column_start":15,"column_end":21},"name":"as_ref","qualname":"::zip::NdProducer::as_ref","value":"pub unsafe fn as_ref(&Self, Self::Ptr) -> Self::Item","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241460,"byte_end":241468,"line_start":178,"line_end":178,"column_start":15,"column_end":23},"name":"uget_ptr","qualname":"::zip::NdProducer::uget_ptr","value":"pub unsafe fn uget_ptr(&Self, &Self::Dim) -> Self::Ptr","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241531,"byte_end":241540,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"stride_of","qualname":"::zip::NdProducer::stride_of","value":"pub fn stride_of(&Self, Axis) -> <Self::Ptr as Offset>::Stride","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241620,"byte_end":241637,"line_start":182,"line_end":182,"column_start":8,"column_end":25},"name":"contiguous_stride","qualname":"::zip::NdProducer::contiguous_stride","value":"pub fn contiguous_stride(&Self) -> Self::Stride","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241688,"byte_end":241696,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"split_at","qualname":"::zip::NdProducer::split_at","value":"pub fn split_at(Self, Axis, usize) -> (Self, Self) where Self: Sized","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241810,"byte_end":241816,"line_start":190,"line_end":190,"column_start":11,"column_end":17},"name":"Offset","qualname":"::zip::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":4011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241834,"byte_end":241840,"line_start":191,"line_end":191,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::Offset::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241862,"byte_end":241875,"line_start":192,"line_end":192,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::zip::Offset::stride_offset","value":"pub unsafe fn stride_offset(Self, Self::Stride, usize) -> Self","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":242386,"byte_end":242390,"line_start":213,"line_end":213,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ZippableTuple::Item","value":"type Item;","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":242401,"byte_end":242404,"line_start":214,"line_end":214,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ZippableTuple::Ptr","value":"type Ptr: OffsetTuple<Args = Self::Stride> + Copy;","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":242456,"byte_end":242459,"line_start":215,"line_end":215,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ZippableTuple::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":242481,"byte_end":242487,"line_start":216,"line_end":216,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ZippableTuple::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251645,"byte_end":251648,"line_start":576,"line_end":576,"column_start":12,"column_end":15},"name":"Zip","qualname":"::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023}],"decl_id":null,"docs":" Lock step function application across several arrays or other producers.","sig":null,"attributes":[{"value":"/ Lock step function application across several arrays or other producers.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249137,"byte_end":249213,"line_start":507,"line_end":507,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249214,"byte_end":249217,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ Zip allows matching several producers to each other elementwise and applying","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249218,"byte_end":249298,"line_start":509,"line_end":509,"column_start":1,"column_end":81}},{"value":"/ a function over all tuples of elements (one item from each input at","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249299,"byte_end":249370,"line_start":510,"line_end":510,"column_start":1,"column_end":72}},{"value":"/ a time).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249371,"byte_end":249383,"line_start":511,"line_end":511,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249384,"byte_end":249387,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ In general, the zip uses a tuple of producers","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249388,"byte_end":249437,"line_start":513,"line_end":513,"column_start":1,"column_end":50}},{"value":"/ ([`NdProducer`](trait.NdProducer.html) trait) that all have to be of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249438,"byte_end":249514,"line_start":514,"line_end":514,"column_start":1,"column_end":77}},{"value":"/ same shape. The NdProducer implementation defines what its item type is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249515,"byte_end":249590,"line_start":515,"line_end":515,"column_start":1,"column_end":76}},{"value":"/ (for example if it's a shared reference, mutable reference or an array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249591,"byte_end":249665,"line_start":516,"line_end":516,"column_start":1,"column_end":75}},{"value":"/ view etc).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249666,"byte_end":249680,"line_start":517,"line_end":517,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249681,"byte_end":249684,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ If all the input arrays are of the same memory layout the zip performs much","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249685,"byte_end":249764,"line_start":519,"line_end":519,"column_start":1,"column_end":80}},{"value":"/ better and the compiler can usually vectorize the loop (if applicable).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249765,"byte_end":249840,"line_start":520,"line_end":520,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249841,"byte_end":249844,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ The order elements are visited is not specified. The producers don’t have to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249845,"byte_end":249927,"line_start":522,"line_end":522,"column_start":1,"column_end":81}},{"value":"/ have the same item type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249928,"byte_end":249956,"line_start":523,"line_end":523,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249957,"byte_end":249960,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ The `Zip` has two methods for function application: `apply` and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":249961,"byte_end":250028,"line_start":525,"line_end":525,"column_start":1,"column_end":68}},{"value":"/ `fold_while`. The zip object can be split, which allows parallelization.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250029,"byte_end":250105,"line_start":526,"line_end":526,"column_start":1,"column_end":77}},{"value":"/ A read-only zip object (no mutable producers) can be cloned.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250106,"byte_end":250170,"line_start":527,"line_end":527,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250171,"byte_end":250174,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ See also the [`azip!()` macro][az] which offers a convenient shorthand","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250175,"byte_end":250249,"line_start":529,"line_end":529,"column_start":1,"column_end":75}},{"value":"/ to common ways to use `Zip`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250250,"byte_end":250282,"line_start":530,"line_end":530,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250283,"byte_end":250286,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ [az]: macro.azip.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250287,"byte_end":250312,"line_start":532,"line_end":532,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250313,"byte_end":250316,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250317,"byte_end":250324,"line_start":534,"line_end":534,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250325,"byte_end":250346,"line_start":535,"line_end":535,"column_start":1,"column_end":22}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250347,"byte_end":250371,"line_start":536,"line_end":536,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250372,"byte_end":250375,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ type M = Array2<f64>;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250376,"byte_end":250401,"line_start":538,"line_end":538,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250402,"byte_end":250405,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ // Create four 2d arrays of the same size","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250406,"byte_end":250451,"line_start":540,"line_end":540,"column_start":1,"column_end":46}},{"value":"/ let mut a = M::zeros((64, 32));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250452,"byte_end":250487,"line_start":541,"line_end":541,"column_start":1,"column_end":36}},{"value":"/ let b = M::from_elem(a.dim(), 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250488,"byte_end":250526,"line_start":542,"line_end":542,"column_start":1,"column_end":39}},{"value":"/ let c = M::from_elem(a.dim(), 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250527,"byte_end":250565,"line_start":543,"line_end":543,"column_start":1,"column_end":39}},{"value":"/ let d = M::from_elem(a.dim(), 3.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250566,"byte_end":250604,"line_start":544,"line_end":544,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250605,"byte_end":250608,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ // Example 1: Perform an elementwise arithmetic operation across","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250609,"byte_end":250677,"line_start":546,"line_end":546,"column_start":1,"column_end":69}},{"value":"/ // the four arrays a, b, c, d.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250678,"byte_end":250712,"line_start":547,"line_end":547,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250713,"byte_end":250716,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut a)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250717,"byte_end":250738,"line_start":549,"line_end":549,"column_start":1,"column_end":22}},{"value":"/     .and(&b)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250739,"byte_end":250755,"line_start":550,"line_end":550,"column_start":1,"column_end":17}},{"value":"/     .and(&c)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250756,"byte_end":250772,"line_start":551,"line_end":551,"column_start":1,"column_end":17}},{"value":"/     .and(&d)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250773,"byte_end":250789,"line_start":552,"line_end":552,"column_start":1,"column_end":17}},{"value":"/     .apply(|w, &x, &y, &z| {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250790,"byte_end":250822,"line_start":553,"line_end":553,"column_start":1,"column_end":33}},{"value":"/         *w += x + y * z;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250823,"byte_end":250851,"line_start":554,"line_end":554,"column_start":1,"column_end":29}},{"value":"/     });","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250852,"byte_end":250863,"line_start":555,"line_end":555,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250864,"byte_end":250867,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ // Example 2: Create a new array `totals` with one entry per row of `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250868,"byte_end":250944,"line_start":557,"line_end":557,"column_start":1,"column_end":77}},{"value":"/ //  Use Zip to traverse the rows of `a` and assign to the corresponding","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":250945,"byte_end":251020,"line_start":558,"line_end":558,"column_start":1,"column_end":76}},{"value":"/ //  entry in `totals` with the sum across each row.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251021,"byte_end":251076,"line_start":559,"line_end":559,"column_start":1,"column_end":56}},{"value":"/ //  This is possible because the producer for `totals` and the row producer","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251077,"byte_end":251156,"line_start":560,"line_end":560,"column_start":1,"column_end":80}},{"value":"/ //  for `a` have the same shape and dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251157,"byte_end":251212,"line_start":561,"line_end":561,"column_start":1,"column_end":56}},{"value":"/ //  The rows producer yields one array view (`row`) per iteration.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251213,"byte_end":251283,"line_start":562,"line_end":562,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251284,"byte_end":251287,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{Array1, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251288,"byte_end":251320,"line_start":564,"line_end":564,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251321,"byte_end":251324,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ let mut totals = Array1::zeros(a.nrows());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251325,"byte_end":251371,"line_start":566,"line_end":566,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251372,"byte_end":251375,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut totals)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251376,"byte_end":251402,"line_start":568,"line_end":568,"column_start":1,"column_end":27}},{"value":"/     .and(a.genrows())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251403,"byte_end":251428,"line_start":569,"line_end":569,"column_start":1,"column_end":26}},{"value":"/     .apply(|totals, row| *totals = row.sum());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251429,"byte_end":251479,"line_start":570,"line_end":570,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251480,"byte_end":251483,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the built in `.sum_axis()` along axis 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251484,"byte_end":251556,"line_start":572,"line_end":572,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(totals, a.sum_axis(Axis(1)));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251557,"byte_end":251601,"line_start":573,"line_end":573,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251602,"byte_end":251609,"line_start":574,"line_end":574,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252021,"byte_end":252025,"line_start":591,"line_end":591,"column_start":12,"column_end":16},"name":"from","qualname":"<Zip<(P,), D>>::from","value":"pub fn from<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D, Item\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` from the input array or other producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` from the input array or other producer `p`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251802,"byte_end":251868,"line_start":587,"line_end":587,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251873,"byte_end":251876,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251881,"byte_end":251944,"line_start":589,"line_end":589,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251949,"byte_end":252009,"line_start":590,"line_end":590,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252695,"byte_end":252702,"line_start":615,"line_end":615,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Zip<(Indices<D>, P), D>>::indexed","value":"pub fn indexed<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D,\nItem = D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` with an index producer and the producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` with an index producer and the producer `p`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252425,"byte_end":252492,"line_start":609,"line_end":609,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252497,"byte_end":252500,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252505,"byte_end":252568,"line_start":611,"line_end":611,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252573,"byte_end":252633,"line_start":612,"line_end":612,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252638,"byte_end":252641,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ *Note:* Indexed zip has overhead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252646,"byte_end":252683,"line_start":614,"line_end":614,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":253345,"byte_end":253349,"line_start":642,"line_end":642,"column_start":12,"column_end":16},"name":"size","qualname":"<Zip<Parts, D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a the number of element tuples in the Zip\n","sig":null,"attributes":[{"value":"/ Return a the number of element tuples in the Zip","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":253281,"byte_end":253333,"line_start":641,"line_end":641,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1843},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":256786,"byte_end":256790,"line_start":756,"line_end":756,"column_start":10,"column_end":14},"name":"Args","qualname":"::zip::OffsetTuple::Args","value":"type Args;","parent":{"krate":0,"index":1842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266423,"byte_end":266431,"line_start":1027,"line_end":1027,"column_start":5,"column_end":13},"name":"Continue","qualname":"::zip::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":4322},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266382,"byte_end":266418,"line_start":1026,"line_end":1026,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266492,"byte_end":266496,"line_start":1029,"line_end":1029,"column_start":5,"column_end":9},"name":"Done","qualname":"::zip::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":4322},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266440,"byte_end":266487,"line_start":1028,"line_end":1028,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266363,"byte_end":266372,"line_start":1025,"line_end":1025,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::zip::FoldWhile","value":"pub enum FoldWhile<T> {\n\n    /// Continue folding with this value\n    Continue(T),\n\n    /// Fold is complete and will return this value\n    Done(T),\n}","parent":null,"children":[{"krate":0,"index":4324},{"krate":0,"index":4327}],"decl_id":null,"docs":" Value controlling the execution of `.fold_while` on `Zip`.\n","sig":null,"attributes":[{"value":"/ Value controlling the execution of `.fold_while` on `Zip`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266261,"byte_end":266323,"line_start":1023,"line_end":1023,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266569,"byte_end":266579,"line_start":1034,"line_end":1034,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266531,"byte_end":266557,"line_start":1033,"line_end":1033,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266761,"byte_end":266768,"line_start":1041,"line_end":1041,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if it is `Done`, false if `Continue`\n","sig":null,"attributes":[{"value":"/ Return true if it is `Done`, false if `Continue`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266697,"byte_end":266749,"line_start":1040,"line_end":1040,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4338},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307744,"byte_end":307748,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Axes","qualname":"::dimension::axes::Axes","value":"Axes {  }","parent":null,"children":[{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344}],"decl_id":null,"docs":" An iterator over the length and stride of each axis of an array.","sig":null,"attributes":[{"value":"/ An iterator over the length and stride of each axis of an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307207,"byte_end":307275,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307276,"byte_end":307279,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`.axes()`](../struct.ArrayBase.html#method.axes) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307280,"byte_end":307359,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307360,"byte_end":307363,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `AxisDescription`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307364,"byte_end":307411,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307412,"byte_end":307415,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307416,"byte_end":307430,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307431,"byte_end":307434,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307435,"byte_end":307442,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307443,"byte_end":307467,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307468,"byte_end":307490,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307491,"byte_end":307494,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let a = Array3::<f32>::zeros((3, 5, 4));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307495,"byte_end":307539,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307540,"byte_end":307543,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let largest_axis = a.axes()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307544,"byte_end":307575,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/                     .max_by_key(|ax| ax.len())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307576,"byte_end":307626,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/                     .unwrap().axis();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307627,"byte_end":307668,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(largest_axis, Axis(1));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307669,"byte_end":307707,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307708,"byte_end":307715,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307915,"byte_end":307930,"line_start":45,"line_end":45,"column_start":12,"column_end":27},"name":"AxisDescription","qualname":"::dimension::axes::AxisDescription","value":"","parent":null,"children":[],"decl_id":null,"docs":" Description of the axis, its length and its stride.\n","sig":null,"attributes":[{"value":"/ Description of the axis, its length and its stride.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307831,"byte_end":307886,"line_start":43,"line_end":43,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307931,"byte_end":307939,"line_start":45,"line_end":45,"column_start":28,"column_end":36},"name":"0","qualname":"::dimension::axes::AxisDescription::0","value":"dimension::axis::Axis","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4352},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307941,"byte_end":307947,"line_start":45,"line_end":45,"column_start":38,"column_end":44},"name":"1","qualname":"::dimension::axes::AxisDescription::1","value":"usize","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4353},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":307949,"byte_end":307956,"line_start":45,"line_end":45,"column_start":46,"column_end":53},"name":"2","qualname":"::dimension::axes::AxisDescription::2","value":"isize","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308225,"byte_end":308229,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"axis","qualname":"<AxisDescription>::axis","value":"pub fn axis(Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return axis\n","sig":null,"attributes":[{"value":"/ Return axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308176,"byte_end":308191,"line_start":53,"line_end":53,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308196,"byte_end":308213,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308322,"byte_end":308325,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"len","qualname":"<AxisDescription>::len","value":"pub fn len(Self) -> Ix","parent":null,"children":[],"decl_id":null,"docs":" Return length\n","sig":null,"attributes":[{"value":"/ Return length","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308271,"byte_end":308288,"line_start":58,"line_end":58,"column_start":5,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308293,"byte_end":308310,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308416,"byte_end":308422,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"stride","qualname":"<AxisDescription>::stride","value":"pub fn stride(Self) -> Ixs","parent":null,"children":[],"decl_id":null,"docs":" Return stride\n","sig":null,"attributes":[{"value":"/ Return stride","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308365,"byte_end":308382,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308387,"byte_end":308404,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310988,"byte_end":310992,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Axis","qualname":"::dimension::axis::Axis","value":"","parent":null,"children":[],"decl_id":null,"docs":" An axis index.","sig":null,"attributes":[{"value":"/ An axis index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310604,"byte_end":310622,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310623,"byte_end":310626,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An axis one of an array’s “dimensions”; an *n*-dimensional array has *n* axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310627,"byte_end":310715,"line_start":11,"line_end":11,"column_start":1,"column_end":83}},{"value":"/ Axis *0* is the array’s outermost axis and *n*-1 is the innermost.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310716,"byte_end":310788,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310789,"byte_end":310792,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All array axis arguments use this type to make the code easier to write","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310793,"byte_end":310868,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ correctly and easier to understand.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310869,"byte_end":310908,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4368},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":310993,"byte_end":311002,"line_start":17,"line_end":17,"column_start":17,"column_end":26},"name":"0","qualname":"::dimension::axis::Axis::0","value":"usize","parent":{"krate":0,"index":4366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":311089,"byte_end":311094,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"index","qualname":"<Axis>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the axis.\n","sig":null,"attributes":[{"value":"/ Return the index of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":311022,"byte_end":311055,"line_start":20,"line_end":20,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":311060,"byte_end":311077,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312644,"byte_end":312657,"line_start":41,"line_end":41,"column_start":11,"column_end":24},"name":"IntoDimension","qualname":"::dimension::conversion::IntoDimension","value":"IntoDimension","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938}],"decl_id":null,"docs":" Argument conversion a dimension.\n","sig":null,"attributes":[{"value":"/ Argument conversion a dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312597,"byte_end":312633,"line_start":40,"line_end":40,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312669,"byte_end":312672,"line_start":42,"line_end":42,"column_start":10,"column_end":13},"name":"Dim","qualname":"::dimension::conversion::IntoDimension::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312692,"byte_end":312706,"line_start":43,"line_end":43,"column_start":8,"column_end":22},"name":"into_dimension","qualname":"::dimension::conversion::IntoDimension::into_dimension","value":"pub fn into_dimension(Self) -> Self::Dim","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":313370,"byte_end":313372,"line_start":82,"line_end":82,"column_start":10,"column_end":12},"name":"To","qualname":"::dimension::conversion::Convert::To","value":"type To;","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4567},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316562,"byte_end":316565,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"Dim","qualname":"::dimension::dim::Dim","value":"Dim {  }","parent":null,"children":[{"krate":0,"index":4569}],"decl_id":null,"docs":" Dimension description.","sig":null,"attributes":[{"value":"/ Dimension description.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":315875,"byte_end":315901,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":315902,"byte_end":315905,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Dim` describes the number of axes and the length of each axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":315906,"byte_end":315972,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ in an array. It is also used as an index type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":315973,"byte_end":316023,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316024,"byte_end":316027,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See also the [`Dimension` trait](Dimension.t.html) for its methods and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316028,"byte_end":316102,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ operations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316103,"byte_end":316118,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316119,"byte_end":316122,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316123,"byte_end":316137,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316138,"byte_end":316141,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To create an array with a particular dimension, you'd just pass","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316142,"byte_end":316209,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ a tuple (in this example (3, 2) is used), which is converted to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316210,"byte_end":316277,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ `Dim` by the array constructor.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316278,"byte_end":316313,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316314,"byte_end":316317,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316318,"byte_end":316325,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316326,"byte_end":316350,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Dim;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316351,"byte_end":316372,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316373,"byte_end":316376,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut array = Array2::zeros((3, 2));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316377,"byte_end":316419,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ array[[0, 0]] = 1.;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316420,"byte_end":316443,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(array.raw_dim(), Dim([3, 2]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316444,"byte_end":316489,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316490,"byte_end":316497,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316985,"byte_end":316988,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"Dim","qualname":"::dimension::dim::Dim","value":"pub fn Dim<T>(T) -> T::Dim where T: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value.\n","sig":null,"attributes":[{"value":"/ Create a new dimension value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316919,"byte_end":316952,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316953,"byte_end":316977,"line_start":59,"line_end":59,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321071,"byte_end":321080,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Dimension","qualname":"::dimension::dimension_trait::Dimension","value":"Dimension: Clone + Eq + Debug + Send + Sync + Default + IndexMut<usize, Output = usize> +\nAdd<Self, Output = Self> + AddAssign + for<'x> AddAssign<&'x Self> + Sub<Self,\nOutput = Self> + SubAssign + for<'x> SubAssign<&'x Self> + Mul<usize, Output =\nSelf> + Mul<Self, Output = Self> + MulAssign + for<'x> MulAssign<&'x Self> +\nMulAssign<usize>","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":4647}],"decl_id":null,"docs":" Array shape and index trait.","sig":null,"attributes":[{"value":"/ Array shape and index trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":320846,"byte_end":320878,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":320879,"byte_end":320882,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods and operations that can be used on","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":320883,"byte_end":320960,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ dimensions and indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":320961,"byte_end":320988,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":320989,"byte_end":320992,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ **Note:** *This trait can not be implemented outside the crate*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":320993,"byte_end":321060,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321692,"byte_end":321696,"line_start":53,"line_end":53,"column_start":11,"column_end":15},"name":"NDIM","qualname":"::dimension::dimension_trait::Dimension::NDIM","value":"Option<usize>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" For fixed-size dimension representations (e.g. `Ix2`), this should be\n `Some(ndim)`, and for variable-size dimension representations (e.g.\n `IxDyn`), this should be `None`.\n","sig":null,"attributes":[{"value":"/ For fixed-size dimension representations (e.g. `Ix2`), this should be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321491,"byte_end":321564,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ `Some(ndim)`, and for variable-size dimension representations (e.g.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321569,"byte_end":321640,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ `IxDyn`), this should be `None`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321645,"byte_end":321681,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322267,"byte_end":322275,"line_start":68,"line_end":68,"column_start":10,"column_end":18},"name":"SliceArg","qualname":"::dimension::dimension_trait::Dimension::SliceArg","value":"type SliceArg: ?Sized + AsRef<[SliceOrIndex]>;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" `SliceArg` is the type which is used to specify slicing for this\n dimension.","sig":null,"attributes":[{"value":"/ `SliceArg` is the type which is used to specify slicing for this","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321717,"byte_end":321785,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321790,"byte_end":321804,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321809,"byte_end":321812,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ For the fixed size dimensions it is a fixed size array of the correct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321817,"byte_end":321890,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ size, which you pass by reference. For the dynamic dimension it is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321895,"byte_end":321965,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ a slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321970,"byte_end":321982,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321987,"byte_end":321990,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `[SliceOrIndex; 1]`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321995,"byte_end":322031,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/ - For `Ix2`: `[SliceOrIndex; 2]`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322036,"byte_end":322072,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/ - and so on..","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322077,"byte_end":322094,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `[SliceOrIndex]`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322099,"byte_end":322134,"line_start":64,"line_end":64,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322139,"byte_end":322142,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The easiest way to create a `&SliceInfo<SliceArg, Do>` is using the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322147,"byte_end":322218,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/ [`s![]`](macro.s!.html) macro.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322223,"byte_end":322257,"line_start":67,"line_end":67,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322510,"byte_end":322517,"line_start":75,"line_end":75,"column_start":10,"column_end":17},"name":"Pattern","qualname":"::dimension::dimension_trait::Dimension::Pattern","value":"type Pattern: IntoDimension<Dim = Self> + Clone + Debug + PartialEq + Eq + Default;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Pattern matching friendly form of the dimension value.","sig":null,"attributes":[{"value":"/ Pattern matching friendly form of the dimension value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322313,"byte_end":322371,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322376,"byte_end":322379,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `usize`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322384,"byte_end":322409,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/ - For `Ix2`: `(usize, usize)`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322414,"byte_end":322447,"line_start":72,"line_end":72,"column_start":5,"column_end":38}},{"value":"/ - and so on..","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322452,"byte_end":322469,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `IxDyn`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322474,"byte_end":322500,"line_start":74,"line_end":74,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322645,"byte_end":322652,"line_start":77,"line_end":77,"column_start":10,"column_end":17},"name":"Smaller","qualname":"::dimension::dimension_trait::Dimension::Smaller","value":"type Smaller: Dimension;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Next smaller dimension (if applicable)\n","sig":null,"attributes":[{"value":"/ Next smaller dimension (if applicable)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322593,"byte_end":322635,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322704,"byte_end":322710,"line_start":79,"line_end":79,"column_start":10,"column_end":16},"name":"Larger","qualname":"::dimension::dimension_trait::Dimension::Larger","value":"type Larger: Dimension;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Next larger dimension\n","sig":null,"attributes":[{"value":"/ Next larger dimension","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322669,"byte_end":322694,"line_start":78,"line_end":78,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322790,"byte_end":322794,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"ndim","qualname":"::dimension::dimension_trait::Dimension::ndim","value":"pub fn ndim(&Self) -> usize","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Returns the number of dimensions (number of axes).\n","sig":null,"attributes":[{"value":"/ Returns the number of dimensions (number of axes).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322728,"byte_end":322782,"line_start":81,"line_end":81,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322890,"byte_end":322902,"line_start":85,"line_end":85,"column_start":8,"column_end":20},"name":"into_pattern","qualname":"::dimension::dimension_trait::Dimension::into_pattern","value":"pub fn into_pattern(Self) -> Self::Pattern","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Convert the dimension into a pattern matching friendly value.\n","sig":null,"attributes":[{"value":"/ Convert the dimension into a pattern matching friendly value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322817,"byte_end":322882,"line_start":84,"line_end":84,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322998,"byte_end":323002,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"size","qualname":"::dimension::dimension_trait::Dimension::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Compute the size of the dimension (number of elements)\n","sig":null,"attributes":[{"value":"/ Compute the size of the dimension (number of elements)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":322932,"byte_end":322990,"line_start":87,"line_end":87,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323149,"byte_end":323161,"line_start":93,"line_end":93,"column_start":8,"column_end":20},"name":"size_checked","qualname":"::dimension::dimension_trait::Dimension::size_checked","value":"pub fn size_checked(&Self) -> Option<usize>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Compute the size while checking for overflow.\n","sig":null,"attributes":[{"value":"/ Compute the size while checking for overflow.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323092,"byte_end":323141,"line_start":92,"line_end":92,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323333,"byte_end":323338,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"slice","qualname":"::dimension::dimension_trait::Dimension::slice","value":"pub fn slice(&Self) -> &[Ix]","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323383,"byte_end":323392,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"slice_mut","qualname":"::dimension::dimension_trait::Dimension::slice_mut","value":"pub fn slice_mut(&mut Self) -> &mut [Ix]","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323468,"byte_end":323481,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"as_array_view","qualname":"::dimension::dimension_trait::Dimension::as_array_view","value":"pub fn as_array_view(&Self) -> ArrayView1<, Ix>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Borrow as a read-only array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-only array view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323423,"byte_end":323460,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323609,"byte_end":323626,"line_start":111,"line_end":111,"column_start":8,"column_end":25},"name":"as_array_view_mut","qualname":"::dimension::dimension_trait::Dimension::as_array_view_mut","value":"pub fn as_array_view_mut(&mut Self) -> ArrayViewMut1<, Ix>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Borrow as a read-write array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-write array view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323563,"byte_end":323601,"line_start":110,"line_end":110,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323744,"byte_end":323749,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"equal","qualname":"::dimension::dimension_trait::Dimension::equal","value":"pub fn equal(&Self, &Self) -> bool","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":324068,"byte_end":324083,"line_start":125,"line_end":125,"column_start":8,"column_end":23},"name":"default_strides","qualname":"::dimension::dimension_trait::Dimension::default_strides","value":"pub fn default_strides(&Self) -> Self","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Returns the strides for a standard layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a standard layout array with the given shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323826,"byte_end":323899,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323904,"byte_end":323907,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323912,"byte_end":323986,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":323991,"byte_end":324041,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":324991,"byte_end":325006,"line_start":150,"line_end":150,"column_start":8,"column_end":23},"name":"fortran_strides","qualname":"::dimension::dimension_trait::Dimension::fortran_strides","value":"pub fn fortran_strides(&Self) -> Self","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Returns the strides for a Fortran layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a Fortran layout array with the given shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":324750,"byte_end":324822,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":324827,"byte_end":324830,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":324835,"byte_end":324909,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":324914,"byte_end":324964,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325921,"byte_end":325926,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"zeros","qualname":"::dimension::dimension_trait::Dimension::zeros","value":"pub fn zeros(usize) -> Self","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Creates a dimension of all zeros with the specified ndim.","sig":null,"attributes":[{"value":"/ Creates a dimension of all zeros with the specified ndim.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325654,"byte_end":325715,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325720,"byte_end":325723,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is useful for generalizing over fixed-size and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325728,"byte_end":325790,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/ variable-size dimension representations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325795,"byte_end":325839,"line_start":173,"line_end":173,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325844,"byte_end":325847,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `Self` has a fixed size that is not `ndim`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325852,"byte_end":325913,"line_start":175,"line_end":175,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325990,"byte_end":326001,"line_start":180,"line_end":180,"column_start":8,"column_end":19},"name":"first_index","qualname":"::dimension::dimension_trait::Dimension::first_index","value":"pub fn first_index(&Self) -> Option<Self>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":325973,"byte_end":325982,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326393,"byte_end":326401,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"next_for","qualname":"::dimension::dimension_trait::Dimension::next_for","value":"pub fn next_for(&Self, Self) -> Option<Self>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and return next index after `index`\n or None if there are no more.\n","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and return next index after `index`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326215,"byte_end":326285,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ or None if there are no more.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326290,"byte_end":326323,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326376,"byte_end":326385,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327030,"byte_end":327040,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"next_for_f","qualname":"::dimension::dimension_trait::Dimension::next_for_f","value":"pub fn next_for_f(&Self, &mut Self) -> bool","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and create the next index after `index`\n Return false if iteration is done","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and create the next index after `index`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326860,"byte_end":326934,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ Return false if iteration is done","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326939,"byte_end":326976,"line_start":215,"line_end":215,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326981,"byte_end":326984,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Next in f-order","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":326989,"byte_end":327008,"line_start":217,"line_end":217,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327013,"byte_end":327022,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327457,"byte_end":327470,"line_start":235,"line_end":235,"column_start":8,"column_end":21},"name":"stride_offset","qualname":"::dimension::dimension_trait::Dimension::stride_offset","value":"pub fn stride_offset(&Self, &Self) -> isize","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Return stride offset for index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327414,"byte_end":327449,"line_start":234,"line_end":234,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327764,"byte_end":327785,"line_start":245,"line_end":245,"column_start":8,"column_end":29},"name":"stride_offset_checked","qualname":"::dimension::dimension_trait::Dimension::stride_offset_checked","value":"pub fn stride_offset_checked(&Self, &Self, &Self) -> Option<isize>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Return stride offset for this dimension and index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for this dimension and index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327702,"byte_end":327756,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":327951,"byte_end":327960,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"last_elem","qualname":"::dimension::dimension_trait::Dimension::last_elem","value":"pub fn last_elem(&Self) -> usize","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":328125,"byte_end":328138,"line_start":259,"line_end":259,"column_start":8,"column_end":21},"name":"set_last_elem","qualname":"::dimension::dimension_trait::Dimension::set_last_elem","value":"pub fn set_last_elem(&mut Self, usize)","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":328263,"byte_end":328276,"line_start":265,"line_end":265,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::dimension::dimension_trait::Dimension::is_contiguous","value":"pub fn is_contiguous(&Self, &Self) -> bool","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329233,"byte_end":329262,"line_start":295,"line_end":295,"column_start":8,"column_end":37},"name":"_fastest_varying_stride_order","qualname":"::dimension::dimension_trait::Dimension::_fastest_varying_stride_order","value":"pub fn _fastest_varying_stride_order(&Self) -> Self","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Return the axis ordering corresponding to the fastest variation\n (in ascending order).","sig":null,"attributes":[{"value":"/ Return the axis ordering corresponding to the fastest variation","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":328974,"byte_end":329041,"line_start":289,"line_end":289,"column_start":5,"column_end":72}},{"value":"/ (in ascending order).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329046,"byte_end":329071,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329076,"byte_end":329079,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Assumes that no stride value appears twice. This cannot yield the correct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329084,"byte_end":329161,"line_start":292,"line_end":292,"column_start":5,"column_end":82}},{"value":"/ result the strides are not positive.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329166,"byte_end":329206,"line_start":293,"line_end":293,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329675,"byte_end":329690,"line_start":308,"line_end":308,"column_start":8,"column_end":23},"name":"min_stride_axis","qualname":"::dimension::dimension_trait::Dimension::min_stride_axis","value":"pub fn min_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Compute the minimum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the minimum stride axis (absolute value), under the constraint","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329530,"byte_end":329604,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":329609,"byte_end":329648,"line_start":306,"line_end":306,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":330197,"byte_end":330212,"line_start":323,"line_end":323,"column_start":8,"column_end":23},"name":"max_stride_axis","qualname":"::dimension::dimension_trait::Dimension::max_stride_axis","value":"pub fn max_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Compute the maximum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the maximum stride axis (absolute value), under the constraint","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":330052,"byte_end":330126,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":330131,"byte_end":330170,"line_start":321,"line_end":321,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":330652,"byte_end":330660,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"into_dyn","qualname":"::dimension::dimension_trait::Dimension::into_dyn","value":"pub fn into_dyn(Self) -> IxDyn","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Convert the dimensional into a dynamic dimensional (IxDyn).\n","sig":null,"attributes":[{"value":"/ Convert the dimensional into a dynamic dimensional (IxDyn).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":330581,"byte_end":330644,"line_start":335,"line_end":335,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":330739,"byte_end":330753,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"from_dimension","qualname":"::dimension::dimension_trait::Dimension::from_dimension","value":"pub fn from_dimension<D2: Dimension>(&D2) -> Option<Self>","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":331041,"byte_end":331052,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"insert_axis","qualname":"::dimension::dimension_trait::Dimension::insert_axis","value":"pub fn insert_axis(&Self, Axis) -> Self::Larger","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":331116,"byte_end":331131,"line_start":357,"line_end":357,"column_start":8,"column_end":23},"name":"try_remove_axis","qualname":"::dimension::dimension_trait::Dimension::try_remove_axis","value":"pub fn try_remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4727},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":348139,"byte_end":348148,"line_start":118,"line_end":118,"column_start":12,"column_end":21},"name":"IxDynImpl","qualname":"::dimension::dynindeximpl::IxDynImpl","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dynamic dimension or index type.","sig":null,"attributes":[{"value":"/ Dynamic dimension or index type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347854,"byte_end":347890,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347891,"byte_end":347894,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Use `IxDyn` directly. This type implements a dynamic number of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347895,"byte_end":347961,"line_start":114,"line_end":114,"column_start":1,"column_end":67}},{"value":"/ dimensions or indices. Short dimensions are stored inline and don't need","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347962,"byte_end":348038,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ any dynamic memory allocation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":348039,"byte_end":348073,"line_start":116,"line_end":116,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350854,"byte_end":350859,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"zeros","qualname":"<IxDyn>::zeros","value":"pub fn zeros(usize) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value with `n` axes, all zeros\n","sig":null,"attributes":[{"value":"/ Create a new dimension value with `n` axes, all zeros","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350771,"byte_end":350828,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350833,"byte_end":350842,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351553,"byte_end":351560,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"name":"NdIndex","qualname":"::dimension::ndindex::NdIndex","value":"NdIndex<E>: Debug","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296}],"decl_id":null,"docs":" Tuple or fixed size arrays that can be used to index an array.","sig":null,"attributes":[{"value":"/ Tuple or fixed size arrays that can be used to index an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351248,"byte_end":351314,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351315,"byte_end":351318,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351319,"byte_end":351326,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351327,"byte_end":351349,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351350,"byte_end":351353,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut a = arr2(&[[0, 1],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351354,"byte_end":351384,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/                    [2, 3]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351385,"byte_end":351417,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a[[0, 1]], 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351418,"byte_end":351447,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a[[1, 1]], 3);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351448,"byte_end":351477,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ a[[1, 1]] += 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351478,"byte_end":351497,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(a[(1, 1)], 4);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351498,"byte_end":351527,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351528,"byte_end":351535,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351599,"byte_end":351612,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"index_checked","qualname":"::dimension::ndindex::NdIndex::index_checked","value":"pub fn index_checked(&Self, &E, &E) -> Option<isize>","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351686,"byte_end":351701,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"index_unchecked","qualname":"::dimension::ndindex::NdIndex::index_unchecked","value":"pub fn index_unchecked(&Self, &E) -> isize","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358722,"byte_end":358732,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"RemoveAxis","qualname":"::dimension::remove_axis::RemoveAxis","value":"RemoveAxis: Dimension","parent":null,"children":[{"krate":0,"index":2347}],"decl_id":null,"docs":" Array shape with a next smaller dimension.","sig":null,"attributes":[{"value":"/ Array shape with a next smaller dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358526,"byte_end":358572,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358573,"byte_end":358576,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `RemoveAxis` defines a larger-than relation for array shapes:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358577,"byte_end":358642,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ removing one axis from *Self* gives smaller dimension *Smaller*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358643,"byte_end":358711,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358753,"byte_end":358764,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"remove_axis","qualname":"::dimension::remove_axis::RemoveAxis::remove_axis","value":"pub fn remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":2346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":7616},{"krate":0,"index":2437},{"krate":0,"index":7618},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":7670},{"krate":0,"index":2468},{"krate":0,"index":7672},{"krate":0,"index":2469},{"krate":0,"index":7674},{"krate":0,"index":2470},{"krate":0,"index":7676},{"krate":0,"index":2471},{"krate":0,"index":7678},{"krate":0,"index":2472},{"krate":0,"index":7680},{"krate":0,"index":2473},{"krate":0,"index":7682},{"krate":0,"index":2474},{"krate":0,"index":7684},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490}],"decl_id":null,"docs":" ndarray prelude.","sig":null,"attributes":[{"value":"/ ndarray prelude.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360332,"byte_end":360352,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360353,"byte_end":360356,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains the most used types, type aliases, traits, functions,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360357,"byte_end":360435,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ and macros that you can import easily as a group.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360436,"byte_end":360489,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360490,"byte_end":360493,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360494,"byte_end":360501,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360502,"byte_end":360527,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360528,"byte_end":360531,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360532,"byte_end":360560,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360561,"byte_end":360580,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/prelude.rs","byte_start":360581,"byte_end":360588,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7147,"byte_end":7149,"line_start":200,"line_end":200,"column_start":10,"column_end":12},"name":"Ix","qualname":"::Ix","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Array index type\n","sig":null,"attributes":[{"value":"/ Array index type","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7117,"byte_end":7137,"line_start":199,"line_end":199,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7198,"byte_end":7201,"line_start":202,"line_end":202,"column_start":10,"column_end":13},"name":"Ixs","qualname":"::Ixs","value":"isize","parent":null,"children":[],"decl_id":null,"docs":" Array index type (signed)\n","sig":null,"attributes":[{"value":"/ Array index type (signed)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7159,"byte_end":7188,"line_start":201,"line_end":201,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42173,"byte_end":42182,"line_start":1203,"line_end":1203,"column_start":12,"column_end":21},"name":"ArrayBase","qualname":"::ArrayBase","value":"ArrayBase {  }","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499}],"decl_id":null,"docs":" An *n*-dimensional array.","sig":null,"attributes":[{"value":"/ An *n*-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7212,"byte_end":7241,"line_start":204,"line_end":204,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7242,"byte_end":7245,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ The array is a general container of elements. It cannot grow or shrink, but","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7246,"byte_end":7325,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ can be sliced into subsets of its data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7326,"byte_end":7369,"line_start":207,"line_end":207,"column_start":1,"column_end":44}},{"value":"/ The array supports arithmetic operations by applying them elementwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7370,"byte_end":7444,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7445,"byte_end":7448,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7449,"byte_end":7525,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7526,"byte_end":7605,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element is accessed by using that many indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7606,"byte_end":7677,"line_start":212,"line_end":212,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7678,"byte_end":7681,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The `ArrayBase<S, D>` is parameterized by `S` for the data container and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7682,"byte_end":7758,"line_start":214,"line_end":214,"column_start":1,"column_end":77}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7759,"byte_end":7790,"line_start":215,"line_end":215,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7791,"byte_end":7794,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Type aliases [`Array`], [`ArcArray`], [`CowArray`], [`ArrayView`], and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7795,"byte_end":7869,"line_start":217,"line_end":217,"column_start":1,"column_end":75}},{"value":"/ [`ArrayViewMut`] refer to `ArrayBase` with different types for the data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7870,"byte_end":7945,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ container.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7946,"byte_end":7960,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7961,"byte_end":7964,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ [`Array`]: type.Array.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7965,"byte_end":7995,"line_start":221,"line_end":221,"column_start":1,"column_end":31}},{"value":"/ [`ArcArray`]: type.ArcArray.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7996,"byte_end":8032,"line_start":222,"line_end":222,"column_start":1,"column_end":37}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8033,"byte_end":8071,"line_start":223,"line_end":223,"column_start":1,"column_end":39}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8072,"byte_end":8116,"line_start":224,"line_end":224,"column_start":1,"column_end":45}},{"value":"/ [`CowArray`]: type.CowArray.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8117,"byte_end":8153,"line_start":225,"line_end":225,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8154,"byte_end":8157,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ ## Contents","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8158,"byte_end":8173,"line_start":227,"line_end":227,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8174,"byte_end":8177,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ + [Array](#array)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8178,"byte_end":8199,"line_start":229,"line_end":229,"column_start":1,"column_end":22}},{"value":"/ + [ArcArray](#arcarray)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8200,"byte_end":8227,"line_start":230,"line_end":230,"column_start":1,"column_end":28}},{"value":"/ + [CowArray](#cowarray)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8228,"byte_end":8255,"line_start":231,"line_end":231,"column_start":1,"column_end":28}},{"value":"/ + [Array Views](#array-views)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8256,"byte_end":8289,"line_start":232,"line_end":232,"column_start":1,"column_end":34}},{"value":"/ + [Indexing and Dimension](#indexing-and-dimension)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8290,"byte_end":8345,"line_start":233,"line_end":233,"column_start":1,"column_end":56}},{"value":"/ + [Loops, Producers and Iterators](#loops-producers-and-iterators)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8346,"byte_end":8416,"line_start":234,"line_end":234,"column_start":1,"column_end":71}},{"value":"/ + [Slicing](#slicing)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8417,"byte_end":8442,"line_start":235,"line_end":235,"column_start":1,"column_end":26}},{"value":"/ + [Subviews](#subviews)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8443,"byte_end":8470,"line_start":236,"line_end":236,"column_start":1,"column_end":28}},{"value":"/ + [Arithmetic Operations](#arithmetic-operations)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8471,"byte_end":8524,"line_start":237,"line_end":237,"column_start":1,"column_end":54}},{"value":"/ + [Broadcasting](#broadcasting)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8525,"byte_end":8560,"line_start":238,"line_end":238,"column_start":1,"column_end":36}},{"value":"/ + [Conversions](#conversions)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8561,"byte_end":8594,"line_start":239,"line_end":239,"column_start":1,"column_end":34}},{"value":"/ + [Constructor Methods for Owned Arrays](#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8595,"byte_end":8678,"line_start":240,"line_end":240,"column_start":1,"column_end":84}},{"value":"/ + [Methods For All Array Types](#methods-for-all-array-types)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8679,"byte_end":8744,"line_start":241,"line_end":241,"column_start":1,"column_end":66}},{"value":"/ + [Methods For 1-D Arrays](#methods-for-1-d-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8745,"byte_end":8800,"line_start":242,"line_end":242,"column_start":1,"column_end":56}},{"value":"/ + [Methods For 2-D Arrays](#methods-for-2-d-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8801,"byte_end":8856,"line_start":243,"line_end":243,"column_start":1,"column_end":56}},{"value":"/ + [Methods for Dynamic-Dimensional Arrays](#methods-for-dynamic-dimensional-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8857,"byte_end":8944,"line_start":244,"line_end":244,"column_start":1,"column_end":88}},{"value":"/ + [Numerical Methods for Arrays](#numerical-methods-for-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":8945,"byte_end":9012,"line_start":245,"line_end":245,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9013,"byte_end":9016,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ## `Array`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9017,"byte_end":9031,"line_start":247,"line_end":247,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9032,"byte_end":9035,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ [`Array`](type.Array.html) is an owned array that owns the underlying array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9036,"byte_end":9115,"line_start":249,"line_end":249,"column_start":1,"column_end":80}},{"value":"/ elements directly (just like a `Vec`) and it is the default way to create and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9116,"byte_end":9197,"line_start":250,"line_end":250,"column_start":1,"column_end":82}},{"value":"/ store n-dimensional data. `Array<A, D>` has two type parameters: `A` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9198,"byte_end":9274,"line_start":251,"line_end":251,"column_start":1,"column_end":77}},{"value":"/ the element type, and `D` for the dimensionality. A particular","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9275,"byte_end":9341,"line_start":252,"line_end":252,"column_start":1,"column_end":67}},{"value":"/ dimensionality's type alias like `Array3<A>` just has the type parameter","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9342,"byte_end":9418,"line_start":253,"line_end":253,"column_start":1,"column_end":77}},{"value":"/ `A` for element type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9419,"byte_end":9444,"line_start":254,"line_end":254,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9445,"byte_end":9448,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ An example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9449,"byte_end":9464,"line_start":256,"line_end":256,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9465,"byte_end":9468,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9469,"byte_end":9476,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ // Create a three-dimensional f64 array, initialized with zeros","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9477,"byte_end":9544,"line_start":259,"line_end":259,"column_start":1,"column_end":68}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9545,"byte_end":9569,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ let mut temperature = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9570,"byte_end":9628,"line_start":261,"line_end":261,"column_start":1,"column_end":59}},{"value":"/ // Increase the temperature in this location","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9629,"byte_end":9677,"line_start":262,"line_end":262,"column_start":1,"column_end":49}},{"value":"/ temperature[[2, 2, 2]] += 0.5;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9678,"byte_end":9712,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9713,"byte_end":9720,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9721,"byte_end":9724,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ## `ArcArray`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9725,"byte_end":9742,"line_start":266,"line_end":266,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9743,"byte_end":9746,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ [`ArcArray`](type.ArcArray.html) is an owned array with reference counted","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9747,"byte_end":9824,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"/ data (shared ownership).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9825,"byte_end":9853,"line_start":269,"line_end":269,"column_start":1,"column_end":29}},{"value":"/ Sharing requires that it uses copy-on-write for mutable operations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9854,"byte_end":9925,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9926,"byte_end":9995,"line_start":271,"line_end":271,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](#method.view_mut) or [`get_mut()`](#method.get_mut),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":9996,"byte_end":10067,"line_start":272,"line_end":272,"column_start":1,"column_end":72}},{"value":"/ will break sharing and require a clone of the data (if it is not uniquely held).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10068,"byte_end":10152,"line_start":273,"line_end":273,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10153,"byte_end":10156,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ ## `CowArray`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10157,"byte_end":10174,"line_start":275,"line_end":275,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10175,"byte_end":10178,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ [`CowArray`](type.CowArray.html) is analogous to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10179,"byte_end":10231,"line_start":277,"line_end":277,"column_start":1,"column_end":53}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10232,"byte_end":10309,"line_start":278,"line_end":278,"column_start":1,"column_end":78}},{"value":"/ It can represent either an immutable view or a uniquely owned array. If a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10310,"byte_end":10387,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"/ `CowArray` instance is the immutable view variant, then calling a method","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10388,"byte_end":10464,"line_start":280,"line_end":280,"column_start":1,"column_end":77}},{"value":"/ for mutating elements in the array will cause it to be converted into the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10465,"byte_end":10542,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/ owned variant (by cloning all the elements) before the modification is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10543,"byte_end":10617,"line_start":282,"line_end":282,"column_start":1,"column_end":75}},{"value":"/ performed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10618,"byte_end":10632,"line_start":283,"line_end":283,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10633,"byte_end":10636,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ ## Array Views","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10637,"byte_end":10655,"line_start":285,"line_end":285,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10656,"byte_end":10659,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`] and [`ArrayViewMut`] are read-only and read-write array views","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10660,"byte_end":10739,"line_start":287,"line_end":287,"column_start":1,"column_end":80}},{"value":"/ respectively. They use dimensionality, indexing, and almost all other","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10740,"byte_end":10813,"line_start":288,"line_end":288,"column_start":1,"column_end":74}},{"value":"/ methods the same was as the other array types.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10814,"byte_end":10864,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10865,"byte_end":10868,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ Methods for `ArrayBase` apply to array views too, when the trait bounds","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10869,"byte_end":10944,"line_start":291,"line_end":291,"column_start":1,"column_end":76}},{"value":"/ allow.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10945,"byte_end":10955,"line_start":292,"line_end":292,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10956,"byte_end":10959,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the respective array view for an overview","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":10960,"byte_end":11038,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/ of methods specific to array views: [`ArrayView`], [`ArrayViewMut`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11039,"byte_end":11111,"line_start":295,"line_end":295,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11112,"byte_end":11115,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ A view is created from an array using `.view()`, `.view_mut()`, using","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11116,"byte_end":11189,"line_start":297,"line_end":297,"column_start":1,"column_end":74}},{"value":"/ slicing (`.slice()`, `.slice_mut()`) or from one of the many iterators","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11190,"byte_end":11264,"line_start":298,"line_end":298,"column_start":1,"column_end":75}},{"value":"/ that yield array views.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11265,"byte_end":11292,"line_start":299,"line_end":299,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11293,"byte_end":11296,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ You can also create an array view from a regular slice of data not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11297,"byte_end":11367,"line_start":301,"line_end":301,"column_start":1,"column_end":71}},{"value":"/ allocated with `Array` — see array view methods or their `From` impls.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11368,"byte_end":11444,"line_start":302,"line_end":302,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11445,"byte_end":11448,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ Note that all `ArrayBase` variants can change their view (slicing) of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11449,"byte_end":11526,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ data freely, even when their data can’t be mutated.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11527,"byte_end":11584,"line_start":305,"line_end":305,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11585,"byte_end":11588,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ ## Indexing and Dimension","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11589,"byte_end":11618,"line_start":307,"line_end":307,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11619,"byte_end":11622,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ The dimensionality of the array determines the number of *axes*, for example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11623,"byte_end":11703,"line_start":309,"line_end":309,"column_start":1,"column_end":81}},{"value":"/ a 2D array has two axes. These are listed in “big endian” order, so that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11704,"byte_end":11784,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ the greatest dimension is listed first, the lowest dimension with the most","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11785,"byte_end":11863,"line_start":311,"line_end":311,"column_start":1,"column_end":79}},{"value":"/ rapidly varying index is the last.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11864,"byte_end":11902,"line_start":312,"line_end":312,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11903,"byte_end":11906,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ In a 2D array the index of each element is `[row, column]` as seen in this","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11907,"byte_end":11985,"line_start":314,"line_end":314,"column_start":1,"column_end":79}},{"value":"/ 4 × 3 example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":11986,"byte_end":12005,"line_start":315,"line_end":315,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12006,"byte_end":12009,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12010,"byte_end":12023,"line_start":317,"line_end":317,"column_start":1,"column_end":14}},{"value":"/ [[ [0, 0], [0, 1], [0, 2] ],  // row 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12024,"byte_end":12066,"line_start":318,"line_end":318,"column_start":1,"column_end":43}},{"value":"/  [ [1, 0], [1, 1], [1, 2] ],  // row 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12067,"byte_end":12109,"line_start":319,"line_end":319,"column_start":1,"column_end":43}},{"value":"/  [ [2, 0], [2, 1], [2, 2] ],  // row 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12110,"byte_end":12152,"line_start":320,"line_end":320,"column_start":1,"column_end":43}},{"value":"/  [ [3, 0], [3, 1], [3, 2] ]]  // row 3","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12153,"byte_end":12195,"line_start":321,"line_end":321,"column_start":1,"column_end":43}},{"value":"/ //    \\       \\       \\","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12196,"byte_end":12223,"line_start":322,"line_end":322,"column_start":1,"column_end":28}},{"value":"/ //   column 0  \\     column 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12224,"byte_end":12257,"line_start":323,"line_end":323,"column_start":1,"column_end":34}},{"value":"/ //            column 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12258,"byte_end":12284,"line_start":324,"line_end":324,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12285,"byte_end":12292,"line_start":325,"line_end":325,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12293,"byte_end":12296,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ The number of axes for an array is fixed by its `D` type parameter: `Ix1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12297,"byte_end":12374,"line_start":327,"line_end":327,"column_start":1,"column_end":78}},{"value":"/ for a 1D array, `Ix2` for a 2D array etc. The dimension type `IxDyn` allows","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12375,"byte_end":12454,"line_start":328,"line_end":328,"column_start":1,"column_end":80}},{"value":"/ a dynamic number of axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12455,"byte_end":12484,"line_start":329,"line_end":329,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12485,"byte_end":12488,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ A fixed size array (`[usize; N]`) of the corresponding dimensionality is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12489,"byte_end":12565,"line_start":331,"line_end":331,"column_start":1,"column_end":77}},{"value":"/ used to index the `Array`, making the syntax `array[[` i, j,  ...`]]`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12566,"byte_end":12639,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12640,"byte_end":12643,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12644,"byte_end":12651,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12652,"byte_end":12676,"line_start":335,"line_end":335,"column_start":1,"column_end":25}},{"value":"/ let mut array = Array2::zeros((4, 3));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12677,"byte_end":12719,"line_start":336,"line_end":336,"column_start":1,"column_end":43}},{"value":"/ array[[1, 1]] = 7;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12720,"byte_end":12742,"line_start":337,"line_end":337,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12743,"byte_end":12750,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12751,"byte_end":12754,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ Important traits and types for dimension and indexing:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12755,"byte_end":12813,"line_start":340,"line_end":340,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12814,"byte_end":12817,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ - A [`Dim`](Dim.t.html) value represents a dimensionality or index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12818,"byte_end":12889,"line_start":342,"line_end":342,"column_start":1,"column_end":72}},{"value":"/ - Trait [`Dimension`](Dimension.t.html) is implemented by all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12890,"byte_end":12955,"line_start":343,"line_end":343,"column_start":1,"column_end":66}},{"value":"/ dimensionalities. It defines many operations for dimensions and indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":12956,"byte_end":13032,"line_start":344,"line_end":344,"column_start":1,"column_end":77}},{"value":"/ - Trait [`IntoDimension`](IntoDimension.t.html) is used to convert into a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13033,"byte_end":13110,"line_start":345,"line_end":345,"column_start":1,"column_end":78}},{"value":"/ `Dim` value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13111,"byte_end":13127,"line_start":346,"line_end":346,"column_start":1,"column_end":17}},{"value":"/ - Trait [`ShapeBuilder`](ShapeBuilder.t.html) is an extension of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13128,"byte_end":13196,"line_start":347,"line_end":347,"column_start":1,"column_end":69}},{"value":"/ `IntoDimension` and is used when constructing an array. A shape describes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13197,"byte_end":13274,"line_start":348,"line_end":348,"column_start":1,"column_end":78}},{"value":"/ not just the extent of each axis but also their strides.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13275,"byte_end":13335,"line_start":349,"line_end":349,"column_start":1,"column_end":61}},{"value":"/ - Trait [`NdIndex`](NdIndex.t.html) is an extension of `Dimension` and is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13336,"byte_end":13413,"line_start":350,"line_end":350,"column_start":1,"column_end":78}},{"value":"/ for values that can be used with indexing syntax.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13414,"byte_end":13467,"line_start":351,"line_end":351,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13468,"byte_end":13471,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13472,"byte_end":13475,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ The default memory order of an array is *row major* order (a.k.a “c” order),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13476,"byte_end":13560,"line_start":354,"line_end":354,"column_start":1,"column_end":81}},{"value":"/ where each row is contiguous in memory.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13561,"byte_end":13604,"line_start":355,"line_end":355,"column_start":1,"column_end":44}},{"value":"/ A *column major* (a.k.a. “f” or fortran) memory order array has","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13605,"byte_end":13676,"line_start":356,"line_end":356,"column_start":1,"column_end":68}},{"value":"/ columns (or, in general, the outermost axis) with contiguous elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13677,"byte_end":13751,"line_start":357,"line_end":357,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13752,"byte_end":13755,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ The logical order of any array’s elements is the row major order","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13756,"byte_end":13826,"line_start":359,"line_end":359,"column_start":1,"column_end":69}},{"value":"/ (the rightmost index is varying the fastest).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13827,"byte_end":13876,"line_start":360,"line_end":360,"column_start":1,"column_end":50}},{"value":"/ The iterators `.iter(), .iter_mut()` always adhere to this order, for example.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13877,"byte_end":13959,"line_start":361,"line_end":361,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13960,"byte_end":13963,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ ## Loops, Producers and Iterators","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":13964,"byte_end":14001,"line_start":363,"line_end":363,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14002,"byte_end":14005,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ Using [`Zip`](struct.Zip.html) is the most general way to apply a procedure","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14006,"byte_end":14085,"line_start":365,"line_end":365,"column_start":1,"column_end":80}},{"value":"/ across one or several arrays or *producers*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14086,"byte_end":14134,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14135,"byte_end":14138,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ [`NdProducer`](trait.NdProducer.html) is like an iterable but for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14139,"byte_end":14208,"line_start":368,"line_end":368,"column_start":1,"column_end":70}},{"value":"/ multidimensional data. All producers have dimensions and axes, like an","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14209,"byte_end":14283,"line_start":369,"line_end":369,"column_start":1,"column_end":75}},{"value":"/ array view, and they can be split and used with parallelization using `Zip`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14284,"byte_end":14364,"line_start":370,"line_end":370,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14365,"byte_end":14368,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ For example, `ArrayView<A, D>` is a producer, it has the same dimensions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14369,"byte_end":14445,"line_start":372,"line_end":372,"column_start":1,"column_end":77}},{"value":"/ as the array view and for each iteration it produces a reference to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14446,"byte_end":14517,"line_start":373,"line_end":373,"column_start":1,"column_end":72}},{"value":"/ the array element (`&A` in this case).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14518,"byte_end":14560,"line_start":374,"line_end":374,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14561,"byte_end":14564,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ Another example, if we have a 10 × 10 array and use `.exact_chunks((2, 2))`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14565,"byte_end":14645,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/ we get a producer of chunks which has the dimensions 5 × 5 (because","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14646,"byte_end":14718,"line_start":377,"line_end":377,"column_start":1,"column_end":72}},{"value":"/ there are *10 / 2 = 5* chunks in either direction). The 5 × 5 chunks producer","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14719,"byte_end":14801,"line_start":378,"line_end":378,"column_start":1,"column_end":82}},{"value":"/ can be paired with any other producers of the same dimension with `Zip`, for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14802,"byte_end":14882,"line_start":379,"line_end":379,"column_start":1,"column_end":81}},{"value":"/ example 5 × 5 arrays.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14883,"byte_end":14909,"line_start":380,"line_end":380,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14910,"byte_end":14913,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ ### `.iter()` and `.iter_mut()`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14914,"byte_end":14949,"line_start":382,"line_end":382,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14950,"byte_end":14953,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ These are the element iterators of arrays and they produce an element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":14954,"byte_end":15027,"line_start":384,"line_end":384,"column_start":1,"column_end":74}},{"value":"/ sequence in the logical order of the array, that means that the elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15028,"byte_end":15104,"line_start":385,"line_end":385,"column_start":1,"column_end":77}},{"value":"/ will be visited in the sequence that corresponds to increasing the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15105,"byte_end":15175,"line_start":386,"line_end":386,"column_start":1,"column_end":71}},{"value":"/ last index first: *0, ..., 0,  0*; *0, ..., 0, 1*; *0, ...0, 2* and so on.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15176,"byte_end":15254,"line_start":387,"line_end":387,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15255,"byte_end":15258,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ### `.outer_iter()` and `.axis_iter()`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15259,"byte_end":15301,"line_start":389,"line_end":389,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15302,"byte_end":15305,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ These iterators produce array views of one smaller dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15306,"byte_end":15371,"line_start":391,"line_end":391,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15372,"byte_end":15375,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ For example, for a 2D array, `.outer_iter()` will produce the 1D rows.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15376,"byte_end":15450,"line_start":393,"line_end":393,"column_start":1,"column_end":75}},{"value":"/ For a 3D array, `.outer_iter()` produces 2D subviews.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15451,"byte_end":15508,"line_start":394,"line_end":394,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15509,"byte_end":15512,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ `.axis_iter()` is like `outer_iter()` but allows you to pick which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15513,"byte_end":15583,"line_start":396,"line_end":396,"column_start":1,"column_end":71}},{"value":"/ axis to traverse.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15584,"byte_end":15605,"line_start":397,"line_end":397,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15606,"byte_end":15609,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ The `outer_iter` and `axis_iter` are one dimensional producers.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15610,"byte_end":15677,"line_start":399,"line_end":399,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15678,"byte_end":15681,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ ## `.genrows()`, `.gencolumns()` and `.lanes()`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15682,"byte_end":15733,"line_start":401,"line_end":401,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15734,"byte_end":15737,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ [`.genrows()`][gr] is a producer (and iterable) of all rows in an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15738,"byte_end":15814,"line_start":403,"line_end":403,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15815,"byte_end":15818,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15819,"byte_end":15826,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15827,"byte_end":15850,"line_start":406,"line_end":406,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15851,"byte_end":15854,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ // 1. Loop over the rows of a 2D array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15855,"byte_end":15897,"line_start":408,"line_end":408,"column_start":1,"column_end":43}},{"value":"/ let mut a = Array::zeros((10, 10));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15898,"byte_end":15937,"line_start":409,"line_end":409,"column_start":1,"column_end":40}},{"value":"/ for mut row in a.genrows_mut() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15938,"byte_end":15974,"line_start":410,"line_end":410,"column_start":1,"column_end":37}},{"value":"/     row.fill(1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15975,"byte_end":15996,"line_start":411,"line_end":411,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":15997,"byte_end":16002,"line_start":412,"line_end":412,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16003,"byte_end":16006,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ // 2. Use Zip to pair each row in 2D `a` with elements in 1D `b`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16007,"byte_end":16075,"line_start":414,"line_end":414,"column_start":1,"column_end":69}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16076,"byte_end":16097,"line_start":415,"line_end":415,"column_start":1,"column_end":22}},{"value":"/ let mut b = Array::zeros(a.nrows());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16098,"byte_end":16138,"line_start":416,"line_end":416,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16139,"byte_end":16142,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ Zip::from(a.genrows())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16143,"byte_end":16169,"line_start":418,"line_end":418,"column_start":1,"column_end":27}},{"value":"/     .and(&mut b)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16170,"byte_end":16190,"line_start":419,"line_end":419,"column_start":1,"column_end":21}},{"value":"/     .apply(|a_row, b_elt| {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16191,"byte_end":16222,"line_start":420,"line_end":420,"column_start":1,"column_end":32}},{"value":"/         *b_elt = a_row[a.ncols() - 1] - a_row[0];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16223,"byte_end":16276,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16277,"byte_end":16288,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16289,"byte_end":16296,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16297,"byte_end":16300,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ The *lanes* of an array are 1D segments along an axis and when pointed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16301,"byte_end":16375,"line_start":425,"line_end":425,"column_start":1,"column_end":75}},{"value":"/ along the last axis they are *rows*, when pointed along the first axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16376,"byte_end":16450,"line_start":426,"line_end":426,"column_start":1,"column_end":75}},{"value":"/ they are *columns*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16451,"byte_end":16474,"line_start":427,"line_end":427,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16475,"byte_end":16478,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ A *m* × *n* array has *m* rows each of length *n* and conversely","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16479,"byte_end":16548,"line_start":429,"line_end":429,"column_start":1,"column_end":69}},{"value":"/ *n* columns each of length *m*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16549,"byte_end":16584,"line_start":430,"line_end":430,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16585,"byte_end":16588,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ To generalize this, we say that an array of dimension *a* × *m* × *n*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16589,"byte_end":16664,"line_start":432,"line_end":432,"column_start":1,"column_end":74}},{"value":"/ has *a m* rows. It's composed of *a* times the previous array, so it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16665,"byte_end":16737,"line_start":433,"line_end":433,"column_start":1,"column_end":73}},{"value":"/ has *a* times as many rows.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16738,"byte_end":16769,"line_start":434,"line_end":434,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16770,"byte_end":16773,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ All methods: [`.genrows()`][gr], [`.genrows_mut()`][grm],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16774,"byte_end":16835,"line_start":436,"line_end":436,"column_start":1,"column_end":62}},{"value":"/ [`.gencolumns()`][gc], [`.gencolumns_mut()`][gcm],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16836,"byte_end":16890,"line_start":437,"line_end":437,"column_start":1,"column_end":55}},{"value":"/ [`.lanes(axis)`][l], [`.lanes_mut(axis)`][lm].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16891,"byte_end":16941,"line_start":438,"line_end":438,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16942,"byte_end":16945,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ [gr]: #method.genrows","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16946,"byte_end":16971,"line_start":440,"line_end":440,"column_start":1,"column_end":26}},{"value":"/ [grm]: #method.genrows_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":16972,"byte_end":17002,"line_start":441,"line_end":441,"column_start":1,"column_end":31}},{"value":"/ [gc]: #method.gencolumns","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17003,"byte_end":17031,"line_start":442,"line_end":442,"column_start":1,"column_end":29}},{"value":"/ [gcm]: #method.gencolumns_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17032,"byte_end":17065,"line_start":443,"line_end":443,"column_start":1,"column_end":34}},{"value":"/ [l]: #method.lanes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17066,"byte_end":17088,"line_start":444,"line_end":444,"column_start":1,"column_end":23}},{"value":"/ [lm]: #method.lanes_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17089,"byte_end":17116,"line_start":445,"line_end":445,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17117,"byte_end":17120,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ Yes, for 2D arrays `.genrows()` and `.outer_iter()` have about the same","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17121,"byte_end":17196,"line_start":447,"line_end":447,"column_start":1,"column_end":76}},{"value":"/ effect:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17197,"byte_end":17208,"line_start":448,"line_end":448,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17209,"byte_end":17212,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/  + `genrows()` is a producer with *n* - 1 dimensions of 1 dimensional items","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17213,"byte_end":17292,"line_start":450,"line_end":450,"column_start":1,"column_end":80}},{"value":"/  + `outer_iter()` is a producer with 1 dimension of *n* - 1 dimensional items","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17293,"byte_end":17374,"line_start":451,"line_end":451,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17375,"byte_end":17378,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ## Slicing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17379,"byte_end":17393,"line_start":453,"line_end":453,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17394,"byte_end":17397,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ You can use slicing to create a view of a subset of the data in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17398,"byte_end":17465,"line_start":455,"line_end":455,"column_start":1,"column_end":68}},{"value":"/ the array. Slicing methods include [`.slice()`], [`.slice_mut()`],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17466,"byte_end":17536,"line_start":456,"line_end":456,"column_start":1,"column_end":71}},{"value":"/ [`.slice_move()`], and [`.slice_collapse()`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17537,"byte_end":17586,"line_start":457,"line_end":457,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17587,"byte_end":17590,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ The slicing argument can be passed using the macro [`s![]`](macro.s!.html),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17591,"byte_end":17670,"line_start":459,"line_end":459,"column_start":1,"column_end":80}},{"value":"/ which will be used in all examples. (The explicit form is an instance of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17671,"byte_end":17747,"line_start":460,"line_end":460,"column_start":1,"column_end":77}},{"value":"/ [`&SliceInfo`]; see its docs for more information.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17748,"byte_end":17803,"line_start":461,"line_end":461,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17804,"byte_end":17807,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ [`&SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17808,"byte_end":17849,"line_start":463,"line_end":463,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17850,"byte_end":17853,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ If a range is used, the axis is preserved. If an index is used, that index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17854,"byte_end":17932,"line_start":465,"line_end":465,"column_start":1,"column_end":79}},{"value":"/ is selected and the axis is removed; this selects a subview. See","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":17933,"byte_end":18001,"line_start":466,"line_end":466,"column_start":1,"column_end":69}},{"value":"/ [*Subviews*](#subviews) for more information about subviews. Note that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18002,"byte_end":18076,"line_start":467,"line_end":467,"column_start":1,"column_end":75}},{"value":"/ [`.slice_collapse()`] behaves like [`.collapse_axis()`] by preserving","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18077,"byte_end":18150,"line_start":468,"line_end":468,"column_start":1,"column_end":74}},{"value":"/ the number of dimensions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18151,"byte_end":18180,"line_start":469,"line_end":469,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18181,"byte_end":18184,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: #method.slice","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18185,"byte_end":18216,"line_start":471,"line_end":471,"column_start":1,"column_end":32}},{"value":"/ [`.slice_mut()`]: #method.slice_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18217,"byte_end":18256,"line_start":472,"line_end":472,"column_start":1,"column_end":40}},{"value":"/ [`.slice_move()`]: #method.slice_move","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18257,"byte_end":18298,"line_start":473,"line_end":473,"column_start":1,"column_end":42}},{"value":"/ [`.slice_collapse()`]: #method.slice_collapse","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18299,"byte_end":18348,"line_start":474,"line_end":474,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18349,"byte_end":18352,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18353,"byte_end":18360,"line_start":476,"line_end":476,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18361,"byte_end":18386,"line_start":477,"line_end":477,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18387,"byte_end":18390,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, s};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18391,"byte_end":18424,"line_start":479,"line_end":479,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18425,"byte_end":18428,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18429,"byte_end":18444,"line_start":481,"line_end":481,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18445,"byte_end":18448,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18449,"byte_end":18534,"line_start":483,"line_end":483,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18535,"byte_end":18538,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],     // -- 2 rows  \\_","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18539,"byte_end":18593,"line_start":485,"line_end":485,"column_start":1,"column_end":55}},{"value":"/                 [ 4,  5,  6]],    // --         /","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18594,"byte_end":18647,"line_start":486,"line_end":486,"column_start":1,"column_end":54}},{"value":"/                [[ 7,  8,  9],     //            \\_ 2 submatrices","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18648,"byte_end":18716,"line_start":487,"line_end":487,"column_start":1,"column_end":69}},{"value":"/                 [10, 11, 12]]]);  //            /","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18717,"byte_end":18770,"line_start":488,"line_end":488,"column_start":1,"column_end":54}},{"value":"/ //  3 columns ..../.../.../","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18771,"byte_end":18802,"line_start":489,"line_end":489,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18803,"byte_end":18806,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18807,"byte_end":18845,"line_start":491,"line_end":491,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18846,"byte_end":18849,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18850,"byte_end":18884,"line_start":493,"line_end":493,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18885,"byte_end":18891,"line_start":494,"line_end":494,"column_start":1,"column_end":7}},{"value":"/ // - Both of the submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18892,"byte_end":18956,"line_start":495,"line_end":495,"column_start":1,"column_end":65}},{"value":"/ // - Only the first row in each submatrix: `0..1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":18957,"byte_end":19010,"line_start":496,"line_end":496,"column_start":1,"column_end":54}},{"value":"/ // - Every element in each row: `..`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19011,"byte_end":19051,"line_start":497,"line_end":497,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19052,"byte_end":19055,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ let b = a.slice(s![.., 0..1, ..]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19056,"byte_end":19094,"line_start":499,"line_end":499,"column_start":1,"column_end":39}},{"value":"/ let c = arr3(&[[[ 1,  2,  3]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19095,"byte_end":19129,"line_start":500,"line_end":500,"column_start":1,"column_end":35}},{"value":"/                [[ 7,  8,  9]]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19130,"byte_end":19166,"line_start":501,"line_end":501,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, c);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19167,"byte_end":19188,"line_start":502,"line_end":502,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(b.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19189,"byte_end":19227,"line_start":503,"line_end":503,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19228,"byte_end":19231,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19232,"byte_end":19266,"line_start":505,"line_end":505,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19267,"byte_end":19273,"line_start":506,"line_end":506,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19274,"byte_end":19331,"line_start":507,"line_end":507,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix: `-1..`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19332,"byte_end":19379,"line_start":508,"line_end":508,"column_start":1,"column_end":48}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19380,"byte_end":19427,"line_start":509,"line_end":509,"column_start":1,"column_end":48}},{"value":"/ let d = a.slice(s![.., -1.., ..;-1]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19428,"byte_end":19469,"line_start":510,"line_end":510,"column_start":1,"column_end":42}},{"value":"/ let e = arr3(&[[[ 6,  5,  4]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19470,"byte_end":19504,"line_start":511,"line_end":511,"column_start":1,"column_end":35}},{"value":"/                [[12, 11, 10]]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19505,"byte_end":19541,"line_start":512,"line_end":512,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(d, e);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19542,"byte_end":19563,"line_start":513,"line_end":513,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(d.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19564,"byte_end":19602,"line_start":514,"line_end":514,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19603,"byte_end":19606,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice while selecting a subview with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19607,"byte_end":19667,"line_start":516,"line_end":516,"column_start":1,"column_end":59}},{"value":"/ //","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19668,"byte_end":19674,"line_start":517,"line_end":517,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19675,"byte_end":19732,"line_start":518,"line_end":518,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix, removing that axis: `-1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19733,"byte_end":19798,"line_start":519,"line_end":519,"column_start":1,"column_end":66}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19799,"byte_end":19846,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/ let f = a.slice(s![.., -1, ..;-1]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19847,"byte_end":19886,"line_start":521,"line_end":521,"column_start":1,"column_end":40}},{"value":"/ let g = arr2(&[[ 6,  5,  4],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19887,"byte_end":19919,"line_start":522,"line_end":522,"column_start":1,"column_end":33}},{"value":"/                [12, 11, 10]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19920,"byte_end":19954,"line_start":523,"line_end":523,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(f, g);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19955,"byte_end":19976,"line_start":524,"line_end":524,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(f.shape(), &[2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":19977,"byte_end":20012,"line_start":525,"line_end":525,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20013,"byte_end":20018,"line_start":526,"line_end":526,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20019,"byte_end":20026,"line_start":527,"line_end":527,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20027,"byte_end":20030,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ ## Subviews","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20031,"byte_end":20046,"line_start":529,"line_end":529,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20047,"byte_end":20050,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Subview methods allow you to restrict the array view while removing one","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20051,"byte_end":20126,"line_start":531,"line_end":531,"column_start":1,"column_end":76}},{"value":"/ axis from the array. Methods for selecting individual subviews include","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20127,"byte_end":20201,"line_start":532,"line_end":532,"column_start":1,"column_end":75}},{"value":"/ [`.index_axis()`], [`.index_axis_mut()`], [`.index_axis_move()`], and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20202,"byte_end":20275,"line_start":533,"line_end":533,"column_start":1,"column_end":74}},{"value":"/ [`.index_axis_inplace()`]. You can also select a subview by using a single","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20276,"byte_end":20354,"line_start":534,"line_end":534,"column_start":1,"column_end":79}},{"value":"/ index instead of a range when slicing. Some other methods, such as","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20355,"byte_end":20425,"line_start":535,"line_end":535,"column_start":1,"column_end":71}},{"value":"/ [`.fold_axis()`], [`.axis_iter()`], [`.axis_iter_mut()`],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20426,"byte_end":20487,"line_start":536,"line_end":536,"column_start":1,"column_end":62}},{"value":"/ [`.outer_iter()`], and [`.outer_iter_mut()`] operate on all the subviews","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20488,"byte_end":20564,"line_start":537,"line_end":537,"column_start":1,"column_end":77}},{"value":"/ along an axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20565,"byte_end":20583,"line_start":538,"line_end":538,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20584,"byte_end":20587,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ A related method is [`.collapse_axis()`], which modifies the view in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20588,"byte_end":20664,"line_start":540,"line_end":540,"column_start":1,"column_end":77}},{"value":"/ same way as [`.index_axis()`] except for removing the collapsed axis, since","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20665,"byte_end":20744,"line_start":541,"line_end":541,"column_start":1,"column_end":80}},{"value":"/ it operates *in place*. The length of the axis becomes 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20745,"byte_end":20806,"line_start":542,"line_end":542,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20807,"byte_end":20810,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Methods for selecting an individual subview take two arguments: `axis` and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20811,"byte_end":20889,"line_start":544,"line_end":544,"column_start":1,"column_end":79}},{"value":"/ `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20890,"byte_end":20902,"line_start":545,"line_end":545,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20903,"byte_end":20906,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ [`.axis_iter()`]: #method.axis_iter","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20907,"byte_end":20946,"line_start":547,"line_end":547,"column_start":1,"column_end":40}},{"value":"/ [`.axis_iter_mut()`]: #method.axis_iter_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20947,"byte_end":20994,"line_start":548,"line_end":548,"column_start":1,"column_end":48}},{"value":"/ [`.fold_axis()`]: #method.fold_axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":20995,"byte_end":21034,"line_start":549,"line_end":549,"column_start":1,"column_end":40}},{"value":"/ [`.index_axis()`]: #method.index_axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21035,"byte_end":21076,"line_start":550,"line_end":550,"column_start":1,"column_end":42}},{"value":"/ [`.index_axis_inplace()`]: #method.index_axis_inplace","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21077,"byte_end":21134,"line_start":551,"line_end":551,"column_start":1,"column_end":58}},{"value":"/ [`.index_axis_mut()`]: #method.index_axis_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21135,"byte_end":21184,"line_start":552,"line_end":552,"column_start":1,"column_end":50}},{"value":"/ [`.index_axis_move()`]: #method.index_axis_move","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21185,"byte_end":21236,"line_start":553,"line_end":553,"column_start":1,"column_end":52}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21237,"byte_end":21284,"line_start":554,"line_end":554,"column_start":1,"column_end":48}},{"value":"/ [`.outer_iter()`]: #method.outer_iter","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21285,"byte_end":21326,"line_start":555,"line_end":555,"column_start":1,"column_end":42}},{"value":"/ [`.outer_iter_mut()`]: #method.outer_iter_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21327,"byte_end":21376,"line_start":556,"line_end":556,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21377,"byte_end":21380,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21381,"byte_end":21388,"line_start":558,"line_end":558,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21389,"byte_end":21414,"line_start":559,"line_end":559,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21415,"byte_end":21418,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr3, aview1, aview2, s, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21419,"byte_end":21468,"line_start":561,"line_end":561,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21469,"byte_end":21472,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21473,"byte_end":21490,"line_start":563,"line_end":563,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21491,"byte_end":21494,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21495,"byte_end":21580,"line_start":565,"line_end":565,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21581,"byte_end":21584,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],    // \\ axis 0, submatrix 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21585,"byte_end":21646,"line_start":567,"line_end":567,"column_start":1,"column_end":62}},{"value":"/                 [ 4,  5,  6]],   // /","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21647,"byte_end":21688,"line_start":568,"line_end":568,"column_start":1,"column_end":42}},{"value":"/                [[ 7,  8,  9],    // \\ axis 0, submatrix 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21689,"byte_end":21750,"line_start":569,"line_end":569,"column_start":1,"column_end":62}},{"value":"/                 [10, 11, 12]]]); // /","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21751,"byte_end":21792,"line_start":570,"line_end":570,"column_start":1,"column_end":42}},{"value":"/         //        \\","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21793,"byte_end":21816,"line_start":571,"line_end":571,"column_start":1,"column_end":24}},{"value":"/         //         axis 2, column 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21817,"byte_end":21856,"line_start":572,"line_end":572,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21857,"byte_end":21860,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21861,"byte_end":21899,"line_start":574,"line_end":574,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21900,"byte_end":21903,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ // Let’s take a subview along the greatest dimension (axis 0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21904,"byte_end":21972,"line_start":576,"line_end":576,"column_start":1,"column_end":67}},{"value":"/ // taking submatrix 0, then submatrix 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":21973,"byte_end":22016,"line_start":577,"line_end":577,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22017,"byte_end":22020,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ let sub_0 = a.index_axis(Axis(0), 0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22021,"byte_end":22062,"line_start":579,"line_end":579,"column_start":1,"column_end":42}},{"value":"/ let sub_1 = a.index_axis(Axis(0), 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22063,"byte_end":22104,"line_start":580,"line_end":580,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22105,"byte_end":22108,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_0, aview2(&[[ 1,  2,  3],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22109,"byte_end":22153,"line_start":582,"line_end":582,"column_start":1,"column_end":45}},{"value":"/                            [ 4,  5,  6]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22154,"byte_end":22201,"line_start":583,"line_end":583,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_1, aview2(&[[ 7,  8,  9],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22202,"byte_end":22246,"line_start":584,"line_end":584,"column_start":1,"column_end":45}},{"value":"/                            [10, 11, 12]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22247,"byte_end":22294,"line_start":585,"line_end":585,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_0.shape(), &[2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22295,"byte_end":22334,"line_start":586,"line_end":586,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22335,"byte_end":22338,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ // This is the subview picking only axis 2, column 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22339,"byte_end":22395,"line_start":588,"line_end":588,"column_start":1,"column_end":57}},{"value":"/ let sub_col = a.index_axis(Axis(2), 0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22396,"byte_end":22439,"line_start":589,"line_end":589,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22440,"byte_end":22443,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_col, aview2(&[[ 1,  4],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22444,"byte_end":22486,"line_start":591,"line_end":591,"column_start":1,"column_end":43}},{"value":"/                              [ 7, 10]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22487,"byte_end":22532,"line_start":592,"line_end":592,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22533,"byte_end":22536,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ // You can take multiple subviews at once (and slice at the same time)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22537,"byte_end":22611,"line_start":594,"line_end":594,"column_start":1,"column_end":75}},{"value":"/ let double_sub = a.slice(s![1, .., 0]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22612,"byte_end":22655,"line_start":595,"line_end":595,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(double_sub, aview1(&[7, 10]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22656,"byte_end":22701,"line_start":596,"line_end":596,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22702,"byte_end":22709,"line_start":597,"line_end":597,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22710,"byte_end":22717,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22718,"byte_end":22721,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ## Arithmetic Operations","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22722,"byte_end":22750,"line_start":600,"line_end":600,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22751,"byte_end":22754,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ Arrays support all arithmetic operations the same way: they apply elementwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22755,"byte_end":22837,"line_start":602,"line_end":602,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22838,"byte_end":22841,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ Since the trait implementations are hard to overview, here is a summary.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22842,"byte_end":22918,"line_start":604,"line_end":604,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22919,"byte_end":22922,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Two Arrays","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22923,"byte_end":22963,"line_start":606,"line_end":606,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22964,"byte_end":22967,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":22968,"byte_end":23032,"line_start":608,"line_end":608,"column_start":1,"column_end":65}},{"value":"/ with owned storage (either `Array` or `ArcArray`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23033,"byte_end":23087,"line_start":609,"line_end":609,"column_start":1,"column_end":55}},{"value":"/ Let `C` be an array with mutable data (either `Array`, `ArcArray`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23088,"byte_end":23157,"line_start":610,"line_end":610,"column_start":1,"column_end":70}},{"value":"/ or `ArrayViewMut`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23158,"byte_end":23181,"line_start":611,"line_end":611,"column_start":1,"column_end":24}},{"value":"/ The following combinations of operands","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23182,"byte_end":23224,"line_start":612,"line_end":612,"column_start":1,"column_end":43}},{"value":"/ are supported for an arbitrary binary operator denoted by `@` (it can be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23225,"byte_end":23301,"line_start":613,"line_end":613,"column_start":1,"column_end":77}},{"value":"/ `+`, `-`, `*`, `/` and so on).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23302,"byte_end":23336,"line_start":614,"line_end":614,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23337,"byte_end":23340,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ - `&A @ &A` which produces a new `Array`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23341,"byte_end":23385,"line_start":616,"line_end":616,"column_start":1,"column_end":45}},{"value":"/ - `B @ A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23386,"byte_end":23462,"line_start":617,"line_end":617,"column_start":1,"column_end":77}},{"value":"/ - `B @ &A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23463,"byte_end":23540,"line_start":618,"line_end":618,"column_start":1,"column_end":78}},{"value":"/ - `C @= &A` which performs an arithmetic operation in place","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23541,"byte_end":23604,"line_start":619,"line_end":619,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23605,"byte_end":23608,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ Note that the element type needs to implement the operator trait and the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23609,"byte_end":23685,"line_start":621,"line_end":621,"column_start":1,"column_end":77}},{"value":"/ `Clone` trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23686,"byte_end":23704,"line_start":622,"line_end":622,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23705,"byte_end":23708,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23709,"byte_end":23716,"line_start":624,"line_end":624,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{array, ArrayView1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23717,"byte_end":23754,"line_start":625,"line_end":625,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23755,"byte_end":23758,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ let owned1 = array![1, 2];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23759,"byte_end":23789,"line_start":627,"line_end":627,"column_start":1,"column_end":31}},{"value":"/ let owned2 = array![3, 4];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23790,"byte_end":23820,"line_start":628,"line_end":628,"column_start":1,"column_end":31}},{"value":"/ let view1 = ArrayView1::from(&[5, 6]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23821,"byte_end":23863,"line_start":629,"line_end":629,"column_start":1,"column_end":43}},{"value":"/ let view2 = ArrayView1::from(&[7, 8]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23864,"byte_end":23906,"line_start":630,"line_end":630,"column_start":1,"column_end":43}},{"value":"/ let mut mutable = array![9, 10];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23907,"byte_end":23943,"line_start":631,"line_end":631,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23944,"byte_end":23947,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ let sum1 = &view1 + &view2;   // Allocates a new array. Note the explicit `&`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":23948,"byte_end":24030,"line_start":633,"line_end":633,"column_start":1,"column_end":83}},{"value":"/ // let sum2 = view1 + &view2; // This doesn't work because `view1` is not an owned array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24031,"byte_end":24124,"line_start":634,"line_end":634,"column_start":1,"column_end":94}},{"value":"/ let sum3 = owned1 + view1;    // Consumes `owned1`, updates it, and returns it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24125,"byte_end":24208,"line_start":635,"line_end":635,"column_start":1,"column_end":84}},{"value":"/ let sum4 = owned2 + &view2;   // Consumes `owned2`, updates it, and returns it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24209,"byte_end":24292,"line_start":636,"line_end":636,"column_start":1,"column_end":84}},{"value":"/ mutable += &view2;            // Updates `mutable` in-place.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24293,"byte_end":24357,"line_start":637,"line_end":637,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24358,"byte_end":24365,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24366,"byte_end":24369,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Array and Scalar","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24370,"byte_end":24416,"line_start":640,"line_end":640,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24417,"byte_end":24420,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ The trait [`ScalarOperand`](trait.ScalarOperand.html) marks types that can be used in arithmetic","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24421,"byte_end":24521,"line_start":642,"line_end":642,"column_start":1,"column_end":101}},{"value":"/ with arrays directly. For a scalar `K` the following combinations of operands","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24522,"byte_end":24603,"line_start":643,"line_end":643,"column_start":1,"column_end":82}},{"value":"/ are supported (scalar can be on either the left or right side, but","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24604,"byte_end":24674,"line_start":644,"line_end":644,"column_start":1,"column_end":71}},{"value":"/ `ScalarOperand` docs has the detailed condtions).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24675,"byte_end":24728,"line_start":645,"line_end":645,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24729,"byte_end":24732,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ - `&A @ K` or `K @ &A` which produces a new `Array`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24733,"byte_end":24788,"line_start":647,"line_end":647,"column_start":1,"column_end":56}},{"value":"/ - `B @ K` or `K @ B` which consumes `B`, updates it with the result and returns it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24789,"byte_end":24875,"line_start":648,"line_end":648,"column_start":1,"column_end":87}},{"value":"/ - `C @= K` which performs an arithmetic operation in place","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24876,"byte_end":24938,"line_start":649,"line_end":649,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24939,"byte_end":24942,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ ### Unary Operators","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24943,"byte_end":24966,"line_start":651,"line_end":651,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24967,"byte_end":24970,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array with owned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":24971,"byte_end":25046,"line_start":653,"line_end":653,"column_start":1,"column_end":76}},{"value":"/ storage (either `Array` or `ArcArray`). The following operands are supported","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25047,"byte_end":25127,"line_start":654,"line_end":654,"column_start":1,"column_end":81}},{"value":"/ for an arbitrary unary operator denoted by `@` (it can be `-` or `!`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25128,"byte_end":25202,"line_start":655,"line_end":655,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25203,"byte_end":25206,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ - `@&A` which produces a new `Array`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25207,"byte_end":25247,"line_start":657,"line_end":657,"column_start":1,"column_end":41}},{"value":"/ - `@B` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25248,"byte_end":25321,"line_start":658,"line_end":658,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25322,"byte_end":25325,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ ## Broadcasting","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25326,"byte_end":25345,"line_start":660,"line_end":660,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25346,"byte_end":25349,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ Arrays support limited *broadcasting*, where arithmetic operations with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25350,"byte_end":25425,"line_start":662,"line_end":662,"column_start":1,"column_end":76}},{"value":"/ array operands of different sizes can be carried out by repeating the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25426,"byte_end":25499,"line_start":663,"line_end":663,"column_start":1,"column_end":74}},{"value":"/ elements of the smaller dimension array. See","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25500,"byte_end":25548,"line_start":664,"line_end":664,"column_start":1,"column_end":49}},{"value":"/ [`.broadcast()`](#method.broadcast) for a more detailed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25549,"byte_end":25608,"line_start":665,"line_end":665,"column_start":1,"column_end":60}},{"value":"/ description.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25609,"byte_end":25625,"line_start":666,"line_end":666,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25626,"byte_end":25629,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25630,"byte_end":25637,"line_start":668,"line_end":668,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25638,"byte_end":25660,"line_start":669,"line_end":669,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25661,"byte_end":25664,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25665,"byte_end":25693,"line_start":671,"line_end":671,"column_start":1,"column_end":29}},{"value":"/                [1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25694,"byte_end":25722,"line_start":672,"line_end":672,"column_start":1,"column_end":29}},{"value":"/                [0., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25723,"byte_end":25751,"line_start":673,"line_end":673,"column_start":1,"column_end":29}},{"value":"/                [0., 4.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25752,"byte_end":25782,"line_start":674,"line_end":674,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25783,"byte_end":25786,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ let b = arr2(&[[0., 1.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25787,"byte_end":25817,"line_start":676,"line_end":676,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25818,"byte_end":25821,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ let c = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25822,"byte_end":25850,"line_start":678,"line_end":678,"column_start":1,"column_end":29}},{"value":"/                [1., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25851,"byte_end":25879,"line_start":679,"line_end":679,"column_start":1,"column_end":29}},{"value":"/                [0., 4.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25880,"byte_end":25908,"line_start":680,"line_end":680,"column_start":1,"column_end":29}},{"value":"/                [0., 5.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25909,"byte_end":25939,"line_start":681,"line_end":681,"column_start":1,"column_end":31}},{"value":"/ // We can add because the shapes are compatible even if not equal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":25940,"byte_end":26010,"line_start":682,"line_end":682,"column_start":1,"column_end":71}},{"value":"/ // The `b` array is shape 1 × 2 but acts like a 4 × 2 array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26011,"byte_end":26077,"line_start":683,"line_end":683,"column_start":1,"column_end":65}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26078,"byte_end":26090,"line_start":684,"line_end":684,"column_start":1,"column_end":13}},{"value":"/     c == a + b","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26091,"byte_end":26109,"line_start":685,"line_end":685,"column_start":1,"column_end":19}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26110,"byte_end":26116,"line_start":686,"line_end":686,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26117,"byte_end":26124,"line_start":687,"line_end":687,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26125,"byte_end":26128,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ ## Conversions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26129,"byte_end":26147,"line_start":689,"line_end":689,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26148,"byte_end":26151,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Array Types","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26152,"byte_end":26191,"line_start":691,"line_end":691,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26192,"byte_end":26195,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ This table is a summary of the conversions between arrays of different","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26196,"byte_end":26270,"line_start":693,"line_end":693,"column_start":1,"column_end":75}},{"value":"/ ownership, dimensionality, and element type. All of the conversions in this","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26271,"byte_end":26350,"line_start":694,"line_end":694,"column_start":1,"column_end":80}},{"value":"/ table preserve the shape of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26351,"byte_end":26393,"line_start":695,"line_end":695,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26394,"byte_end":26397,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26398,"byte_end":26409,"line_start":697,"line_end":697,"column_start":1,"column_end":12}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26410,"byte_end":26418,"line_start":698,"line_end":698,"column_start":1,"column_end":9}},{"value":"/ <th rowspan=\"2\">Output</th>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26419,"byte_end":26450,"line_start":699,"line_end":699,"column_start":1,"column_end":32}},{"value":"/ <th colspan=\"5\">Input</th>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26451,"byte_end":26481,"line_start":700,"line_end":700,"column_start":1,"column_end":31}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26482,"byte_end":26491,"line_start":701,"line_end":701,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26492,"byte_end":26495,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26496,"byte_end":26504,"line_start":703,"line_end":703,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26505,"byte_end":26513,"line_start":704,"line_end":704,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26514,"byte_end":26517,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26518,"byte_end":26535,"line_start":706,"line_end":706,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26536,"byte_end":26539,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26540,"byte_end":26549,"line_start":708,"line_end":708,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26550,"byte_end":26558,"line_start":709,"line_end":709,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26559,"byte_end":26562,"line_start":710,"line_end":710,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26563,"byte_end":26583,"line_start":711,"line_end":711,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26584,"byte_end":26587,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26588,"byte_end":26597,"line_start":713,"line_end":713,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26598,"byte_end":26606,"line_start":714,"line_end":714,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26607,"byte_end":26610,"line_start":715,"line_end":715,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26611,"byte_end":26635,"line_start":716,"line_end":716,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26636,"byte_end":26639,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26640,"byte_end":26649,"line_start":718,"line_end":718,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26650,"byte_end":26658,"line_start":719,"line_end":719,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26659,"byte_end":26662,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'a, A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26663,"byte_end":26688,"line_start":721,"line_end":721,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26689,"byte_end":26692,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26693,"byte_end":26702,"line_start":723,"line_end":723,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26703,"byte_end":26711,"line_start":724,"line_end":724,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26712,"byte_end":26715,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'a, A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26716,"byte_end":26744,"line_start":726,"line_end":726,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26745,"byte_end":26748,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26749,"byte_end":26758,"line_start":728,"line_end":728,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26759,"byte_end":26768,"line_start":729,"line_end":729,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26769,"byte_end":26772,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<A, D>`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26773,"byte_end":26812,"line_start":731,"line_end":731,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26813,"byte_end":26816,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26817,"byte_end":26825,"line_start":733,"line_end":733,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26826,"byte_end":26834,"line_start":734,"line_end":734,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26835,"byte_end":26838,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26839,"byte_end":26856,"line_start":736,"line_end":736,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26857,"byte_end":26860,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26861,"byte_end":26870,"line_start":738,"line_end":738,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26871,"byte_end":26879,"line_start":739,"line_end":739,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26880,"byte_end":26883,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26884,"byte_end":26893,"line_start":741,"line_end":741,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26894,"byte_end":26897,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26898,"byte_end":26907,"line_start":743,"line_end":743,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26908,"byte_end":26916,"line_start":744,"line_end":744,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26917,"byte_end":26920,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26921,"byte_end":26958,"line_start":746,"line_end":746,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26959,"byte_end":26962,"line_start":747,"line_end":747,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26963,"byte_end":26972,"line_start":748,"line_end":748,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26973,"byte_end":26981,"line_start":749,"line_end":749,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26982,"byte_end":26985,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":26986,"byte_end":27023,"line_start":751,"line_end":751,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27024,"byte_end":27027,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27028,"byte_end":27037,"line_start":753,"line_end":753,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27038,"byte_end":27046,"line_start":754,"line_end":754,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27047,"byte_end":27050,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27051,"byte_end":27084,"line_start":756,"line_end":756,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27085,"byte_end":27088,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27089,"byte_end":27098,"line_start":758,"line_end":758,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27099,"byte_end":27107,"line_start":759,"line_end":759,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27108,"byte_end":27111,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27112,"byte_end":27145,"line_start":761,"line_end":761,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27146,"byte_end":27149,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27150,"byte_end":27159,"line_start":763,"line_end":763,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27160,"byte_end":27169,"line_start":764,"line_end":764,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27170,"byte_end":27173,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArcArray<A, D>`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27174,"byte_end":27216,"line_start":766,"line_end":766,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27217,"byte_end":27220,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27221,"byte_end":27229,"line_start":768,"line_end":768,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27230,"byte_end":27238,"line_start":769,"line_end":769,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27239,"byte_end":27242,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27243,"byte_end":27263,"line_start":771,"line_end":771,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27264,"byte_end":27267,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27268,"byte_end":27277,"line_start":773,"line_end":773,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27278,"byte_end":27286,"line_start":774,"line_end":774,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27287,"byte_end":27290,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ [`a.into_shared()`][.into_shared()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27291,"byte_end":27330,"line_start":776,"line_end":776,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27331,"byte_end":27334,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27335,"byte_end":27344,"line_start":778,"line_end":778,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27345,"byte_end":27353,"line_start":779,"line_end":779,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27354,"byte_end":27357,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27358,"byte_end":27367,"line_start":781,"line_end":781,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27368,"byte_end":27371,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27372,"byte_end":27381,"line_start":783,"line_end":783,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27382,"byte_end":27390,"line_start":784,"line_end":784,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27391,"byte_end":27394,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27395,"byte_end":27447,"line_start":786,"line_end":786,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27448,"byte_end":27451,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27452,"byte_end":27461,"line_start":788,"line_end":788,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27462,"byte_end":27470,"line_start":789,"line_end":789,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27471,"byte_end":27474,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27475,"byte_end":27525,"line_start":791,"line_end":791,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27526,"byte_end":27529,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27530,"byte_end":27539,"line_start":793,"line_end":793,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27540,"byte_end":27548,"line_start":794,"line_end":794,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27549,"byte_end":27552,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27553,"byte_end":27603,"line_start":796,"line_end":796,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27604,"byte_end":27607,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27608,"byte_end":27617,"line_start":798,"line_end":798,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27618,"byte_end":27627,"line_start":799,"line_end":799,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27628,"byte_end":27631,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `CowArray<'a, A, D>`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27632,"byte_end":27678,"line_start":801,"line_end":801,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27679,"byte_end":27682,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27683,"byte_end":27691,"line_start":803,"line_end":803,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27692,"byte_end":27700,"line_start":804,"line_end":804,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27701,"byte_end":27704,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27705,"byte_end":27729,"line_start":806,"line_end":806,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27730,"byte_end":27733,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27734,"byte_end":27743,"line_start":808,"line_end":808,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27744,"byte_end":27752,"line_start":809,"line_end":809,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27753,"byte_end":27756,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27757,"byte_end":27844,"line_start":811,"line_end":811,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27845,"byte_end":27848,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27849,"byte_end":27858,"line_start":813,"line_end":813,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27859,"byte_end":27867,"line_start":814,"line_end":814,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27868,"byte_end":27871,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.into_owned())`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27872,"byte_end":27972,"line_start":816,"line_end":816,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27973,"byte_end":27976,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27977,"byte_end":27986,"line_start":818,"line_end":818,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27987,"byte_end":27995,"line_start":819,"line_end":819,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":27996,"byte_end":27999,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28000,"byte_end":28009,"line_start":821,"line_end":821,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28010,"byte_end":28013,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28014,"byte_end":28023,"line_start":823,"line_end":823,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28024,"byte_end":28032,"line_start":824,"line_end":824,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28033,"byte_end":28036,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28037,"byte_end":28133,"line_start":826,"line_end":826,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28134,"byte_end":28137,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28138,"byte_end":28147,"line_start":828,"line_end":828,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28148,"byte_end":28156,"line_start":829,"line_end":829,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28157,"byte_end":28160,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.view())`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28161,"byte_end":28264,"line_start":831,"line_end":831,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28265,"byte_end":28268,"line_start":832,"line_end":832,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28269,"byte_end":28278,"line_start":833,"line_end":833,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28279,"byte_end":28288,"line_start":834,"line_end":834,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28289,"byte_end":28292,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayView<'b, A, D>`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28293,"byte_end":28340,"line_start":836,"line_end":836,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28341,"byte_end":28344,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28345,"byte_end":28353,"line_start":838,"line_end":838,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28354,"byte_end":28362,"line_start":839,"line_end":839,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28363,"byte_end":28366,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'b, A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28367,"byte_end":28392,"line_start":841,"line_end":841,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28393,"byte_end":28396,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28397,"byte_end":28406,"line_start":843,"line_end":843,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28407,"byte_end":28415,"line_start":844,"line_end":844,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28416,"byte_end":28419,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28420,"byte_end":28445,"line_start":846,"line_end":846,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28446,"byte_end":28449,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28450,"byte_end":28459,"line_start":848,"line_end":848,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28460,"byte_end":28468,"line_start":849,"line_end":849,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28469,"byte_end":28472,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28473,"byte_end":28498,"line_start":851,"line_end":851,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28499,"byte_end":28502,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28503,"byte_end":28512,"line_start":853,"line_end":853,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28513,"byte_end":28521,"line_start":854,"line_end":854,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28522,"byte_end":28525,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28526,"byte_end":28551,"line_start":856,"line_end":856,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28552,"byte_end":28555,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28556,"byte_end":28565,"line_start":858,"line_end":858,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28566,"byte_end":28574,"line_start":859,"line_end":859,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28575,"byte_end":28578,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()] or [`a.reborrow()`][ArrayView::reborrow()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28579,"byte_end":28647,"line_start":861,"line_end":861,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28648,"byte_end":28651,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28652,"byte_end":28661,"line_start":863,"line_end":863,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28662,"byte_end":28670,"line_start":864,"line_end":864,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28671,"byte_end":28674,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28675,"byte_end":28700,"line_start":866,"line_end":866,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28701,"byte_end":28704,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28705,"byte_end":28714,"line_start":868,"line_end":868,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28715,"byte_end":28724,"line_start":869,"line_end":869,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28725,"byte_end":28728,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayViewMut<'b, A, D>`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28729,"byte_end":28779,"line_start":871,"line_end":871,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28780,"byte_end":28783,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28784,"byte_end":28792,"line_start":873,"line_end":873,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28793,"byte_end":28801,"line_start":874,"line_end":874,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28802,"byte_end":28805,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'b, A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28806,"byte_end":28834,"line_start":876,"line_end":876,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28835,"byte_end":28838,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28839,"byte_end":28848,"line_start":878,"line_end":878,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28849,"byte_end":28857,"line_start":879,"line_end":879,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28858,"byte_end":28861,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28862,"byte_end":28895,"line_start":881,"line_end":881,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28896,"byte_end":28899,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28900,"byte_end":28909,"line_start":883,"line_end":883,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28910,"byte_end":28918,"line_start":884,"line_end":884,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28919,"byte_end":28922,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28923,"byte_end":28956,"line_start":886,"line_end":886,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28957,"byte_end":28960,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28961,"byte_end":28970,"line_start":888,"line_end":888,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28971,"byte_end":28979,"line_start":889,"line_end":889,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28980,"byte_end":28983,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":28984,"byte_end":29017,"line_start":891,"line_end":891,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29018,"byte_end":29021,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29022,"byte_end":29031,"line_start":893,"line_end":893,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29032,"byte_end":29040,"line_start":894,"line_end":894,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29041,"byte_end":29044,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ illegal","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29045,"byte_end":29056,"line_start":896,"line_end":896,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29057,"byte_end":29060,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29061,"byte_end":29070,"line_start":898,"line_end":898,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29071,"byte_end":29079,"line_start":899,"line_end":899,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29080,"byte_end":29083,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()] or [`a.reborrow()`][ArrayViewMut::reborrow()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29084,"byte_end":29163,"line_start":901,"line_end":901,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29164,"byte_end":29167,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29168,"byte_end":29177,"line_start":903,"line_end":903,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29178,"byte_end":29187,"line_start":904,"line_end":904,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29188,"byte_end":29191,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `D2`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29192,"byte_end":29242,"line_start":906,"line_end":906,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29243,"byte_end":29246,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29247,"byte_end":29255,"line_start":908,"line_end":908,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29256,"byte_end":29264,"line_start":909,"line_end":909,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29265,"byte_end":29268,"line_start":910,"line_end":910,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `D2` (e.g. converting from dynamic dim to const dim)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29269,"byte_end":29345,"line_start":911,"line_end":911,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29346,"byte_end":29349,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29350,"byte_end":29359,"line_start":913,"line_end":913,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29360,"byte_end":29380,"line_start":914,"line_end":914,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29381,"byte_end":29384,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dimensionality::<D2>()`][.into_dimensionality()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29385,"byte_end":29446,"line_start":916,"line_end":916,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29447,"byte_end":29450,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29451,"byte_end":29460,"line_start":918,"line_end":918,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29461,"byte_end":29470,"line_start":919,"line_end":919,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29471,"byte_end":29474,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `IxDyn`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29475,"byte_end":29528,"line_start":921,"line_end":921,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29529,"byte_end":29532,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29533,"byte_end":29541,"line_start":923,"line_end":923,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29542,"byte_end":29550,"line_start":924,"line_end":924,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29551,"byte_end":29554,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `IxDyn`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29555,"byte_end":29586,"line_start":926,"line_end":926,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29587,"byte_end":29590,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29591,"byte_end":29600,"line_start":928,"line_end":928,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29601,"byte_end":29621,"line_start":929,"line_end":929,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29622,"byte_end":29625,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dyn()`][.into_dyn()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29626,"byte_end":29659,"line_start":931,"line_end":931,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29660,"byte_end":29663,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29664,"byte_end":29673,"line_start":933,"line_end":933,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29674,"byte_end":29683,"line_start":934,"line_end":934,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29684,"byte_end":29687,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<B, D>`-->","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29688,"byte_end":29727,"line_start":936,"line_end":936,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29728,"byte_end":29731,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29732,"byte_end":29740,"line_start":938,"line_end":938,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29741,"byte_end":29749,"line_start":939,"line_end":939,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29750,"byte_end":29753,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ `Array<B, D>` (new element type)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29754,"byte_end":29790,"line_start":941,"line_end":941,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29791,"byte_end":29794,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29795,"byte_end":29804,"line_start":943,"line_end":943,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29805,"byte_end":29825,"line_start":944,"line_end":944,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29826,"byte_end":29829,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ [`a.map(|x| x.do_your_conversion())`][.map()]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29830,"byte_end":29879,"line_start":946,"line_end":946,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29880,"byte_end":29883,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29884,"byte_end":29893,"line_start":948,"line_end":948,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29894,"byte_end":29903,"line_start":949,"line_end":949,"column_start":1,"column_end":10}},{"value":"/ </table>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29904,"byte_end":29916,"line_start":950,"line_end":950,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29917,"byte_end":29920,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Arrays and `Vec`s/Slices/Scalars","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29921,"byte_end":29981,"line_start":952,"line_end":952,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29982,"byte_end":29985,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ This is a table of the safe conversions between arrays and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":29986,"byte_end":30048,"line_start":954,"line_end":954,"column_start":1,"column_end":63}},{"value":"/ `Vec`s/slices/scalars. Note that some of the return values are actually","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30049,"byte_end":30124,"line_start":955,"line_end":955,"column_start":1,"column_end":76}},{"value":"/ `Result`/`Option` wrappers around the indicated output types.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30125,"byte_end":30190,"line_start":956,"line_end":956,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30191,"byte_end":30194,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ Input | Output | Methods","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30195,"byte_end":30223,"line_start":958,"line_end":958,"column_start":1,"column_end":29}},{"value":"/ ------|--------|--------","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30224,"byte_end":30252,"line_start":959,"line_end":959,"column_start":1,"column_end":29}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, Ix1>` | [`::from_vec()`](#method.from_vec)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30253,"byte_end":30335,"line_start":960,"line_end":960,"column_start":1,"column_end":83}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, D>` | [`::from_shape_vec()`](#method.from_shape_vec)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30336,"byte_end":30428,"line_start":961,"line_end":961,"column_start":1,"column_end":93}},{"value":"/ `&[A]` | `ArrayView1<A>` | [`::from()`](type.ArrayView.html#method.from)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30429,"byte_end":30505,"line_start":962,"line_end":962,"column_start":1,"column_end":77}},{"value":"/ `&[A]` | `ArrayView<A, D>` | [`::from_shape()`](type.ArrayView.html#method.from_shape)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30506,"byte_end":30596,"line_start":963,"line_end":963,"column_start":1,"column_end":91}},{"value":"/ `&mut [A]` | `ArrayViewMut1<A>` | [`::from()`](type.ArrayViewMut.html#method.from)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30597,"byte_end":30683,"line_start":964,"line_end":964,"column_start":1,"column_end":87}},{"value":"/ `&mut [A]` | `ArrayViewMut<A, D>` | [`::from_shape()`](type.ArrayViewMut.html#method.from_shape)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30684,"byte_end":30784,"line_start":965,"line_end":965,"column_start":1,"column_end":101}},{"value":"/ `&ArrayBase<S, Ix1>` | `Vec<A>` | [`.to_vec()`](#method.to_vec)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30785,"byte_end":30852,"line_start":966,"line_end":966,"column_start":1,"column_end":68}},{"value":"/ `Array<A, D>` | `Vec<A>` | [`.into_raw_vec()`](type.Array.html#method.into_raw_vec)<sup>[1](#into_raw_vec)</sup>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30853,"byte_end":30969,"line_start":967,"line_end":967,"column_start":1,"column_end":117}},{"value":"/ `&ArrayBase<S, D>` | `&[A]` | [`.as_slice()`](#method.as_slice)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order()`](#method.as_slice_memory_order)<sup>[3](#req_contig)</sup>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":30970,"byte_end":31156,"line_start":968,"line_end":968,"column_start":1,"column_end":187}},{"value":"/ `&mut ArrayBase<S: DataMut, D>` | `&mut [A]` | [`.as_slice_mut()`](#method.as_slice_mut)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order_mut()`](#method.as_slice_memory_order_mut)<sup>[3](#req_contig)</sup>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31157,"byte_end":31376,"line_start":969,"line_end":969,"column_start":1,"column_end":220}},{"value":"/ `ArrayView<A, D>` | `&[A]` | [`.to_slice()`](type.ArrayView.html#method.to_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31377,"byte_end":31493,"line_start":970,"line_end":970,"column_start":1,"column_end":117}},{"value":"/ `ArrayViewMut<A, D>` | `&mut [A]` | [`.into_slice()`](type.ArrayViewMut.html#method.into_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31494,"byte_end":31624,"line_start":971,"line_end":971,"column_start":1,"column_end":131}},{"value":"/ `Array0<A>` | `A` | [`.into_scalar()`](type.Array.html#method.into_scalar)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31625,"byte_end":31703,"line_start":972,"line_end":972,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31704,"byte_end":31707,"line_start":973,"line_end":973,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"into_raw_vec\">1</a></sup>Returns the data in memory order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31708,"byte_end":31784,"line_start":974,"line_end":974,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31785,"byte_end":31788,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig_std\">2</a></sup>Works only if the array is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31789,"byte_end":31860,"line_start":976,"line_end":976,"column_start":1,"column_end":72}},{"value":"/ contiguous and in standard order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31861,"byte_end":31898,"line_start":977,"line_end":977,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31899,"byte_end":31902,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig\">3</a></sup>Works only if the array is contiguous.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31903,"byte_end":31982,"line_start":979,"line_end":979,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31983,"byte_end":31986,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ The table above does not include all the constructors; it only shows","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":31987,"byte_end":32059,"line_start":981,"line_end":981,"column_start":1,"column_end":73}},{"value":"/ conversions to/from `Vec`s/slices. See","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32060,"byte_end":32102,"line_start":982,"line_end":982,"column_start":1,"column_end":43}},{"value":"/ [below](#constructor-methods-for-owned-arrays) for more constructors.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32103,"byte_end":32176,"line_start":983,"line_end":983,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32177,"byte_end":32180,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ [ArrayView::reborrow()]: type.ArrayView.html#method.reborrow","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32181,"byte_end":32245,"line_start":985,"line_end":985,"column_start":1,"column_end":65}},{"value":"/ [ArrayViewMut::reborrow()]: type.ArrayViewMut.html#method.reborrow","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32246,"byte_end":32316,"line_start":986,"line_end":986,"column_start":1,"column_end":71}},{"value":"/ [.into_dimensionality()]: #method.into_dimensionality","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32317,"byte_end":32374,"line_start":987,"line_end":987,"column_start":1,"column_end":58}},{"value":"/ [.into_dyn()]: #method.into_dyn","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32375,"byte_end":32410,"line_start":988,"line_end":988,"column_start":1,"column_end":36}},{"value":"/ [.into_owned()]: #method.into_owned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32411,"byte_end":32450,"line_start":989,"line_end":989,"column_start":1,"column_end":40}},{"value":"/ [.into_shared()]: #method.into_shared","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32451,"byte_end":32492,"line_start":990,"line_end":990,"column_start":1,"column_end":42}},{"value":"/ [.to_owned()]: #method.to_owned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32493,"byte_end":32528,"line_start":991,"line_end":991,"column_start":1,"column_end":36}},{"value":"/ [.map()]: #method.map","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32529,"byte_end":32554,"line_start":992,"line_end":992,"column_start":1,"column_end":26}},{"value":"/ [.view()]: #method.view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32555,"byte_end":32582,"line_start":993,"line_end":993,"column_start":1,"column_end":28}},{"value":"/ [.view_mut()]: #method.view_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32583,"byte_end":32618,"line_start":994,"line_end":994,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32619,"byte_end":32622,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ ### Conversions from Nested `Vec`s/`Array`s","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32623,"byte_end":32670,"line_start":996,"line_end":996,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32671,"byte_end":32674,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ It's generally a good idea to avoid nested `Vec`/`Array` types, such as","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32675,"byte_end":32750,"line_start":998,"line_end":998,"column_start":1,"column_end":76}},{"value":"/ `Vec<Vec<A>>` or `Vec<Array2<A>>` because:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32751,"byte_end":32797,"line_start":999,"line_end":999,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32798,"byte_end":32801,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ * they require extra heap allocations compared to a single `Array`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32802,"byte_end":32873,"line_start":1001,"line_end":1001,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32874,"byte_end":32877,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ * they can scatter data all over memory (because of multiple allocations),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32878,"byte_end":32956,"line_start":1003,"line_end":1003,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32957,"byte_end":32960,"line_start":1004,"line_end":1004,"column_start":1,"column_end":4}},{"value":"/ * they cause unnecessary indirection (traversing multiple pointers to reach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":32961,"byte_end":33040,"line_start":1005,"line_end":1005,"column_start":1,"column_end":80}},{"value":"/   the data),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33041,"byte_end":33057,"line_start":1006,"line_end":1006,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33058,"byte_end":33061,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ * they don't enforce consistent shape within the nested","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33062,"byte_end":33121,"line_start":1008,"line_end":1008,"column_start":1,"column_end":60}},{"value":"/   `Vec`s/`ArrayBase`s, and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33122,"byte_end":33152,"line_start":1009,"line_end":1009,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33153,"byte_end":33156,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ * they are generally more difficult to work with.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33157,"byte_end":33210,"line_start":1011,"line_end":1011,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33211,"byte_end":33214,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ The most common case where users might consider using nested","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33215,"byte_end":33279,"line_start":1013,"line_end":1013,"column_start":1,"column_end":65}},{"value":"/ `Vec`s/`Array`s is when creating an array by appending rows/subviews in a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33280,"byte_end":33357,"line_start":1014,"line_end":1014,"column_start":1,"column_end":78}},{"value":"/ loop, where the rows/subviews are computed within the loop. However, there","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33358,"byte_end":33436,"line_start":1015,"line_end":1015,"column_start":1,"column_end":79}},{"value":"/ are better ways than using nested `Vec`s/`Array`s.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33437,"byte_end":33491,"line_start":1016,"line_end":1016,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33492,"byte_end":33495,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ If you know ahead-of-time the shape of the final array, the cleanest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33496,"byte_end":33568,"line_start":1018,"line_end":1018,"column_start":1,"column_end":73}},{"value":"/ solution is to allocate the final array before the loop, and then assign","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33569,"byte_end":33645,"line_start":1019,"line_end":1019,"column_start":1,"column_end":77}},{"value":"/ the data to it within the loop, like this:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33646,"byte_end":33692,"line_start":1020,"line_end":1020,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33693,"byte_end":33696,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33697,"byte_end":33708,"line_start":1022,"line_end":1022,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33709,"byte_end":33748,"line_start":1023,"line_end":1023,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33749,"byte_end":33752,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ let mut arr = Array2::zeros((2, 3));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33753,"byte_end":33793,"line_start":1025,"line_end":1025,"column_start":1,"column_end":41}},{"value":"/ for (i, mut row) in arr.axis_iter_mut(Axis(0)).enumerate() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33794,"byte_end":33858,"line_start":1026,"line_end":1026,"column_start":1,"column_end":65}},{"value":"/     // Perform calculations and assign to `row`; this is a trivial example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33859,"byte_end":33938,"line_start":1027,"line_end":1027,"column_start":1,"column_end":80}},{"value":"/     row.fill(i);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33939,"byte_end":33959,"line_start":1028,"line_end":1028,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33960,"byte_end":33965,"line_start":1029,"line_end":1029,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":33966,"byte_end":34016,"line_start":1030,"line_end":1030,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34017,"byte_end":34024,"line_start":1031,"line_end":1031,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34025,"byte_end":34028,"line_start":1032,"line_end":1032,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead-of-time the shape of the final array, then the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34029,"byte_end":34103,"line_start":1033,"line_end":1033,"column_start":1,"column_end":75}},{"value":"/ cleanest solution is generally to append the data to a flat `Vec`, and then","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34104,"byte_end":34183,"line_start":1034,"line_end":1034,"column_start":1,"column_end":80}},{"value":"/ convert it to an `Array` at the end with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34184,"byte_end":34228,"line_start":1035,"line_end":1035,"column_start":1,"column_end":45}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec). You just have to be careful","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34229,"byte_end":34308,"line_start":1036,"line_end":1036,"column_start":1,"column_end":80}},{"value":"/ that the layout of the data (the order of the elements in the flat `Vec`)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34309,"byte_end":34386,"line_start":1037,"line_end":1037,"column_start":1,"column_end":78}},{"value":"/ is correct.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34387,"byte_end":34402,"line_start":1038,"line_end":1038,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34403,"byte_end":34406,"line_start":1039,"line_end":1039,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34407,"byte_end":34418,"line_start":1040,"line_end":1040,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34419,"byte_end":34452,"line_start":1041,"line_end":1041,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34453,"byte_end":34456,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34457,"byte_end":34512,"line_start":1043,"line_end":1043,"column_start":1,"column_end":56}},{"value":"/ let ncols = 3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34513,"byte_end":34531,"line_start":1044,"line_end":1044,"column_start":1,"column_end":19}},{"value":"/ let mut data = Vec::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34532,"byte_end":34562,"line_start":1045,"line_end":1045,"column_start":1,"column_end":31}},{"value":"/ let mut nrows = 0;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34563,"byte_end":34585,"line_start":1046,"line_end":1046,"column_start":1,"column_end":23}},{"value":"/ for i in 0..2 {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34586,"byte_end":34605,"line_start":1047,"line_end":1047,"column_start":1,"column_end":20}},{"value":"/     // Compute `row` and append it to `data`; this is a trivial example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34606,"byte_end":34682,"line_start":1048,"line_end":1048,"column_start":1,"column_end":77}},{"value":"/     let row = vec![i; ncols];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34683,"byte_end":34716,"line_start":1049,"line_end":1049,"column_start":1,"column_end":34}},{"value":"/     data.extend_from_slice(&row);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34717,"byte_end":34754,"line_start":1050,"line_end":1050,"column_start":1,"column_end":38}},{"value":"/     nrows += 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34755,"byte_end":34774,"line_start":1051,"line_end":1051,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34775,"byte_end":34780,"line_start":1052,"line_end":1052,"column_start":1,"column_end":6}},{"value":"/ let arr = Array2::from_shape_vec((nrows, ncols), data)?;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34781,"byte_end":34841,"line_start":1053,"line_end":1053,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34842,"byte_end":34892,"line_start":1054,"line_end":1054,"column_start":1,"column_end":51}},{"value":"/ # Ok(())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34893,"byte_end":34905,"line_start":1055,"line_end":1055,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34906,"byte_end":34913,"line_start":1056,"line_end":1056,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34914,"byte_end":34921,"line_start":1057,"line_end":1057,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34922,"byte_end":34925,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ If neither of these options works for you, and you really need to convert","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":34926,"byte_end":35003,"line_start":1059,"line_end":1059,"column_start":1,"column_end":78}},{"value":"/ nested `Vec`/`Array` instances to an `Array`, the cleanest solution is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35004,"byte_end":35078,"line_start":1060,"line_end":1060,"column_start":1,"column_end":75}},{"value":"/ generally to use","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35079,"byte_end":35099,"line_start":1061,"line_end":1061,"column_start":1,"column_end":21}},{"value":"/ [`Iterator::flatten()`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35100,"byte_end":35198,"line_start":1062,"line_end":1062,"column_start":1,"column_end":99}},{"value":"/ to get a flat `Vec`, and then convert the `Vec` to an `Array` with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35199,"byte_end":35269,"line_start":1063,"line_end":1063,"column_start":1,"column_end":71}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec), like this:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35270,"byte_end":35332,"line_start":1064,"line_end":1064,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35333,"byte_end":35336,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35337,"byte_end":35348,"line_start":1066,"line_end":1066,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Array3};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35349,"byte_end":35390,"line_start":1067,"line_end":1067,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35391,"byte_end":35394,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35395,"byte_end":35450,"line_start":1069,"line_end":1069,"column_start":1,"column_end":56}},{"value":"/ let nested: Vec<Array2<i32>> = vec![","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35451,"byte_end":35491,"line_start":1070,"line_end":1070,"column_start":1,"column_end":41}},{"value":"/     array![[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35492,"byte_end":35529,"line_start":1071,"line_end":1071,"column_start":1,"column_end":38}},{"value":"/     array![[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35530,"byte_end":35570,"line_start":1072,"line_end":1072,"column_start":1,"column_end":41}},{"value":"/ ];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35571,"byte_end":35577,"line_start":1073,"line_end":1073,"column_start":1,"column_end":7}},{"value":"/ let inner_shape = nested[0].dim();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35578,"byte_end":35616,"line_start":1074,"line_end":1074,"column_start":1,"column_end":39}},{"value":"/ let shape = (nested.len(), inner_shape.0, inner_shape.1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35617,"byte_end":35678,"line_start":1075,"line_end":1075,"column_start":1,"column_end":62}},{"value":"/ let flat: Vec<i32> = nested.iter().flatten().cloned().collect();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35679,"byte_end":35747,"line_start":1076,"line_end":1076,"column_start":1,"column_end":69}},{"value":"/ let arr = Array3::from_shape_vec(shape, flat)?;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35748,"byte_end":35799,"line_start":1077,"line_end":1077,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(arr, array![","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35800,"byte_end":35827,"line_start":1078,"line_end":1078,"column_start":1,"column_end":28}},{"value":"/     [[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35828,"byte_end":35859,"line_start":1079,"line_end":1079,"column_start":1,"column_end":32}},{"value":"/     [[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35860,"byte_end":35894,"line_start":1080,"line_end":1080,"column_start":1,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35895,"byte_end":35902,"line_start":1081,"line_end":1081,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35903,"byte_end":35915,"line_start":1082,"line_end":1082,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35916,"byte_end":35923,"line_start":1083,"line_end":1083,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35924,"byte_end":35931,"line_start":1084,"line_end":1084,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35932,"byte_end":35935,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation assumes that the nested `Vec`s are all the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":35936,"byte_end":36012,"line_start":1086,"line_end":1086,"column_start":1,"column_end":77}},{"value":"/ same shape and that the `Vec` is non-empty. Depending on your application,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":36013,"byte_end":36091,"line_start":1087,"line_end":1087,"column_start":1,"column_end":79}},{"value":"/ it may be a good idea to add checks for these assumptions and possibly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":36092,"byte_end":36166,"line_start":1088,"line_end":1088,"column_start":1,"column_end":75}},{"value":"/ choose a different way to handle the empty case.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":36167,"byte_end":36219,"line_start":1089,"line_end":1089,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":36220,"byte_end":36223,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42973,"byte_end":42980,"line_start":1225,"line_end":1225,"column_start":10,"column_end":17},"name":"RcArray","qualname":"::RcArray","value":"ArrayBase<OwnedRcRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array where the data has shared ownership and is copy on write.","sig":null,"attributes":[{"value":"/ An array where the data has shared ownership and is copy on write.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42649,"byte_end":42719,"line_start":1219,"line_end":1219,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42720,"byte_end":42723,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ It can act as both an owner as the data as well as a shared reference (view like).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42724,"byte_end":42810,"line_start":1221,"line_end":1221,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42811,"byte_end":42814,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ **Note: this type alias is obsolete.** See the equivalent [`ArcArray`] instead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42815,"byte_end":42898,"line_start":1223,"line_end":1223,"column_start":1,"column_end":84}},{"value":"deprecated(note = \"`RcArray` has been renamed to `ArcArray`\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":42899,"byte_end":42963,"line_start":1224,"line_end":1224,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44101,"byte_end":44109,"line_start":1249,"line_end":1249,"column_start":10,"column_end":18},"name":"ArcArray","qualname":"::ArcArray","value":"ArrayBase<OwnedArcRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array where the data has shared ownership and is copy on write.","sig":null,"attributes":[{"value":"/ An array where the data has shared ownership and is copy on write.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43020,"byte_end":43090,"line_start":1227,"line_end":1227,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43091,"byte_end":43094,"line_start":1228,"line_end":1228,"column_start":1,"column_end":4}},{"value":"/ The `ArcArray<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43095,"byte_end":43176,"line_start":1229,"line_end":1229,"column_start":1,"column_end":82}},{"value":"/ the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43177,"byte_end":43200,"line_start":1230,"line_end":1230,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43201,"byte_end":43204,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ It can act as both an owner as the data as well as a shared reference (view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43205,"byte_end":43284,"line_start":1232,"line_end":1232,"column_start":1,"column_end":80}},{"value":"/ like).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43285,"byte_end":43295,"line_start":1233,"line_end":1233,"column_start":1,"column_end":11}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43296,"byte_end":43365,"line_start":1234,"line_end":1234,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](struct.ArrayBase.html#method.view_mut) or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43366,"byte_end":43426,"line_start":1235,"line_end":1235,"column_start":1,"column_end":61}},{"value":"/ [`get_mut()`](struct.ArrayBase.html#method.get_mut), will break sharing and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43427,"byte_end":43506,"line_start":1236,"line_end":1236,"column_start":1,"column_end":80}},{"value":"/ require a clone of the data (if it is not uniquely held).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43507,"byte_end":43568,"line_start":1237,"line_end":1237,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43569,"byte_end":43572,"line_start":1238,"line_end":1238,"column_start":1,"column_end":4}},{"value":"/ `ArcArray` uses atomic reference counting like `Arc`, so it is `Send` and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43573,"byte_end":43650,"line_start":1239,"line_end":1239,"column_start":1,"column_end":78}},{"value":"/ `Sync` (when allowed by the element type of the array too).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43651,"byte_end":43714,"line_start":1240,"line_end":1240,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43715,"byte_end":43718,"line_start":1241,"line_end":1241,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43719,"byte_end":43799,"line_start":1242,"line_end":1242,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43800,"byte_end":43877,"line_start":1243,"line_end":1243,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43878,"byte_end":43881,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43882,"byte_end":43895,"line_start":1245,"line_end":1245,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43896,"byte_end":43899,"line_start":1246,"line_end":1246,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":43900,"byte_end":44004,"line_start":1247,"line_end":1247,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44005,"byte_end":44091,"line_start":1248,"line_end":1248,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44965,"byte_end":44970,"line_start":1272,"line_end":1272,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"ArrayBase<OwnedRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array that owns its data uniquely.","sig":null,"attributes":[{"value":"/ An array that owns its data uniquely.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44150,"byte_end":44191,"line_start":1251,"line_end":1251,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44192,"byte_end":44195,"line_start":1252,"line_end":1252,"column_start":1,"column_end":4}},{"value":"/ `Array` is the main n-dimensional array type, and it owns all its array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44196,"byte_end":44271,"line_start":1253,"line_end":1253,"column_start":1,"column_end":76}},{"value":"/ elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44272,"byte_end":44285,"line_start":1254,"line_end":1254,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44286,"byte_end":44289,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ The `Array<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44290,"byte_end":44368,"line_start":1256,"line_end":1256,"column_start":1,"column_end":79}},{"value":"/ the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44369,"byte_end":44392,"line_start":1257,"line_end":1257,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44393,"byte_end":44396,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44397,"byte_end":44477,"line_start":1259,"line_end":1259,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44478,"byte_end":44555,"line_start":1260,"line_end":1260,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44556,"byte_end":44559,"line_start":1261,"line_end":1261,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44560,"byte_end":44573,"line_start":1262,"line_end":1262,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44574,"byte_end":44577,"line_start":1263,"line_end":1263,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44578,"byte_end":44682,"line_start":1264,"line_end":1264,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44683,"byte_end":44769,"line_start":1265,"line_end":1265,"column_start":1,"column_end":87}},{"value":"/ + Dimensionality-specific type alises","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44770,"byte_end":44811,"line_start":1266,"line_end":1266,"column_start":1,"column_end":42}},{"value":"/ [`Array1`](Array1.t.html),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44812,"byte_end":44842,"line_start":1267,"line_end":1267,"column_start":1,"column_end":31}},{"value":"/ [`Array2`](Array2.t.html),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44843,"byte_end":44873,"line_start":1268,"line_end":1268,"column_start":1,"column_end":31}},{"value":"/ [`Array3`](Array3.t.html), ...,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44874,"byte_end":44909,"line_start":1269,"line_end":1269,"column_start":1,"column_end":36}},{"value":"/ [`ArrayD`](ArrayD.t.html),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44910,"byte_end":44940,"line_start":1270,"line_end":1270,"column_start":1,"column_end":31}},{"value":"/ and so on.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":44941,"byte_end":44955,"line_start":1271,"line_end":1271,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45884,"byte_end":45892,"line_start":1293,"line_end":1293,"column_start":10,"column_end":18},"name":"CowArray","qualname":"::CowArray","value":"ArrayBase<CowRepr, D>","parent":null,"children":[],"decl_id":null,"docs":" An array with copy-on-write behavior.","sig":null,"attributes":[{"value":"/ An array with copy-on-write behavior.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45008,"byte_end":45049,"line_start":1274,"line_end":1274,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45050,"byte_end":45053,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ An `CowArray` represents either a uniquely owned array or a view of an","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45054,"byte_end":45128,"line_start":1276,"line_end":1276,"column_start":1,"column_end":75}},{"value":"/ array. The `'a` corresponds to the lifetime of the view variant.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45129,"byte_end":45197,"line_start":1277,"line_end":1277,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45198,"byte_end":45201,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ This type is analogous to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45202,"byte_end":45231,"line_start":1279,"line_end":1279,"column_start":1,"column_end":30}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45232,"byte_end":45309,"line_start":1280,"line_end":1280,"column_start":1,"column_end":78}},{"value":"/ If a `CowArray` instance is the immutable view variant, then calling a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45310,"byte_end":45384,"line_start":1281,"line_end":1281,"column_start":1,"column_end":75}},{"value":"/ method for mutating elements in the array will cause it to be converted","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45385,"byte_end":45460,"line_start":1282,"line_end":1282,"column_start":1,"column_end":76}},{"value":"/ into the owned variant (by cloning all the elements) before the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45461,"byte_end":45528,"line_start":1283,"line_end":1283,"column_start":1,"column_end":68}},{"value":"/ modification is performed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45529,"byte_end":45559,"line_start":1284,"line_end":1284,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45560,"byte_end":45563,"line_start":1285,"line_end":1285,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45564,"byte_end":45637,"line_start":1286,"line_end":1286,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45638,"byte_end":45641,"line_start":1287,"line_end":1287,"column_start":1,"column_end":4}},{"value":"/ See also [`ArcArray`](type.ArcArray.html), which also provides","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45642,"byte_end":45708,"line_start":1288,"line_end":1288,"column_start":1,"column_end":67}},{"value":"/ copy-on-write behavior but has a reference-counted pointer to the data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45709,"byte_end":45783,"line_start":1289,"line_end":1289,"column_start":1,"column_end":75}},{"value":"/ instead of either a view or a uniquely owned copy.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45784,"byte_end":45838,"line_start":1290,"line_end":1290,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45839,"byte_end":45842,"line_start":1291,"line_end":1291,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45843,"byte_end":45874,"line_start":1292,"line_end":1292,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46414,"byte_end":46423,"line_start":1308,"line_end":1308,"column_start":10,"column_end":19},"name":"ArrayView","qualname":"::ArrayView","value":"ArrayBase<ViewRepr<&'a A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view.","sig":null,"attributes":[{"value":"/ A read-only array view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45936,"byte_end":45963,"line_start":1295,"line_end":1295,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45964,"byte_end":45967,"line_start":1296,"line_end":1296,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":45968,"byte_end":46035,"line_start":1297,"line_end":1297,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46036,"byte_end":46082,"line_start":1298,"line_end":1298,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46083,"byte_end":46086,"line_start":1299,"line_end":1299,"column_start":1,"column_end":4}},{"value":"/ The `ArrayView<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46087,"byte_end":46162,"line_start":1300,"line_end":1300,"column_start":1,"column_end":76}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46163,"byte_end":46231,"line_start":1301,"line_end":1301,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46232,"byte_end":46235,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46236,"byte_end":46309,"line_start":1303,"line_end":1303,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46310,"byte_end":46313,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayViewMut`](type.ArrayViewMut.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46314,"byte_end":46368,"line_start":1305,"line_end":1305,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46369,"byte_end":46372,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46373,"byte_end":46404,"line_start":1307,"line_end":1307,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46944,"byte_end":46956,"line_start":1323,"line_end":1323,"column_start":10,"column_end":22},"name":"ArrayViewMut","qualname":"::ArrayViewMut","value":"ArrayBase<ViewRepr<&'a mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-write array view.","sig":null,"attributes":[{"value":"/ A read-write array view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46468,"byte_end":46496,"line_start":1310,"line_end":1310,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46497,"byte_end":46500,"line_start":1311,"line_end":1311,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46501,"byte_end":46568,"line_start":1312,"line_end":1312,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46569,"byte_end":46615,"line_start":1313,"line_end":1313,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46616,"byte_end":46619,"line_start":1314,"line_end":1314,"column_start":1,"column_end":4}},{"value":"/ The `ArrayViewMut<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46620,"byte_end":46698,"line_start":1315,"line_end":1315,"column_start":1,"column_end":79}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46699,"byte_end":46767,"line_start":1316,"line_end":1316,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46768,"byte_end":46771,"line_start":1317,"line_end":1317,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46772,"byte_end":46845,"line_start":1318,"line_end":1318,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46846,"byte_end":46849,"line_start":1319,"line_end":1319,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayView`](type.ArrayView.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46850,"byte_end":46898,"line_start":1320,"line_end":1320,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46899,"byte_end":46902,"line_start":1321,"line_end":1321,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":46903,"byte_end":46934,"line_start":1322,"line_end":1322,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47969,"byte_end":47981,"line_start":1348,"line_end":1348,"column_start":10,"column_end":22},"name":"RawArrayView","qualname":"::RawArrayView","value":"ArrayBase<RawViewRepr<*const A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view without a lifetime.","sig":null,"attributes":[{"value":"/ A read-only array view without a lifetime.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47005,"byte_end":47051,"line_start":1325,"line_end":1325,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47052,"byte_end":47055,"line_start":1326,"line_end":1326,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayView`] but does not carry any lifetime or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47056,"byte_end":47127,"line_start":1327,"line_end":1327,"column_start":1,"column_end":72}},{"value":"/ ownership information, and its data cannot be read without an unsafe","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47128,"byte_end":47200,"line_start":1328,"line_end":1328,"column_start":1,"column_end":73}},{"value":"/ conversion into an [`ArrayView`]. The relationship between `RawArrayView`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47201,"byte_end":47278,"line_start":1329,"line_end":1329,"column_start":1,"column_end":78}},{"value":"/ and [`ArrayView`] is somewhat analogous to the relationship between `*const","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47279,"byte_end":47358,"line_start":1330,"line_end":1330,"column_start":1,"column_end":80}},{"value":"/ T` and `&T`, but `RawArrayView` has additional requirements that `*const T`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47359,"byte_end":47438,"line_start":1331,"line_end":1331,"column_start":1,"column_end":80}},{"value":"/ does not, such as alignment and non-nullness.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47439,"byte_end":47488,"line_start":1332,"line_end":1332,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47489,"byte_end":47492,"line_start":1333,"line_end":1333,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47493,"byte_end":47531,"line_start":1334,"line_end":1334,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47532,"byte_end":47535,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayView<A, D>` is parameterized by `A` for the element type and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47536,"byte_end":47613,"line_start":1336,"line_end":1336,"column_start":1,"column_end":78}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47614,"byte_end":47645,"line_start":1337,"line_end":1337,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47646,"byte_end":47649,"line_start":1338,"line_end":1338,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47650,"byte_end":47707,"line_start":1339,"line_end":1339,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47708,"byte_end":47750,"line_start":1340,"line_end":1340,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47751,"byte_end":47754,"line_start":1341,"line_end":1341,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayViewMut`](type.RawArrayViewMut.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47755,"byte_end":47815,"line_start":1342,"line_end":1342,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47816,"byte_end":47819,"line_start":1343,"line_end":1343,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47820,"byte_end":47833,"line_start":1344,"line_end":1344,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47834,"byte_end":47837,"line_start":1345,"line_end":1345,"column_start":1,"column_end":4}},{"value":"/ You can't use this type wih an arbitrary raw pointer; see","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47838,"byte_end":47899,"line_start":1346,"line_end":1346,"column_start":1,"column_end":62}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":47900,"byte_end":47959,"line_start":1347,"line_end":1347,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49020,"byte_end":49035,"line_start":1374,"line_end":1374,"column_start":10,"column_end":25},"name":"RawArrayViewMut","qualname":"::RawArrayViewMut","value":"ArrayBase<RawViewRepr<*mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable array view without a lifetime.","sig":null,"attributes":[{"value":"/ A mutable array view without a lifetime.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48028,"byte_end":48072,"line_start":1350,"line_end":1350,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48073,"byte_end":48076,"line_start":1351,"line_end":1351,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayViewMut`] but does not carry any lifetime or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48077,"byte_end":48151,"line_start":1352,"line_end":1352,"column_start":1,"column_end":75}},{"value":"/ ownership information, and its data cannot be read/written without an","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48152,"byte_end":48225,"line_start":1353,"line_end":1353,"column_start":1,"column_end":74}},{"value":"/ unsafe conversion into an [`ArrayViewMut`]. The relationship between","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48226,"byte_end":48298,"line_start":1354,"line_end":1354,"column_start":1,"column_end":73}},{"value":"/ `RawArrayViewMut` and [`ArrayViewMut`] is somewhat analogous to the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48299,"byte_end":48370,"line_start":1355,"line_end":1355,"column_start":1,"column_end":72}},{"value":"/ relationship between `*mut T` and `&mut T`, but `RawArrayViewMut` has","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48371,"byte_end":48444,"line_start":1356,"line_end":1356,"column_start":1,"column_end":74}},{"value":"/ additional requirements that `*mut T` does not, such as alignment and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48445,"byte_end":48518,"line_start":1357,"line_end":1357,"column_start":1,"column_end":74}},{"value":"/ non-nullness.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48519,"byte_end":48536,"line_start":1358,"line_end":1358,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48537,"byte_end":48540,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48541,"byte_end":48585,"line_start":1360,"line_end":1360,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48586,"byte_end":48589,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayViewMut<A, D>` is parameterized by `A` for the element type","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48590,"byte_end":48666,"line_start":1362,"line_end":1362,"column_start":1,"column_end":77}},{"value":"/ and `D` for the dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48667,"byte_end":48702,"line_start":1363,"line_end":1363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48703,"byte_end":48706,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48707,"byte_end":48764,"line_start":1365,"line_end":1365,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48765,"byte_end":48807,"line_start":1366,"line_end":1366,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48808,"byte_end":48811,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayView`](type.RawArrayView.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48812,"byte_end":48866,"line_start":1368,"line_end":1368,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48867,"byte_end":48870,"line_start":1369,"line_end":1369,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48871,"byte_end":48884,"line_start":1370,"line_end":1370,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48885,"byte_end":48888,"line_start":1371,"line_end":1371,"column_start":1,"column_end":4}},{"value":"/ You can't use this type wih an arbitrary raw pointer; see","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48889,"byte_end":48950,"line_start":1372,"line_end":1372,"column_start":1,"column_end":62}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":48951,"byte_end":49010,"line_start":1373,"line_end":1373,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49256,"byte_end":49265,"line_start":1381,"line_end":1381,"column_start":12,"column_end":21},"name":"OwnedRepr","qualname":"::OwnedRepr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Array's representation.","sig":null,"attributes":[{"value":"/ Array's representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49080,"byte_end":49107,"line_start":1376,"line_end":1376,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49108,"byte_end":49111,"line_start":1377,"line_end":1377,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49112,"byte_end":49168,"line_start":1378,"line_end":1378,"column_start":1,"column_end":53}},{"value":"/ [`Array`](type.Array.html) for the array type!*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49169,"byte_end":49220,"line_start":1379,"line_end":1379,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4858},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49704,"byte_end":49716,"line_start":1395,"line_end":1395,"column_start":12,"column_end":24},"name":"OwnedArcRepr","qualname":"::OwnedArcRepr","value":"","parent":null,"children":[],"decl_id":null,"docs":" ArcArray's representation.","sig":null,"attributes":[{"value":"/ ArcArray's representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49526,"byte_end":49556,"line_start":1390,"line_end":1390,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49557,"byte_end":49560,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49561,"byte_end":49617,"line_start":1392,"line_end":1392,"column_start":1,"column_end":53}},{"value":"/ [`ArcArray`](type.ArcArray.html) for the array type!*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49618,"byte_end":49675,"line_start":1393,"line_end":1393,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50174,"byte_end":50185,"line_start":1410,"line_end":1410,"column_start":12,"column_end":23},"name":"RawViewRepr","qualname":"::RawViewRepr","value":"RawViewRepr {  }","parent":null,"children":[{"krate":0,"index":4867}],"decl_id":null,"docs":" Array pointer’s representation.","sig":null,"attributes":[{"value":"/ Array pointer’s representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49847,"byte_end":49884,"line_start":1403,"line_end":1403,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49885,"byte_end":49888,"line_start":1404,"line_end":1404,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49889,"byte_end":49947,"line_start":1405,"line_end":1405,"column_start":1,"column_end":55}},{"value":"/ [`RawArrayView`](type.RawArrayView.html) /","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49948,"byte_end":49994,"line_start":1406,"line_end":1406,"column_start":1,"column_end":47}},{"value":"/ [`RawArrayViewMut`](type.RawArrayViewMut.html) for the array type!*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49995,"byte_end":50066,"line_start":1407,"line_end":1407,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4873},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50642,"byte_end":50650,"line_start":1428,"line_end":1428,"column_start":12,"column_end":20},"name":"ViewRepr","qualname":"::ViewRepr","value":"ViewRepr {  }","parent":null,"children":[{"krate":0,"index":4875}],"decl_id":null,"docs":" Array view’s representation.","sig":null,"attributes":[{"value":"/ Array view’s representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50339,"byte_end":50373,"line_start":1421,"line_end":1421,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50374,"byte_end":50377,"line_start":1422,"line_end":1422,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50378,"byte_end":50436,"line_start":1423,"line_end":1423,"column_start":1,"column_end":55}},{"value":"/ [`ArrayView`](type.ArrayView.html)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50437,"byte_end":50475,"line_start":1424,"line_end":1424,"column_start":1,"column_end":39}},{"value":"/ / [`ArrayViewMut`](type.ArrayViewMut.html) for the array type!*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50476,"byte_end":50543,"line_start":1425,"line_end":1425,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51001,"byte_end":51005,"line_start":1445,"line_end":1445,"column_start":5,"column_end":9},"name":"View","qualname":"::CowRepr::View","value":"CowRepr::View(ViewRepr<&'a A>)","parent":{"krate":0,"index":2537},"children":[],"decl_id":null,"docs":" Borrowed data.\n","sig":null,"attributes":[{"value":"/ Borrowed data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50978,"byte_end":50996,"line_start":1444,"line_end":1444,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51048,"byte_end":51053,"line_start":1447,"line_end":1447,"column_start":5,"column_end":10},"name":"Owned","qualname":"::CowRepr::Owned","value":"CowRepr::Owned(OwnedRepr<A>)","parent":{"krate":0,"index":2537},"children":[],"decl_id":null,"docs":" Owned data.\n","sig":null,"attributes":[{"value":"/ Owned data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51028,"byte_end":51043,"line_start":1446,"line_end":1446,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50957,"byte_end":50964,"line_start":1443,"line_end":1443,"column_start":10,"column_end":17},"name":"CowRepr","qualname":"::CowRepr","value":"pub enum CowRepr<'a, A> {\n\n    /// Borrowed data.\n    View(ViewRepr<&'a A>),\n\n    /// Owned data.\n    Owned(OwnedRepr<A>),\n}","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2543}],"decl_id":null,"docs":" CowArray's representation.","sig":null,"attributes":[{"value":"/ CowArray's representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50800,"byte_end":50830,"line_start":1439,"line_end":1439,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50831,"byte_end":50834,"line_start":1440,"line_end":1440,"column_start":1,"column_end":4}},{"value":"/ *Don't use this type directly—use the type alias","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50835,"byte_end":50889,"line_start":1441,"line_end":1441,"column_start":1,"column_end":53}},{"value":"/ [`CowArray`](type.CowArray.html) for the array type!*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50890,"byte_end":50947,"line_start":1442,"line_end":1442,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51171,"byte_end":51178,"line_start":1452,"line_end":1452,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowRepr>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `View` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `View` variant.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51105,"byte_end":51159,"line_start":1451,"line_end":1451,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51383,"byte_end":51391,"line_start":1460,"line_end":1460,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowRepr>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `Owned` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `Owned` variant.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51316,"byte_end":51371,"line_start":1459,"line_end":1459,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364230,"byte_end":364238,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ArrayBase<S, Ix1>>::from_vec","value":"pub fn from_vec(Vec<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from a vector (no copying needed).","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from a vector (no copying needed).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":363885,"byte_end":363954,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":363959,"byte_end":363962,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":363967,"byte_end":364025,"line_start":39,"line_end":39,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364030,"byte_end":364033,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364038,"byte_end":364049,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364054,"byte_end":364077,"line_start":42,"line_end":42,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364082,"byte_end":364085,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from(vec![1., 2., 3., 4.]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364090,"byte_end":364140,"line_start":44,"line_end":44,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364145,"byte_end":364152,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"use standard `from`\", since = \"0.13.0\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364157,"byte_end":364218,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365040,"byte_end":365048,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"linspace","qualname":"<ArrayBase<S, Ix1>>::linspace","value":"pub fn linspace(A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` evenly spaced elements from\n `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` evenly spaced elements from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364293,"byte_end":364364,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364369,"byte_end":364437,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364442,"byte_end":364445,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that if `start > end`, the first element will still be `start`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364450,"byte_end":364522,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ and the following elements will be decreasing. This is different from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364527,"byte_end":364600,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ the behavior of `std::ops::RangeInclusive`, which interprets `start >","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364605,"byte_end":364678,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ end` to mean that the range is empty.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364683,"byte_end":364724,"line_start":57,"line_end":57,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364729,"byte_end":364732,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364737,"byte_end":364812,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364817,"byte_end":364839,"line_start":60,"line_end":60,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364844,"byte_end":364847,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364852,"byte_end":364863,"line_start":62,"line_end":62,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364868,"byte_end":364899,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364904,"byte_end":364907,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let array = Array::linspace(0., 1., 5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364912,"byte_end":364955,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/ assert!(array == arr1(&[0.0, 0.25, 0.5, 0.75, 1.0]))","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":364960,"byte_end":365016,"line_start":66,"line_end":66,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365021,"byte_end":365028,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365605,"byte_end":365610,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"range","qualname":"<ArrayBase<S, Ix1>>::range","value":"pub fn range(A, A, A) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `start` to `end`\n (exclusive), incrementing by `step`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `start` to `end`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365192,"byte_end":365262,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ (exclusive), incrementing by `step`. `A` must be a floating point type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365267,"byte_end":365342,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365347,"byte_end":365350,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365355,"byte_end":365413,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365418,"byte_end":365421,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365426,"byte_end":365437,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365442,"byte_end":365473,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365478,"byte_end":365481,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let array = Array::range(0., 5., 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365486,"byte_end":365527,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ assert!(array == arr1(&[0., 1., 2., 3., 4.]))","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365532,"byte_end":365581,"line_start":84,"line_end":84,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365586,"byte_end":365593,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366592,"byte_end":366600,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"logspace","qualname":"<ArrayBase<S, Ix1>>::logspace","value":"pub fn logspace(A, A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` logarithmically spaced\n elements, with the starting value being `base.powf(start)` and the\n final one being `base.powf(end)`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` logarithmically spaced","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365753,"byte_end":365819,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ elements, with the starting value being `base.powf(start)` and the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365824,"byte_end":365894,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ final one being `base.powf(end)`. `A` must be a floating point type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365899,"byte_end":365971,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365976,"byte_end":365979,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If `base` is negative, all values will be negative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":365984,"byte_end":366039,"line_start":97,"line_end":97,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366044,"byte_end":366047,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366052,"byte_end":366127,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366132,"byte_end":366154,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366159,"byte_end":366162,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366167,"byte_end":366178,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366183,"byte_end":366218,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366223,"byte_end":366254,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366259,"byte_end":366262,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366267,"byte_end":366301,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/ let array = Array::logspace(10.0, 0.0, 3.0, 4);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366306,"byte_end":366357,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366362,"byte_end":366422,"line_start":108,"line_end":108,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366427,"byte_end":366430,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(-10.0, 3.0, 0.0, 4);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366435,"byte_end":366487,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366492,"byte_end":366556,"line_start":111,"line_end":111,"column_start":5,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366561,"byte_end":366568,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366573,"byte_end":366580,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367826,"byte_end":367835,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"geomspace","qualname":"<ArrayBase<S, Ix1>>::geomspace","value":"pub fn geomspace(A, A, usize) -> Option<Self> where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` geometrically spaced elements\n from `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` geometrically spaced elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366759,"byte_end":366832,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ from `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366837,"byte_end":366910,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366915,"byte_end":366918,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `start` and `end` have different signs or if either","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":366923,"byte_end":366996,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ one is zero. Conceptually, this means that in order to obtain a `Some`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367001,"byte_end":367075,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ result, `end / start` must be positive.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367080,"byte_end":367123,"line_start":126,"line_end":126,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367128,"byte_end":367131,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367136,"byte_end":367211,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367216,"byte_end":367238,"line_start":129,"line_end":129,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367243,"byte_end":367246,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367251,"byte_end":367262,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367267,"byte_end":367302,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367307,"byte_end":367338,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367343,"byte_end":367346,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Option<()> {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367351,"byte_end":367385,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367390,"byte_end":367424,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/ let array = Array::geomspace(1e0, 1e3, 4)?;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367429,"byte_end":367476,"line_start":137,"line_end":137,"column_start":5,"column_end":52}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]), epsilon = 1e-12);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367481,"byte_end":367558,"line_start":138,"line_end":138,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367563,"byte_end":367566,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(-1e3, -1e0, 4)?;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367571,"byte_end":367620,"line_start":140,"line_end":140,"column_start":5,"column_end":54}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]), epsilon = 1e-12);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367625,"byte_end":367706,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367711,"byte_end":367718,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # Some(())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367723,"byte_end":367737,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367742,"byte_end":367749,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367754,"byte_end":367759,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ # fn main() { example().unwrap() }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367764,"byte_end":367802,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":367807,"byte_end":367814,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368252,"byte_end":368255,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"eye","qualname":"<ArrayBase<S, Ix2>>::eye","value":"pub fn eye(Ix) -> Self where S: DataMut, A: Clone + Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix of size `n` (square 2D array).","sig":null,"attributes":[{"value":"/ Create an identity matrix of size `n` (square 2D array).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368118,"byte_end":368178,"line_start":161,"line_end":161,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368183,"byte_end":368186,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n * n` would overflow `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368191,"byte_end":368240,"line_start":163,"line_end":163,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368832,"byte_end":368841,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"from_diag","qualname":"<ArrayBase<S, Ix2>>::from_diag","value":"pub fn from_diag<S2>(&ArrayBase<S2, Ix1>) -> Self where A: Clone + Zero,\nS: DataMut, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D matrix from its diagonal","sig":null,"attributes":[{"value":"/ Create a 2D matrix from its diagonal","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368481,"byte_end":368521,"line_start":176,"line_end":176,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368526,"byte_end":368529,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `diag.len() * diag.len()` would overflow `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368534,"byte_end":368601,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368606,"byte_end":368609,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368614,"byte_end":368625,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array2, arr1, arr2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368630,"byte_end":368668,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368673,"byte_end":368676,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let diag = arr1(&[1, 2]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368681,"byte_end":368710,"line_start":183,"line_end":183,"column_start":5,"column_end":34}},{"value":"/ let array = Array2::from_diag(&diag);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368715,"byte_end":368756,"line_start":184,"line_end":184,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(array, arr2(&[[1, 0], [0, 2]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368761,"byte_end":368808,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368813,"byte_end":368820,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371422,"byte_end":371431,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<ArrayBase<S, D>>::from_elem","value":"pub fn from_elem<Sh>(Sh, A) -> Self where A: Clone, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with copies of `elem`, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with copies of `elem`, shape `shape`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370800,"byte_end":370857,"line_start":248,"line_end":248,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370862,"byte_end":370865,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370870,"byte_end":370943,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370948,"byte_end":370951,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370956,"byte_end":370963,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr3, ShapeBuilder};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370968,"byte_end":371013,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371018,"byte_end":371021,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 2, 2), 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371026,"byte_end":371070,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371075,"byte_end":371078,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371083,"byte_end":371095,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371100,"byte_end":371130,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371135,"byte_end":371166,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/                 [[1., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371171,"byte_end":371201,"line_start":260,"line_end":260,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371206,"byte_end":371238,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371243,"byte_end":371249,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[4, 2, 1]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371254,"byte_end":371293,"line_start":263,"line_end":263,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371298,"byte_end":371301,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_elem((2, 2, 2).f(), 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371306,"byte_end":371354,"line_start":265,"line_end":265,"column_start":5,"column_end":53}},{"value":"/ assert!(b.strides() == &[1, 2, 4]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371359,"byte_end":371398,"line_start":266,"line_end":266,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371403,"byte_end":371410,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371884,"byte_end":371889,"line_start":282,"line_end":282,"column_start":12,"column_end":17},"name":"zeros","qualname":"<ArrayBase<S, D>>::zeros","value":"pub fn zeros<Sh>(Sh) -> Self where A: Clone + Zero, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with zeros, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with zeros, shape `shape`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371740,"byte_end":371786,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371791,"byte_end":371794,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":371799,"byte_end":371872,"line_start":281,"line_end":281,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372185,"byte_end":372189,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"ones","qualname":"<ArrayBase<S, D>>::ones","value":"pub fn ones<Sh>(Sh) -> Self where A: Clone + One, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with ones, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with ones, shape `shape`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372042,"byte_end":372087,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372092,"byte_end":372095,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372100,"byte_end":372173,"line_start":292,"line_end":292,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372492,"byte_end":372499,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"default","qualname":"<ArrayBase<S, D>>::default","value":"pub fn default<Sh>(Sh) -> Self where A: Default, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with default values, shape `shape`","sig":null,"attributes":[{"value":"/ Create an array with default values, shape `shape`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372340,"byte_end":372394,"line_start":301,"line_end":301,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372399,"byte_end":372402,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372407,"byte_end":372480,"line_start":303,"line_end":303,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373106,"byte_end":373119,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"from_shape_fn","qualname":"<ArrayBase<S, D>>::from_shape_fn","value":"pub fn from_shape_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim = D>,\nF: FnMut(D::Pattern) -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372824,"byte_end":372884,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372889,"byte_end":372892,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ `f` is called with the index of the element to create; the elements are","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372897,"byte_end":372972,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":372977,"byte_end":373008,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373013,"byte_end":373016,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373021,"byte_end":373094,"line_start":320,"line_end":320,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374882,"byte_end":374896,"line_start":371,"line_end":371,"column_start":12,"column_end":26},"name":"from_shape_vec","qualname":"<ArrayBase<S, D>>::from_shape_vec","value":"pub fn from_shape_vec<Sh>(Sh, Vec<A>) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with the given shape from a vector. (No cloning of\n elements needed.)","sig":null,"attributes":[{"value":"/ Create an array with the given shape from a vector. (No cloning of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373714,"byte_end":373784,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ elements needed.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373789,"byte_end":373810,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373815,"byte_end":373818,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373823,"byte_end":373831,"line_start":341,"line_end":341,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373836,"byte_end":373839,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ For a contiguous c- or f-order shape, the following applies:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373844,"byte_end":373908,"line_start":343,"line_end":343,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373913,"byte_end":373916,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ **Errors** if `shape` does not correspond to the number of elements in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":373921,"byte_end":373995,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ `v` or if the shape/strides would result in overflowing `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374000,"byte_end":374068,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374073,"byte_end":374076,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374081,"byte_end":374089,"line_start":348,"line_end":348,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374094,"byte_end":374097,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ For custom strides, the following applies:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374102,"byte_end":374148,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374153,"byte_end":374156,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ **Errors** if strides and dimensions can point out of bounds of `v`, if","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374161,"byte_end":374236,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ strides allow multiple indices to point to the same element, or if the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374241,"byte_end":374315,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ shape/strides would result in overflowing `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374320,"byte_end":374374,"line_start":354,"line_end":354,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374379,"byte_end":374382,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374387,"byte_end":374394,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374399,"byte_end":374422,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ use ndarray::ShapeBuilder; // Needed for .strides() method","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374427,"byte_end":374489,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374494,"byte_end":374516,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374521,"byte_end":374524,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_shape_vec((2, 2), vec![1., 2., 3., 4.]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374529,"byte_end":374593,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/ assert!(a.is_ok());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374598,"byte_end":374621,"line_start":362,"line_end":362,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374626,"byte_end":374629,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_shape_vec((2, 2).strides((1, 2)),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374634,"byte_end":374691,"line_start":364,"line_end":364,"column_start":5,"column_end":62}},{"value":"/                               vec![1., 2., 3., 4.]).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374696,"byte_end":374761,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374766,"byte_end":374778,"line_start":366,"line_end":366,"column_start":5,"column_end":17}},{"value":"/     b == arr2(&[[1., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374783,"byte_end":374812,"line_start":367,"line_end":367,"column_start":5,"column_end":34}},{"value":"/                 [2., 4.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374817,"byte_end":374847,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374852,"byte_end":374858,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":374863,"byte_end":374870,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376667,"byte_end":376691,"line_start":414,"line_end":414,"column_start":19,"column_end":43},"name":"from_shape_vec_unchecked","qualname":"<ArrayBase<S, D>>::from_shape_vec_unchecked","value":"pub unsafe fn from_shape_vec_unchecked<Sh>(Sh, Vec<A>) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an array from a vector and interpret it according to the\n provided shape and strides. (No cloning of elements needed.)","sig":null,"attributes":[{"value":"/ Creates an array from a vector and interpret it according to the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375680,"byte_end":375748,"line_start":393,"line_end":393,"column_start":5,"column_end":73}},{"value":"/ provided shape and strides. (No cloning of elements needed.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375753,"byte_end":375817,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375822,"byte_end":375825,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the following conditions are met:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375830,"byte_end":375895,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375900,"byte_end":375903,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ 1. The ndim of `dim` and `strides` must be the same.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375908,"byte_end":375964,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375969,"byte_end":375972,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ 2. The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":375977,"byte_end":376050,"line_start":400,"line_end":400,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376055,"byte_end":376058,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ 3. For axes with length > 1, the stride must be nonnegative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376063,"byte_end":376127,"line_start":402,"line_end":402,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376132,"byte_end":376135,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ 4. If the array will be empty (any axes are zero-length), the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376140,"byte_end":376205,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/    difference between the least address and greatest address accessible","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376210,"byte_end":376285,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/    by moving along all axes must be ≤ `v.len()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376290,"byte_end":376344,"line_start":406,"line_end":406,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376349,"byte_end":376352,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/    If the array will not be empty, the difference between the least","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376357,"byte_end":376428,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/    address and greatest address accessible by moving along all axes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376433,"byte_end":376504,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/    must be < `v.len()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376509,"byte_end":376536,"line_start":410,"line_end":410,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376541,"byte_end":376544,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ 5. The strides must not allow any element to be referenced by two different","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376549,"byte_end":376628,"line_start":412,"line_end":412,"column_start":5,"column_end":84}},{"value":"/    indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":376633,"byte_end":376648,"line_start":413,"line_end":413,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379134,"byte_end":379147,"line_start":478,"line_end":478,"column_start":19,"column_end":32},"name":"uninitialized","qualname":"<ArrayBase<S, D>>::uninitialized","value":"pub unsafe fn uninitialized<Sh>(Sh) -> Self where A: Copy,\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377301,"byte_end":377363,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377368,"byte_end":377371,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377376,"byte_end":377449,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377454,"byte_end":377457,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377462,"byte_end":377476,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377481,"byte_end":377484,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Accessing uninitalized values is undefined behaviour. You must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377489,"byte_end":377555,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/ overwrite *all* the elements in the array after it is created; for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377560,"byte_end":377630,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ example using the methods `.fill()` or `.assign()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377635,"byte_end":377690,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377695,"byte_end":377698,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The contents of the array is indeterminate before initialization and it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377703,"byte_end":377778,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ is an error to perform operations that use the previous values. For","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377783,"byte_end":377854,"line_start":444,"line_end":444,"column_start":5,"column_end":76}},{"value":"/ example it would not be legal to use `a += 1.;` on such an array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377859,"byte_end":377928,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377933,"byte_end":377936,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This constructor is limited to elements where `A: Copy` (no destructors)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":377941,"byte_end":378017,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ to avoid users shooting themselves too hard in the foot; it is not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378022,"byte_end":378092,"line_start":448,"line_end":448,"column_start":5,"column_end":75}},{"value":"/ a problem to drop an array created with this method even before elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378097,"byte_end":378173,"line_start":449,"line_end":449,"column_start":5,"column_end":81}},{"value":"/ are initialized. (Note that constructors `from_shape_vec` and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378178,"byte_end":378243,"line_start":450,"line_end":450,"column_start":5,"column_end":70}},{"value":"/ `from_shape_vec_unchecked` allow the user yet more control).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378248,"byte_end":378312,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378317,"byte_end":378320,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378325,"byte_end":378341,"line_start":453,"line_end":453,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378346,"byte_end":378349,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378354,"byte_end":378361,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378366,"byte_end":378391,"line_start":456,"line_end":456,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378396,"byte_end":378399,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use ndarray::{s, Array2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378404,"byte_end":378433,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378438,"byte_end":378441,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ // Example Task: Let's create a column shifted copy of a in b","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378446,"byte_end":378511,"line_start":460,"line_end":460,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378516,"byte_end":378519,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ fn shift_by_two(a: &Array2<f32>) -> Array2<f32> {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378524,"byte_end":378577,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/     let mut b = unsafe { Array2::uninitialized(a.dim()) };","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378582,"byte_end":378644,"line_start":463,"line_end":463,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378649,"byte_end":378652,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     // two first columns in b are two last in a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378657,"byte_end":378708,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/     // rest of columns in b are the initial columns in a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378713,"byte_end":378773,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"/     b.slice_mut(s![.., ..2]).assign(&a.slice(s![.., -2..]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378778,"byte_end":378842,"line_start":467,"line_end":467,"column_start":5,"column_end":69}},{"value":"/     b.slice_mut(s![.., 2..]).assign(&a.slice(s![.., ..-2]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378847,"byte_end":378911,"line_start":468,"line_end":468,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378916,"byte_end":378919,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/     // `b` is safe to use with all operations at this point","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378924,"byte_end":378987,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/     b","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":378992,"byte_end":379001,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379006,"byte_end":379011,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379016,"byte_end":379019,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379024,"byte_end":379041,"line_start":474,"line_end":474,"column_start":5,"column_end":22}},{"value":"/ #   shift_by_two(&Array2::zeros((8, 8)));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379046,"byte_end":379091,"line_start":475,"line_end":475,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379096,"byte_end":379103,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":379108,"byte_end":379115,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380694,"byte_end":380697,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayBase<S, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of elements in the array.\n","sig":null,"attributes":[{"value":"/ Return the total number of elements in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380629,"byte_end":380682,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380990,"byte_end":380996,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"len_of","qualname":"<ArrayBase<S, D>>::len_of","value":"pub fn len_of(&Self, Axis) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of `axis`.","sig":null,"attributes":[{"value":"/ Return the length of `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380751,"byte_end":380783,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380788,"byte_end":380791,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380796,"byte_end":380869,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380874,"byte_end":380919,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380924,"byte_end":380927,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380932,"byte_end":380978,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381126,"byte_end":381134,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArrayBase<S, D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the array has any elements\n","sig":null,"attributes":[{"value":"/ Return whether the array has any elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381069,"byte_end":381114,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381254,"byte_end":381258,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"ndim","qualname":"<ArrayBase<S, D>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of dimensions (axes) in the array\n","sig":null,"attributes":[{"value":"/ Return the number of dimensions (axes) in the array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381187,"byte_end":381242,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381484,"byte_end":381487,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"dim","qualname":"<ArrayBase<S, D>>::dim","value":"pub fn dim(&Self) -> D::Pattern","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array in its “pattern” form,\n an integer in the one-dimensional case, tuple in the n-dimensional cases\n and so on.\n","sig":null,"attributes":[{"value":"/ Return the shape of the array in its “pattern” form,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381312,"byte_end":381372,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/ an integer in the one-dimensional case, tuple in the n-dimensional cases","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381377,"byte_end":381453,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ and so on.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381458,"byte_end":381472,"line_start":67,"line_end":67,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382069,"byte_end":382076,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<ArrayBase<S, D>>::raw_dim","value":"pub fn raw_dim(&Self) -> D","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as it stored in the array.","sig":null,"attributes":[{"value":"/ Return the shape of the array as it stored in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381562,"byte_end":381622,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381627,"byte_end":381630,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful for passing to other `ArrayBase`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381635,"byte_end":381696,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ functions, such as when creating another array of the same","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381701,"byte_end":381763,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ shape and dimensionality.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381768,"byte_end":381797,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381802,"byte_end":381805,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381810,"byte_end":381817,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381822,"byte_end":381845,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381850,"byte_end":381853,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 3), 5.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381858,"byte_end":381899,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381904,"byte_end":381907,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create an array of zeros that's the same shape and dimensionality as `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381912,"byte_end":381992,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/ let b = Array::<f64, _>::zeros(a.raw_dim());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":381997,"byte_end":382045,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382050,"byte_end":382057,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383136,"byte_end":383141,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"shape","qualname":"<ArrayBase<S, D>>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as a slice.","sig":null,"attributes":[{"value":"/ Return the shape of the array as a slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382127,"byte_end":382172,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382177,"byte_end":382180,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that you probably don't want to use this to create an array of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382185,"byte_end":382260,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ same shape as another array because creating an array with e.g.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382265,"byte_end":382332,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/ [`Array::zeros()`](ArrayBase::zeros) using a shape of type `&[usize]`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382337,"byte_end":382410,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/ results in a dynamic-dimensional array. If you want to create an array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382415,"byte_end":382489,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ that has the same shape and dimensionality as another array, use","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382494,"byte_end":382562,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ [`.raw_dim()`](ArrayBase::raw_dim) instead:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382567,"byte_end":382614,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382619,"byte_end":382622,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382627,"byte_end":382638,"line_start":99,"line_end":99,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, Array2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382643,"byte_end":382676,"line_start":100,"line_end":100,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382681,"byte_end":382684,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let a = Array2::<i32>::zeros((3, 4));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382689,"byte_end":382730,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ let shape = a.shape();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382735,"byte_end":382761,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(shape, &[3, 4]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382766,"byte_end":382797,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382802,"byte_end":382805,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // Since `a.shape()` returned `&[usize]`, we get an `ArrayD` instance:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382810,"byte_end":382884,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ let b = Array::zeros(shape);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382889,"byte_end":382921,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.clone().into_dyn(), b);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382926,"byte_end":382966,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382971,"byte_end":382974,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // To get the same dimension type, use `.raw_dim()` instead:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":382979,"byte_end":383043,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ let c = Array::zeros(a.raw_dim());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383048,"byte_end":383086,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a, c);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383091,"byte_end":383112,"line_start":112,"line_end":112,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383117,"byte_end":383124,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383258,"byte_end":383265,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"strides","qualname":"<ArrayBase<S, D>>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Return the strides of the array as a slice.\n","sig":null,"attributes":[{"value":"/ Return the strides of the array as a slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383199,"byte_end":383246,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383699,"byte_end":383708,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"stride_of","qualname":"<ArrayBase<S, D>>::stride_of","value":"pub fn stride_of(&Self, Axis) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the stride of `axis`.","sig":null,"attributes":[{"value":"/ Return the stride of `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383460,"byte_end":383492,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383497,"byte_end":383500,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383505,"byte_end":383578,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383583,"byte_end":383628,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383633,"byte_end":383636,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383641,"byte_end":383687,"line_start":130,"line_end":130,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383892,"byte_end":383896,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"view","qualname":"<ArrayBase<S, D>>::view","value":"pub fn view(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a read-only view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-only view of the array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":383840,"byte_end":383880,"line_start":136,"line_end":136,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384169,"byte_end":384177,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"view_mut","qualname":"<ArrayBase<S, D>>::view_mut","value":"pub fn view_mut(&mut Self) -> ArrayViewMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-write view of the array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384116,"byte_end":384157,"line_start":145,"line_end":145,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385688,"byte_end":385696,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<ArrayBase<S, D>>::to_owned","value":"pub fn to_owned(&Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an uniquely owned copy of the array.","sig":null,"attributes":[{"value":"/ Return an uniquely owned copy of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384389,"byte_end":384436,"line_start":154,"line_end":154,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384441,"byte_end":384444,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ If the input array is contiguous and its strides are positive, then the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384449,"byte_end":384524,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ output array will have the same memory layout. Otherwise, the layout of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384529,"byte_end":384604,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ the output array is unspecified. If you need a particular layout, you","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384609,"byte_end":384682,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ can allocate a new array with the desired memory layout and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384687,"byte_end":384750,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ [`.assign()`](#method.assign) the data. Alternatively, you can collect","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384755,"byte_end":384829,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ an iterator, like this for a result in standard layout:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384834,"byte_end":384893,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384898,"byte_end":384901,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384906,"byte_end":384913,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384918,"byte_end":384948,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2).f(), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":384953,"byte_end":385030,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ # let owned = {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385035,"byte_end":385054,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim(), arr.iter().cloned().collect()).unwrap()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385059,"byte_end":385139,"line_start":167,"line_end":167,"column_start":5,"column_end":85}},{"value":"/ # };","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385144,"byte_end":385152,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.is_standard_layout());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385157,"byte_end":385199,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385204,"byte_end":385233,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385238,"byte_end":385245,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385250,"byte_end":385253,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ or this for a result in column-major (Fortran) layout:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385258,"byte_end":385316,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385321,"byte_end":385324,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385329,"byte_end":385336,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385341,"byte_end":385371,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385376,"byte_end":385449,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/ # let owned = {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385454,"byte_end":385473,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim().f(), arr.t().iter().cloned().collect()).unwrap()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385478,"byte_end":385566,"line_start":179,"line_end":179,"column_start":5,"column_end":93}},{"value":"/ # };","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385571,"byte_end":385579,"line_start":180,"line_end":180,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.t().is_standard_layout());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385584,"byte_end":385630,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385635,"byte_end":385664,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":385669,"byte_end":385676,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386170,"byte_end":386179,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"to_shared","qualname":"<ArrayBase<S, D>>::to_shared","value":"pub fn to_shared(&Self) -> ArcArray<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386106,"byte_end":386158,"line_start":201,"line_end":201,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386476,"byte_end":386486,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<ArrayBase<S, D>>::into_owned","value":"pub fn into_owned(Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a uniquely owned array, cloning the array elements\n if necessary.\n","sig":null,"attributes":[{"value":"/ Turn the array into a uniquely owned array, cloning the array elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386368,"byte_end":386442,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386447,"byte_end":386464,"line_start":212,"line_end":212,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386704,"byte_end":386715,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<ArrayBase<S, D>>::into_shared","value":"pub fn into_shared(Self) -> ArcArray<A, D> where S: DataOwned","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a shared ownership (copy on write) array,\n without any copying.\n","sig":null,"attributes":[{"value":"/ Turn the array into a shared ownership (copy on write) array,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386598,"byte_end":386663,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ without any copying.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386668,"byte_end":386692,"line_start":222,"line_end":222,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387074,"byte_end":387079,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"first","qualname":"<ArrayBase<S, D>>::first","value":"pub fn first(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first element of the array, or `None` if it\n is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the first element of the array, or `None` if it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":386970,"byte_end":387044,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ is empty.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387049,"byte_end":387062,"line_start":237,"line_end":237,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387375,"byte_end":387384,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ArrayBase<S, D>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first element of the array, or\n `None` if it is empty.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first element of the array, or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387263,"byte_end":387332,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ `None` if it is empty.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387337,"byte_end":387363,"line_start":250,"line_end":250,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387853,"byte_end":387857,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArrayBase<S, D>>::iter","value":"pub fn iter(&Self) -> Iter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of references to the elements of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387587,"byte_end":387653,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387658,"byte_end":387661,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387666,"byte_end":387733,"line_start":264,"line_end":264,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387738,"byte_end":387794,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387799,"byte_end":387802,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&A`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":387807,"byte_end":387841,"line_start":267,"line_end":267,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388289,"byte_end":388297,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArrayBase<S, D>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of mutable references to the elements of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388011,"byte_end":388085,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388090,"byte_end":388093,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388098,"byte_end":388165,"line_start":278,"line_end":278,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388170,"byte_end":388226,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388231,"byte_end":388234,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&mut A`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388239,"byte_end":388277,"line_start":281,"line_end":281,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388765,"byte_end":388777,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"indexed_iter","qualname":"<ArrayBase<S, D>>::indexed_iter","value":"pub fn indexed_iter(&Self) -> IndexedIter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and references to the elements of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388414,"byte_end":388492,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388497,"byte_end":388500,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388505,"byte_end":388572,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388577,"byte_end":388633,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388638,"byte_end":388641,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &A)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388646,"byte_end":388694,"line_start":294,"line_end":294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388699,"byte_end":388702,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ See also [`Zip::indexed`](struct.Zip.html)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388707,"byte_end":388753,"line_start":296,"line_end":296,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389217,"byte_end":389233,"line_start":310,"line_end":310,"column_start":12,"column_end":28},"name":"indexed_iter_mut","qualname":"<ArrayBase<S, D>>::indexed_iter_mut","value":"pub fn indexed_iter_mut(&mut Self) -> IndexedIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and mutable references to the elements of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":388913,"byte_end":388999,"line_start":304,"line_end":304,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389004,"byte_end":389007,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389012,"byte_end":389079,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389084,"byte_end":389140,"line_start":307,"line_end":307,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389145,"byte_end":389148,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &mut A)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389153,"byte_end":389205,"line_start":309,"line_end":309,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389850,"byte_end":389855,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBase<S, D>>::slice","value":"pub fn slice<Do>(&Self, &SliceInfo<D::SliceArg, Do>) -> ArrayView<, A, Do>\nwhere Do: Dimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389386,"byte_end":389424,"line_start":317,"line_end":317,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389429,"byte_end":389432,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389437,"byte_end":389490,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389495,"byte_end":389542,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389547,"byte_end":389550,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389555,"byte_end":389595,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389600,"byte_end":389665,"line_start":323,"line_end":323,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389670,"byte_end":389673,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389678,"byte_end":389747,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":389752,"byte_end":389838,"line_start":326,"line_end":326,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390505,"byte_end":390514,"line_start":345,"line_end":345,"column_start":12,"column_end":21},"name":"slice_mut","qualname":"<ArrayBase<S, D>>::slice_mut","value":"pub fn slice_mut<Do>(&mut Self, &SliceInfo<D::SliceArg, Do>)\n-> ArrayViewMut<, A, Do> where Do: Dimension, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced read-write view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced read-write view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390030,"byte_end":390079,"line_start":335,"line_end":335,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390084,"byte_end":390087,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390092,"byte_end":390145,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390150,"byte_end":390197,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390202,"byte_end":390205,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390210,"byte_end":390250,"line_start":340,"line_end":340,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390255,"byte_end":390320,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390325,"byte_end":390328,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390333,"byte_end":390402,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390407,"byte_end":390493,"line_start":344,"line_end":344,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":391193,"byte_end":391203,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"slice_move","qualname":"<ArrayBase<S, D>>::slice_move","value":"pub fn slice_move<Do>(Self, &SliceInfo<D::SliceArg, Do>) -> ArrayBase<S, Do>\nwhere Do: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Slice the array, possibly changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array, possibly changing the number of dimensions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390703,"byte_end":390767,"line_start":353,"line_end":353,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390772,"byte_end":390775,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390780,"byte_end":390833,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ See also [`SliceInfo`] and [`D::SliceArg`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390838,"byte_end":390885,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390890,"byte_end":390893,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`SliceInfo`]: struct.SliceInfo.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390898,"byte_end":390938,"line_start":358,"line_end":358,"column_start":5,"column_end":45}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":390943,"byte_end":391008,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":391013,"byte_end":391016,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":391021,"byte_end":391090,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":391095,"byte_end":391181,"line_start":362,"line_end":362,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":393027,"byte_end":393041,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"slice_collapse","qualname":"<ArrayBase<S, D>>::slice_collapse","value":"pub fn slice_collapse(&mut Self, &D::SliceArg)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place without changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array in place without changing the number of dimensions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392321,"byte_end":392392,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392397,"byte_end":392400,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that [`&SliceInfo`](struct.SliceInfo.html) (produced by the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392405,"byte_end":392473,"line_start":397,"line_end":397,"column_start":5,"column_end":73}},{"value":"/ [`s![]`](macro.s!.html) macro) will usually coerce into `&D::SliceArg`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392478,"byte_end":392552,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ automatically, but in some cases (e.g. if `D` is `IxDyn`), you may need","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392557,"byte_end":392632,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ to call `.as_ref()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392637,"byte_end":392661,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392666,"byte_end":392669,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392674,"byte_end":392727,"line_start":402,"line_end":402,"column_start":5,"column_end":58}},{"value":"/ See also [`D::SliceArg`].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392732,"byte_end":392761,"line_start":403,"line_end":403,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392766,"byte_end":392769,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ [`D::SliceArg`]: trait.Dimension.html#associatedtype.SliceArg","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392774,"byte_end":392839,"line_start":405,"line_end":405,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392844,"byte_end":392847,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392852,"byte_end":392921,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `indices` does not match the number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":392926,"byte_end":393015,"line_start":408,"line_end":408,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394042,"byte_end":394055,"line_start":431,"line_end":431,"column_start":12,"column_end":25},"name":"slice_inplace","qualname":"<ArrayBase<S, D>>::slice_inplace","value":"pub fn slice_inplace(&mut Self, &D::SliceArg)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place without changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array in place without changing the number of dimensions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":393709,"byte_end":393780,"line_start":426,"line_end":426,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":393785,"byte_end":393788,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":393793,"byte_end":393862,"line_start":428,"line_end":428,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `indices` does not match the number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":393867,"byte_end":393956,"line_start":429,"line_end":429,"column_start":5,"column_end":94}},{"value":"deprecated(note = \"renamed to `slice_collapse`\", since = \"0.12.1\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":393961,"byte_end":394030,"line_start":430,"line_end":430,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394345,"byte_end":394355,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"slice_axis","qualname":"<ArrayBase<S, D>>::slice_axis","value":"pub fn slice_axis(&Self, Axis, Slice) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a view of the array, sliced along the specified axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394140,"byte_end":394204,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394209,"byte_end":394212,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394217,"byte_end":394286,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394291,"byte_end":394333,"line_start":438,"line_end":438,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394768,"byte_end":394782,"line_start":452,"line_end":452,"column_start":12,"column_end":26},"name":"slice_axis_mut","qualname":"<ArrayBase<S, D>>::slice_axis_mut","value":"pub fn slice_axis_mut(&mut Self, Axis, Slice) -> ArrayViewMut<, A, D> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of the array, sliced along the specified axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394555,"byte_end":394627,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394632,"byte_end":394635,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394640,"byte_end":394709,"line_start":450,"line_end":450,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":394714,"byte_end":394756,"line_start":451,"line_end":451,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395203,"byte_end":395221,"line_start":465,"line_end":465,"column_start":12,"column_end":30},"name":"slice_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_axis_inplace","value":"pub fn slice_axis_inplace(&mut Self, Axis, Slice)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place along the specified axis.","sig":null,"attributes":[{"value":"/ Slice the array in place along the specified axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395008,"byte_end":395062,"line_start":461,"line_end":461,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395067,"byte_end":395070,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395075,"byte_end":395144,"line_start":463,"line_end":463,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395149,"byte_end":395191,"line_start":464,"line_end":464,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396068,"byte_end":396071,"line_start":495,"line_end":495,"column_start":12,"column_end":15},"name":"get","qualname":"<ArrayBase<S, D>>::get","value":"pub fn get<I>(&Self, I) -> Option<&A> where I: NdIndex<D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the element at `index`, or return `None`\n if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Return a reference to the element at `index`, or return `None`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395573,"byte_end":395639,"line_start":477,"line_end":477,"column_start":5,"column_end":71}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395644,"byte_end":395678,"line_start":478,"line_end":478,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395683,"byte_end":395686,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Arrays also support indexing syntax: `array[index]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395691,"byte_end":395747,"line_start":480,"line_end":480,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395752,"byte_end":395755,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395760,"byte_end":395767,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395772,"byte_end":395794,"line_start":483,"line_end":483,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395799,"byte_end":395802,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395807,"byte_end":395835,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395840,"byte_end":395870,"line_start":486,"line_end":486,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395875,"byte_end":395878,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395883,"byte_end":395895,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/     a.get((0, 1)) == Some(&2.) &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395900,"byte_end":395937,"line_start":489,"line_end":489,"column_start":5,"column_end":42}},{"value":"/     a.get((0, 2)) == None &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395942,"byte_end":395974,"line_start":490,"line_end":490,"column_start":5,"column_end":37}},{"value":"/     a[(0, 1)] == 2. &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":395979,"byte_end":396005,"line_start":491,"line_end":491,"column_start":5,"column_end":31}},{"value":"/     a[[0, 1]] == 2.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396010,"byte_end":396033,"line_start":492,"line_end":492,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396038,"byte_end":396044,"line_start":493,"line_end":493,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396049,"byte_end":396056,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396644,"byte_end":396651,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ArrayBase<S, D>>::get_mut","value":"pub fn get_mut<I>(&mut Self, I) -> Option<&mut A> where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element at `index`, or return `None`\n if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element at `index`, or return `None`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396519,"byte_end":396593,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":396598,"byte_end":396632,"line_start":514,"line_end":514,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397452,"byte_end":397456,"line_start":542,"line_end":542,"column_start":19,"column_end":23},"name":"uget","qualname":"<ArrayBase<S, D>>::uget","value":"pub unsafe fn uget<I>(&Self, I) -> &A where S: Data, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397244,"byte_end":397283,"line_start":536,"line_end":536,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397288,"byte_end":397291,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Return a reference to the element at `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397296,"byte_end":397345,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397350,"byte_end":397353,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397358,"byte_end":397419,"line_start":540,"line_end":540,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397424,"byte_end":397433,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398006,"byte_end":398014,"line_start":559,"line_end":559,"column_start":19,"column_end":27},"name":"uget_mut","qualname":"<ArrayBase<S, D>>::uget_mut","value":"pub unsafe fn uget_mut<I>(&mut Self, I) -> &mut A where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397701,"byte_end":397740,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397745,"byte_end":397748,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Return a mutable reference to the element at `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397753,"byte_end":397810,"line_start":554,"line_end":554,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397815,"byte_end":397818,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ **Note:** Only unchecked for non-debug builds of ndarray.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397823,"byte_end":397888,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ **Note:** (For `ArcArray`) The array must be uniquely held when mutating it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397893,"byte_end":397973,"line_start":557,"line_end":557,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":397978,"byte_end":397987,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398480,"byte_end":398484,"line_start":575,"line_end":575,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArrayBase<S, D>>::swap","value":"pub fn swap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements at indices `index1` and `index2`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398320,"byte_end":398371,"line_start":570,"line_end":570,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398376,"byte_end":398379,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398384,"byte_end":398409,"line_start":572,"line_end":572,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398414,"byte_end":398417,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an index is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398422,"byte_end":398468,"line_start":574,"line_end":574,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399015,"byte_end":399020,"line_start":593,"line_end":593,"column_start":19,"column_end":24},"name":"uswap","qualname":"<ArrayBase<S, D>>::uswap","value":"pub unsafe fn uswap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements *unchecked* at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements *unchecked* at indices `index1` and `index2`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398749,"byte_end":398812,"line_start":587,"line_end":587,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398817,"byte_end":398820,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398825,"byte_end":398850,"line_start":589,"line_end":589,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398855,"byte_end":398858,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398863,"byte_end":398928,"line_start":591,"line_end":591,"column_start":5,"column_end":70}},{"value":"/ **Note:** (For `ArcArray`) The array must be uniquely held.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":398933,"byte_end":398996,"line_start":592,"line_end":592,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400565,"byte_end":400575,"line_start":640,"line_end":640,"column_start":12,"column_end":22},"name":"index_axis","qualname":"<ArrayBase<S, D>>::index_axis","value":"pub fn index_axis(&Self, Axis, usize) -> ArrayView<, A, D::Smaller> where\nS: Data, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a view restricted to `index` along the axis, with the axis\n removed.","sig":null,"attributes":[{"value":"/ Returns a view restricted to `index` along the axis, with the axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399781,"byte_end":399851,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/ removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399856,"byte_end":399868,"line_start":620,"line_end":620,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399873,"byte_end":399876,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399881,"byte_end":399936,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399941,"byte_end":399944,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":399949,"byte_end":400002,"line_start":624,"line_end":624,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400007,"byte_end":400010,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400015,"byte_end":400022,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayView, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400027,"byte_end":400068,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400073,"byte_end":400076,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2. ],    // ... axis 0, row 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400081,"byte_end":400134,"line_start":629,"line_end":629,"column_start":5,"column_end":58}},{"value":"/                [3., 4. ],    // --- axis 0, row 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400139,"byte_end":400192,"line_start":630,"line_end":630,"column_start":5,"column_end":58}},{"value":"/                [5., 6. ]]);  // ... axis 0, row 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400197,"byte_end":400250,"line_start":631,"line_end":631,"column_start":5,"column_end":58}},{"value":"/ //               .   \\","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400255,"byte_end":400281,"line_start":632,"line_end":632,"column_start":5,"column_end":31}},{"value":"/ //                .   axis 1, column 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400286,"byte_end":400328,"line_start":633,"line_end":633,"column_start":5,"column_end":47}},{"value":"/ //                 axis 1, column 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400333,"byte_end":400372,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400377,"byte_end":400389,"line_start":635,"line_end":635,"column_start":5,"column_end":17}},{"value":"/     a.index_axis(Axis(0), 1) == ArrayView::from(&[3., 4.]) &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400394,"byte_end":400459,"line_start":636,"line_end":636,"column_start":5,"column_end":70}},{"value":"/     a.index_axis(Axis(1), 1) == ArrayView::from(&[2., 4., 6.])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400464,"byte_end":400530,"line_start":637,"line_end":637,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400535,"byte_end":400541,"line_start":638,"line_end":638,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400546,"byte_end":400553,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401452,"byte_end":401466,"line_start":672,"line_end":672,"column_start":12,"column_end":26},"name":"index_axis_mut","qualname":"<ArrayBase<S, D>>::index_axis_mut","value":"pub fn index_axis_mut(&mut Self, Axis, usize) -> ArrayViewMut<, A, D::Smaller>\nwhere S: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view restricted to `index` along the axis, with the\n axis removed.","sig":null,"attributes":[{"value":"/ Returns a mutable view restricted to `index` along the axis, with the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400757,"byte_end":400830,"line_start":648,"line_end":648,"column_start":5,"column_end":78}},{"value":"/ axis removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400835,"byte_end":400852,"line_start":649,"line_end":649,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400857,"byte_end":400860,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400865,"byte_end":400918,"line_start":651,"line_end":651,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400923,"byte_end":400926,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400931,"byte_end":400938,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, aview2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400943,"byte_end":400981,"line_start":654,"line_end":654,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400986,"byte_end":400989,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2. ],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":400994,"byte_end":401027,"line_start":656,"line_end":656,"column_start":5,"column_end":38}},{"value":"/                    [3., 4. ]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401032,"byte_end":401067,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/ //                   .   \\","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401072,"byte_end":401102,"line_start":658,"line_end":658,"column_start":5,"column_end":35}},{"value":"/ //                    .   axis 1, column 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401107,"byte_end":401153,"line_start":659,"line_end":659,"column_start":5,"column_end":51}},{"value":"/ //                     axis 1, column 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401158,"byte_end":401201,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401206,"byte_end":401209,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401214,"byte_end":401219,"line_start":662,"line_end":662,"column_start":5,"column_end":10}},{"value":"/     let mut column1 = a.index_axis_mut(Axis(1), 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401224,"byte_end":401279,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/     column1 += 10.;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401284,"byte_end":401307,"line_start":664,"line_end":664,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401312,"byte_end":401317,"line_start":665,"line_end":665,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401322,"byte_end":401325,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401330,"byte_end":401342,"line_start":667,"line_end":667,"column_start":5,"column_end":17}},{"value":"/     a == aview2(&[[1., 12.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401347,"byte_end":401379,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/                   [3., 14.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401384,"byte_end":401417,"line_start":669,"line_end":669,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401422,"byte_end":401428,"line_start":670,"line_end":670,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401433,"byte_end":401440,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401921,"byte_end":401936,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"index_axis_move","qualname":"<ArrayBase<S, D>>::index_axis_move","value":"pub fn index_axis_move(Self, Axis, usize) -> ArrayBase<S, D::Smaller> where\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401662,"byte_end":401733,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401738,"byte_end":401741,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ See [`.index_axis()`](#method.index_axis) and [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401746,"byte_end":401843,"line_start":682,"line_end":682,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401848,"byte_end":401851,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":401856,"byte_end":401909,"line_start":684,"line_end":684,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402466,"byte_end":402479,"line_start":703,"line_end":703,"column_start":12,"column_end":25},"name":"collapse_axis","qualname":"<ArrayBase<S, D>>::collapse_axis","value":"pub fn collapse_axis(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Selects `index` along the axis, collapsing the axis into length one.","sig":null,"attributes":[{"value":"/ Selects `index` along the axis, collapsing the axis into length one.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402316,"byte_end":402388,"line_start":700,"line_end":700,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402393,"byte_end":402396,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402401,"byte_end":402454,"line_start":702,"line_end":702,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402979,"byte_end":402986,"line_start":714,"line_end":714,"column_start":12,"column_end":19},"name":"subview","qualname":"<ArrayBase<S, D>>::subview","value":"pub fn subview(&Self, Axis, Ix) -> ArrayView<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select the subview `index` and return a\n view with that axis removed.","sig":null,"attributes":[{"value":"/ Along `axis`, select the subview `index` and return a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402737,"byte_end":402794,"line_start":709,"line_end":709,"column_start":5,"column_end":62}},{"value":"/ view with that axis removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402799,"byte_end":402831,"line_start":710,"line_end":710,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402836,"byte_end":402839,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402844,"byte_end":402897,"line_start":712,"line_end":712,"column_start":5,"column_end":58}},{"value":"deprecated(note = \"renamed to `index_axis`\", since = \"0.12.1\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":402902,"byte_end":402967,"line_start":713,"line_end":713,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403409,"byte_end":403420,"line_start":727,"line_end":727,"column_start":12,"column_end":23},"name":"subview_mut","qualname":"<ArrayBase<S, D>>::subview_mut","value":"pub fn subview_mut(&mut Self, Axis, Ix) -> ArrayViewMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select the subview `index` and return a read-write view\n with the axis removed.","sig":null,"attributes":[{"value":"/ Along `axis`, select the subview `index` and return a read-write view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403153,"byte_end":403226,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ with the axis removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403231,"byte_end":403257,"line_start":723,"line_end":723,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403262,"byte_end":403265,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403270,"byte_end":403323,"line_start":725,"line_end":725,"column_start":5,"column_end":58}},{"value":"deprecated(note = \"renamed to `index_axis_mut`\", since = \"0.12.1\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403328,"byte_end":403397,"line_start":726,"line_end":726,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403861,"byte_end":403876,"line_start":740,"line_end":740,"column_start":12,"column_end":27},"name":"subview_inplace","qualname":"<ArrayBase<S, D>>::subview_inplace","value":"pub fn subview_inplace(&mut Self, Axis, Ix)","parent":null,"children":[],"decl_id":null,"docs":" Collapse dimension `axis` into length one,\n and select the subview of `index` along that axis.","sig":null,"attributes":[{"value":"/ Collapse dimension `axis` into length one,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403601,"byte_end":403647,"line_start":735,"line_end":735,"column_start":5,"column_end":51}},{"value":"/ and select the subview of `index` along that axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403652,"byte_end":403706,"line_start":736,"line_end":736,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403711,"byte_end":403714,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is past the length of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403719,"byte_end":403776,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"deprecated(note = \"renamed to `collapse_axis`\", since = \"0.12.1\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403781,"byte_end":403849,"line_start":739,"line_end":739,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404145,"byte_end":404157,"line_start":747,"line_end":747,"column_start":12,"column_end":24},"name":"into_subview","qualname":"<ArrayBase<S, D>>::into_subview","value":"pub fn into_subview(Self, Axis, Ix) -> ArrayBase<S, D::Smaller> where\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select the subview `index` and return `self`\n with that axis removed.\n","sig":null,"attributes":[{"value":"/ Along `axis`, select the subview `index` and return `self`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":403964,"byte_end":404026,"line_start":744,"line_end":744,"column_start":5,"column_end":67}},{"value":"/ with that axis removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404031,"byte_end":404058,"line_start":745,"line_end":745,"column_start":5,"column_end":32}},{"value":"deprecated(note = \"renamed to `index_axis_move`\", since = \"0.12.1\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404063,"byte_end":404133,"line_start":746,"line_end":746,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404954,"byte_end":404960,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"select","qualname":"<ArrayBase<S, D>>::select","value":"pub fn select(&Self, Axis, &[Ix]) -> Array<A, D> where A: Copy, S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.","sig":null,"attributes":[{"value":"/ Along `axis`, select arbitrary subviews corresponding to `indices`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404307,"byte_end":404377,"line_start":754,"line_end":754,"column_start":5,"column_end":75}},{"value":"/ and and copy them into a new array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404382,"byte_end":404421,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404426,"byte_end":404429,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or an element of `indices` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404434,"byte_end":404503,"line_start":757,"line_end":757,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404508,"byte_end":404511,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404516,"byte_end":404523,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404528,"byte_end":404558,"line_start":760,"line_end":760,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404563,"byte_end":404566,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let x = arr2(&[[0., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404571,"byte_end":404599,"line_start":762,"line_end":762,"column_start":5,"column_end":33}},{"value":"/                [2., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404604,"byte_end":404632,"line_start":763,"line_end":763,"column_start":5,"column_end":33}},{"value":"/                [4., 5.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404637,"byte_end":404665,"line_start":764,"line_end":764,"column_start":5,"column_end":33}},{"value":"/                [6., 7.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404670,"byte_end":404698,"line_start":765,"line_end":765,"column_start":5,"column_end":33}},{"value":"/                [8., 9.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404703,"byte_end":404733,"line_start":766,"line_end":766,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404738,"byte_end":404741,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let r = x.select(Axis(0), &[0, 4, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404746,"byte_end":404788,"line_start":768,"line_end":768,"column_start":5,"column_end":47}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404793,"byte_end":404805,"line_start":769,"line_end":769,"column_start":5,"column_end":17}},{"value":"/         r == arr2(&[[0., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404810,"byte_end":404843,"line_start":770,"line_end":770,"column_start":5,"column_end":38}},{"value":"/                     [8., 9.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404848,"byte_end":404881,"line_start":771,"line_end":771,"column_start":5,"column_end":38}},{"value":"/                     [6., 7.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404886,"byte_end":404920,"line_start":772,"line_end":772,"column_start":5,"column_end":39}},{"value":"/);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404925,"byte_end":404930,"line_start":773,"line_end":773,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":404935,"byte_end":404942,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406548,"byte_end":406555,"line_start":820,"line_end":820,"column_start":12,"column_end":19},"name":"genrows","qualname":"<ArrayBase<S, D>>::genrows","value":"pub fn genrows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array. For a 2D array these are the regular rows.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405498,"byte_end":405570,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ rows of the array. For a 2D array these are the regular rows.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405575,"byte_end":405640,"line_start":795,"line_end":795,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405645,"byte_end":405648,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(n - 1))` where *n* is `self.ndim()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405653,"byte_end":405728,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405733,"byte_end":405736,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405741,"byte_end":405810,"line_start":799,"line_end":799,"column_start":5,"column_end":69}},{"value":"/ it has *a* × *b* × *c* × ... × *l* rows each of length *m*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405815,"byte_end":405882,"line_start":800,"line_end":800,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405887,"byte_end":405890,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each row is 3 elements long","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405895,"byte_end":405963,"line_start":802,"line_end":802,"column_start":5,"column_end":71}},{"value":"/ and there are 2 × 2 = 4 rows in total.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":405968,"byte_end":406011,"line_start":803,"line_end":803,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406016,"byte_end":406019,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406024,"byte_end":406080,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406085,"byte_end":406088,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406093,"byte_end":406100,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, Axis, arr1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406105,"byte_end":406141,"line_start":808,"line_end":808,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406146,"byte_end":406149,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],    // -- row 0, 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406154,"byte_end":406205,"line_start":810,"line_end":810,"column_start":5,"column_end":56}},{"value":"/                 [ 3,  4,  5]],   // -- row 0, 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406210,"byte_end":406261,"line_start":811,"line_end":811,"column_start":5,"column_end":56}},{"value":"/                [[ 6,  7,  8],    // -- row 1, 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406266,"byte_end":406317,"line_start":812,"line_end":812,"column_start":5,"column_end":56}},{"value":"/                 [ 9, 10, 11]]]); // -- row 1, 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406322,"byte_end":406373,"line_start":813,"line_end":813,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406378,"byte_end":406381,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ // `genrows` will yield the four generalized rows of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406386,"byte_end":406453,"line_start":815,"line_end":815,"column_start":5,"column_end":72}},{"value":"/ for row in a.genrows() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406458,"byte_end":406486,"line_start":816,"line_end":816,"column_start":5,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406491,"byte_end":406514,"line_start":817,"line_end":817,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406519,"byte_end":406524,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406529,"byte_end":406536,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406985,"byte_end":406996,"line_start":835,"line_end":835,"column_start":12,"column_end":23},"name":"genrows_mut","qualname":"<ArrayBase<S, D>>::genrows_mut","value":"pub fn genrows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406763,"byte_end":406835,"line_start":831,"line_end":831,"column_start":5,"column_end":77}},{"value":"/ rows of the array and yields mutable array views.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406840,"byte_end":406893,"line_start":832,"line_end":832,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406898,"byte_end":406901,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":406906,"byte_end":406973,"line_start":834,"line_end":834,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408276,"byte_end":408286,"line_start":872,"line_end":872,"column_start":12,"column_end":22},"name":"gencolumns","qualname":"<ArrayBase<S, D>>::gencolumns","value":"pub fn gencolumns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407221,"byte_end":407293,"line_start":846,"line_end":846,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407298,"byte_end":407369,"line_start":847,"line_end":847,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407374,"byte_end":407377,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(0))`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407382,"byte_end":407426,"line_start":849,"line_end":849,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407431,"byte_end":407434,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407439,"byte_end":407508,"line_start":851,"line_end":851,"column_start":5,"column_end":69}},{"value":"/ it has *b* × *c* × ... × *l* × *m* columns each of length *a*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407513,"byte_end":407583,"line_start":852,"line_end":852,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407588,"byte_end":407591,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each column is 2 elements long","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407596,"byte_end":407667,"line_start":854,"line_end":854,"column_start":5,"column_end":74}},{"value":"/ and there are 2 × 3 = 6 columns in total.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407672,"byte_end":407718,"line_start":855,"line_end":855,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407723,"byte_end":407726,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407731,"byte_end":407787,"line_start":857,"line_end":857,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407792,"byte_end":407795,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407800,"byte_end":407807,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, Axis, arr1};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407812,"byte_end":407848,"line_start":860,"line_end":860,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407853,"byte_end":407856,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ // The generalized columns of a 3D array:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407861,"byte_end":407906,"line_start":862,"line_end":862,"column_start":5,"column_end":50}},{"value":"/ // are directed along the 0th axis: 0 and 6, 1 and 7 and so on...","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407911,"byte_end":407980,"line_start":863,"line_end":863,"column_start":5,"column_end":74}},{"value":"/ let a = arr3(&[[[ 0,  1,  2], [ 3,  4,  5]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":407985,"byte_end":408033,"line_start":864,"line_end":864,"column_start":5,"column_end":53}},{"value":"/                [[ 6,  7,  8], [ 9, 10, 11]]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408038,"byte_end":408088,"line_start":865,"line_end":865,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408093,"byte_end":408096,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ // Here `gencolumns` will yield the six generalized columns of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408101,"byte_end":408178,"line_start":867,"line_end":867,"column_start":5,"column_end":82}},{"value":"/ for row in a.gencolumns() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408183,"byte_end":408214,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/     /* loop body */","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408219,"byte_end":408242,"line_start":869,"line_end":869,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408247,"byte_end":408252,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408257,"byte_end":408264,"line_start":871,"line_end":871,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408632,"byte_end":408646,"line_start":883,"line_end":883,"column_start":12,"column_end":26},"name":"gencolumns_mut","qualname":"<ArrayBase<S, D>>::gencolumns_mut","value":"pub fn gencolumns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408407,"byte_end":408479,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408484,"byte_end":408540,"line_start":880,"line_end":880,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408545,"byte_end":408548,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408553,"byte_end":408620,"line_start":882,"line_end":882,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409920,"byte_end":409925,"line_start":918,"line_end":918,"column_start":12,"column_end":17},"name":"lanes","qualname":"<ArrayBase<S, D>>::lanes","value":"pub fn lanes(&Self, Axis) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408784,"byte_end":408851,"line_start":890,"line_end":890,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408856,"byte_end":408896,"line_start":891,"line_end":891,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408901,"byte_end":408904,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ When the pointing in the direction of the first axis, they are *columns*,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408909,"byte_end":408986,"line_start":893,"line_end":893,"column_start":5,"column_end":82}},{"value":"/ in the direction of the last axis *rows*; in general they are all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":408991,"byte_end":409060,"line_start":894,"line_end":894,"column_start":5,"column_end":74}},{"value":"/ *lanes* and are one dimensional.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409065,"byte_end":409101,"line_start":895,"line_end":895,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409106,"byte_end":409109,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409114,"byte_end":409170,"line_start":897,"line_end":897,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409175,"byte_end":409178,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409183,"byte_end":409190,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, aview1, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409195,"byte_end":409233,"line_start":900,"line_end":900,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409238,"byte_end":409241,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409246,"byte_end":409279,"line_start":902,"line_end":902,"column_start":5,"column_end":38}},{"value":"/                 [ 3,  4,  5]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409284,"byte_end":409318,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/                [[ 6,  7,  8],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409323,"byte_end":409356,"line_start":904,"line_end":904,"column_start":5,"column_end":38}},{"value":"/                 [ 9, 10, 11]]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409361,"byte_end":409397,"line_start":905,"line_end":905,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409402,"byte_end":409405,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ let inner0 = a.lanes(Axis(0));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409410,"byte_end":409444,"line_start":907,"line_end":907,"column_start":5,"column_end":39}},{"value":"/ let inner1 = a.lanes(Axis(1));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409449,"byte_end":409483,"line_start":908,"line_end":908,"column_start":5,"column_end":39}},{"value":"/ let inner2 = a.lanes(Axis(2));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409488,"byte_end":409522,"line_start":909,"line_end":909,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409527,"byte_end":409530,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ // The first lane for axis 0 is [0, 6]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409535,"byte_end":409577,"line_start":911,"line_end":911,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner0.into_iter().next().unwrap(), aview1(&[0, 6]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409582,"byte_end":409650,"line_start":912,"line_end":912,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 1 is [0, 3]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409655,"byte_end":409697,"line_start":913,"line_end":913,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner1.into_iter().next().unwrap(), aview1(&[0, 3]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409702,"byte_end":409770,"line_start":914,"line_end":914,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 2 is [0, 1, 2]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409775,"byte_end":409820,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(inner2.into_iter().next().unwrap(), aview1(&[0, 1, 2]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409825,"byte_end":409896,"line_start":916,"line_end":916,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":409901,"byte_end":409908,"line_start":917,"line_end":917,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410262,"byte_end":410271,"line_start":929,"line_end":929,"column_start":12,"column_end":21},"name":"lanes_mut","qualname":"<ArrayBase<S, D>>::lanes_mut","value":"pub fn lanes_mut(&mut Self, Axis) -> LanesMut<, A, D::Smaller> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410055,"byte_end":410122,"line_start":925,"line_end":925,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410127,"byte_end":410167,"line_start":926,"line_end":926,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410172,"byte_end":410175,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut1<A>` (1D read-write array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410180,"byte_end":410250,"line_start":928,"line_end":928,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410702,"byte_end":410712,"line_start":943,"line_end":943,"column_start":12,"column_end":22},"name":"outer_iter","qualname":"<ArrayBase<S, D>>::outer_iter","value":"pub fn outer_iter(&Self) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410418,"byte_end":410484,"line_start":936,"line_end":936,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410489,"byte_end":410517,"line_start":937,"line_end":937,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410522,"byte_end":410525,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter(Axis(0))`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410530,"byte_end":410578,"line_start":939,"line_end":939,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410583,"byte_end":410586,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410591,"byte_end":410665,"line_start":941,"line_end":941,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410670,"byte_end":410690,"line_start":942,"line_end":942,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411148,"byte_end":411162,"line_start":958,"line_end":958,"column_start":12,"column_end":26},"name":"outer_iter_mut","qualname":"<ArrayBase<S, D>>::outer_iter_mut","value":"pub fn outer_iter_mut(&mut Self) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410856,"byte_end":410922,"line_start":951,"line_end":951,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410927,"byte_end":410955,"line_start":952,"line_end":952,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410960,"byte_end":410963,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter_mut(Axis(0))`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":410968,"byte_end":411020,"line_start":954,"line_end":954,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411025,"byte_end":411028,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>` (read-write array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411033,"byte_end":411111,"line_start":956,"line_end":956,"column_start":5,"column_end":83}},{"value":"allow(deprecated)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411116,"byte_end":411136,"line_start":957,"line_end":957,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411951,"byte_end":411960,"line_start":981,"line_end":981,"column_start":12,"column_end":21},"name":"axis_iter","qualname":"<ArrayBase<S, D>>::axis_iter","value":"pub fn axis_iter(&Self, Axis) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411320,"byte_end":411369,"line_start":966,"line_end":966,"column_start":5,"column_end":54}},{"value":"/ and yields each subview along it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411374,"byte_end":411411,"line_start":967,"line_end":967,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411416,"byte_end":411419,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ For example, in a 3 × 4 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411424,"byte_end":411496,"line_start":969,"line_end":969,"column_start":5,"column_end":75}},{"value":"/ the iterator element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411501,"byte_end":411525,"line_start":970,"line_end":970,"column_start":5,"column_end":29}},{"value":"/ is a 3 × 4 subview (and there are 5 in total), as shown","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411530,"byte_end":411590,"line_start":971,"line_end":971,"column_start":5,"column_end":64}},{"value":"/ in the picture below.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411595,"byte_end":411620,"line_start":972,"line_end":972,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411625,"byte_end":411628,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411633,"byte_end":411707,"line_start":974,"line_end":974,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411712,"byte_end":411715,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411720,"byte_end":411775,"line_start":976,"line_end":976,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411780,"byte_end":411783,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411788,"byte_end":411830,"line_start":978,"line_end":978,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411835,"byte_end":411838,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ <img src=\"https://rust-ndarray.github.io/ndarray/images/axis_iter_3_4_5.svg\" height=\"250px\">","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":411843,"byte_end":411939,"line_start":980,"line_end":980,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412384,"byte_end":412397,"line_start":996,"line_end":996,"column_start":12,"column_end":25},"name":"axis_iter_mut","qualname":"<ArrayBase<S, D>>::axis_iter_mut","value":"pub fn axis_iter_mut(&mut Self, Axis) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each mutable subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412119,"byte_end":412168,"line_start":989,"line_end":989,"column_start":5,"column_end":54}},{"value":"/ and yields each mutable subview along it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412173,"byte_end":412218,"line_start":990,"line_end":990,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412223,"byte_end":412226,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412231,"byte_end":412284,"line_start":992,"line_end":992,"column_start":5,"column_end":58}},{"value":"/ (read-write array view).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412289,"byte_end":412317,"line_start":993,"line_end":993,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412322,"byte_end":412325,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412330,"byte_end":412372,"line_start":995,"line_end":995,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413632,"byte_end":413648,"line_start":1031,"line_end":1031,"column_start":12,"column_end":28},"name":"axis_chunks_iter","qualname":"<ArrayBase<S, D>>::axis_chunks_iter","value":"pub fn axis_chunks_iter(&Self, Axis, usize) -> AxisChunksIter<, A, D> where\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412573,"byte_end":412643,"line_start":1004,"line_end":1004,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping views along that axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412648,"byte_end":412699,"line_start":1005,"line_end":1005,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412704,"byte_end":412707,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412712,"byte_end":412753,"line_start":1007,"line_end":1007,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412758,"byte_end":412761,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ The last view may have less elements if `size` does not divide","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412766,"byte_end":412832,"line_start":1009,"line_end":1009,"column_start":5,"column_end":71}},{"value":"/ the axis' dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412837,"byte_end":412861,"line_start":1010,"line_end":1010,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412866,"byte_end":412869,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412874,"byte_end":412937,"line_start":1012,"line_end":1012,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412942,"byte_end":412945,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412950,"byte_end":412957,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412962,"byte_end":412985,"line_start":1015,"line_end":1015,"column_start":5,"column_end":28}},{"value":"/ use ndarray::{arr3, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":412990,"byte_end":413020,"line_start":1016,"line_end":1016,"column_start":5,"column_end":35}},{"value":"/ use std::iter::FromIterator;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413025,"byte_end":413057,"line_start":1017,"line_end":1017,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413062,"byte_end":413065,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..28).into_shape((2, 7, 2)).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413070,"byte_end":413137,"line_start":1019,"line_end":1019,"column_start":5,"column_end":72}},{"value":"/ let mut iter = a.axis_chunks_iter(Axis(1), 2);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413142,"byte_end":413192,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413197,"byte_end":413200,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ // first iteration yields a 2 × 2 × 2 view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413205,"byte_end":413253,"line_start":1022,"line_end":1022,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(iter.next().unwrap(),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413258,"byte_end":413294,"line_start":1023,"line_end":1023,"column_start":5,"column_end":41}},{"value":"/            arr3(&[[[ 0,  1], [ 2, 3]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413299,"byte_end":413341,"line_start":1024,"line_end":1024,"column_start":5,"column_end":47}},{"value":"/                   [[14, 15], [16, 17]]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413346,"byte_end":413392,"line_start":1025,"line_end":1025,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413397,"byte_end":413400,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ // however the last element is a 2 × 1 × 2 view since 7 % 2 == 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413405,"byte_end":413475,"line_start":1027,"line_end":1027,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next_back().unwrap(), arr3(&[[[12, 13]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413480,"byte_end":413540,"line_start":1028,"line_end":1028,"column_start":5,"column_end":65}},{"value":"/                                              [[26, 27]]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413545,"byte_end":413608,"line_start":1029,"line_end":1029,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413613,"byte_end":413620,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414088,"byte_end":414108,"line_start":1044,"line_end":1044,"column_start":12,"column_end":32},"name":"axis_chunks_iter_mut","qualname":"<ArrayBase<S, D>>::axis_chunks_iter_mut","value":"pub fn axis_chunks_iter_mut(&mut Self, Axis, usize)\n-> AxisChunksIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping read-write views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413806,"byte_end":413876,"line_start":1038,"line_end":1038,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping read-write views along that axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413881,"byte_end":413943,"line_start":1039,"line_end":1039,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413948,"byte_end":413951,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D>`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":413956,"byte_end":414000,"line_start":1041,"line_end":1041,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414005,"byte_end":414008,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414013,"byte_end":414076,"line_start":1043,"line_end":1043,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414791,"byte_end":414803,"line_start":1062,"line_end":1062,"column_start":12,"column_end":24},"name":"exact_chunks","qualname":"<ArrayBase<S, D>>::exact_chunks","value":"pub fn exact_chunks<E>(&Self, E) -> ExactChunks<, A, D> where\nE: IntoDimension<Dim = D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414283,"byte_end":414334,"line_start":1051,"line_end":1051,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414339,"byte_end":414342,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414347,"byte_end":414416,"line_start":1053,"line_end":1053,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414421,"byte_end":414493,"line_start":1054,"line_end":1054,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414498,"byte_end":414501,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414506,"byte_end":414580,"line_start":1056,"line_end":1056,"column_start":5,"column_end":79}},{"value":"/ `chunk_size`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414585,"byte_end":414602,"line_start":1057,"line_end":1057,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414607,"byte_end":414610,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414615,"byte_end":414674,"line_start":1059,"line_end":1059,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414679,"byte_end":414748,"line_start":1060,"line_end":1060,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414753,"byte_end":414779,"line_start":1061,"line_end":1061,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416157,"byte_end":416173,"line_start":1102,"line_end":1102,"column_start":12,"column_end":28},"name":"exact_chunks_mut","qualname":"<ArrayBase<S, D>>::exact_chunks_mut","value":"pub fn exact_chunks_mut<E>(&mut Self, E) -> ExactChunksMut<, A, D> where\nE: IntoDimension<Dim = D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":414983,"byte_end":415034,"line_start":1070,"line_end":1070,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415039,"byte_end":415042,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415047,"byte_end":415116,"line_start":1072,"line_end":1072,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415121,"byte_end":415193,"line_start":1073,"line_end":1073,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415198,"byte_end":415201,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayViewMut<A, D>` with exactly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415206,"byte_end":415269,"line_start":1075,"line_end":1075,"column_start":5,"column_end":68}},{"value":"/ the dimension `chunk_size`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415274,"byte_end":415305,"line_start":1076,"line_end":1076,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415310,"byte_end":415313,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415318,"byte_end":415377,"line_start":1078,"line_end":1078,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415382,"byte_end":415451,"line_start":1079,"line_end":1079,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415456,"byte_end":415482,"line_start":1080,"line_end":1080,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415487,"byte_end":415490,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415495,"byte_end":415506,"line_start":1082,"line_end":1082,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415511,"byte_end":415534,"line_start":1083,"line_end":1083,"column_start":5,"column_end":28}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415539,"byte_end":415561,"line_start":1084,"line_end":1084,"column_start":5,"column_end":27}},{"value":"/ let mut a = Array::zeros((6, 7));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415566,"byte_end":415603,"line_start":1085,"line_end":1085,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415608,"byte_end":415611,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ // Fill each 2 × 2 chunk with the index of where it appeared in iteration","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415616,"byte_end":415694,"line_start":1087,"line_end":1087,"column_start":5,"column_end":82}},{"value":"/ for (i, mut chunk) in a.exact_chunks_mut((2, 2)).into_iter().enumerate() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415699,"byte_end":415777,"line_start":1088,"line_end":1088,"column_start":5,"column_end":83}},{"value":"/     chunk.fill(i);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415782,"byte_end":415804,"line_start":1089,"line_end":1089,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415809,"byte_end":415814,"line_start":1090,"line_end":1090,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415819,"byte_end":415822,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ // The resulting array is:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415827,"byte_end":415857,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415862,"byte_end":415877,"line_start":1093,"line_end":1093,"column_start":5,"column_end":20}},{"value":"/   a,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415882,"byte_end":415890,"line_start":1094,"line_end":1094,"column_start":5,"column_end":13}},{"value":"/   arr2(&[[0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415895,"byte_end":415930,"line_start":1095,"line_end":1095,"column_start":5,"column_end":40}},{"value":"/          [0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415935,"byte_end":415970,"line_start":1096,"line_end":1096,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":415975,"byte_end":416010,"line_start":1097,"line_end":1097,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416015,"byte_end":416050,"line_start":1098,"line_end":1098,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416055,"byte_end":416090,"line_start":1099,"line_end":1099,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416095,"byte_end":416133,"line_start":1100,"line_end":1100,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416138,"byte_end":416145,"line_start":1101,"line_end":1101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":419993,"byte_end":420000,"line_start":1146,"line_end":1146,"column_start":12,"column_end":19},"name":"windows","qualname":"<ArrayBase<S, D>>::windows","value":"pub fn windows<E>(&Self, E) -> Windows<, A, D> where E: IntoDimension<Dim =\nD>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a window producer and iterable.","sig":null,"attributes":[{"value":"/ Return a window producer and iterable.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416370,"byte_end":416412,"line_start":1110,"line_end":1110,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416417,"byte_end":416420,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ The windows are all distinct overlapping views of size `window_size`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416425,"byte_end":416497,"line_start":1112,"line_end":1112,"column_start":5,"column_end":77}},{"value":"/ that fit into the array's shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416502,"byte_end":416538,"line_start":1113,"line_end":1113,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416543,"byte_end":416546,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Will yield over no elements if window size is larger","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416551,"byte_end":416607,"line_start":1115,"line_end":1115,"column_start":5,"column_end":61}},{"value":"/ than the actual array size of any dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416612,"byte_end":416660,"line_start":1116,"line_end":1116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416665,"byte_end":416668,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ The produced element is an `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416673,"byte_end":416748,"line_start":1118,"line_end":1118,"column_start":5,"column_end":80}},{"value":"/ `window_size`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416753,"byte_end":416771,"line_start":1119,"line_end":1119,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416776,"byte_end":416779,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `window_size` is zero.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416784,"byte_end":416845,"line_start":1121,"line_end":1121,"column_start":5,"column_end":66}},{"value":"/ (**Panics** if `D` is `IxDyn` and `window_size` does not match the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416850,"byte_end":416920,"line_start":1122,"line_end":1122,"column_start":5,"column_end":75}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416925,"byte_end":416951,"line_start":1123,"line_end":1123,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416956,"byte_end":416959,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ This is an illustration of the 2×2 windows in a 3×4 array:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":416964,"byte_end":417028,"line_start":1125,"line_end":1125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417033,"byte_end":417036,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417041,"byte_end":417052,"line_start":1127,"line_end":1127,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417057,"byte_end":417087,"line_start":1128,"line_end":1128,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417092,"byte_end":417095,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/      │   ┏━━━━━┳━━━━━┱─────┬─────┐   ┌─────┲━━━━━┳━━━━━┱─────┐   ┌─────┬─────┲━━━━━┳━━━━━┓","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417100,"byte_end":417346,"line_start":1130,"line_end":1130,"column_start":5,"column_end":99}},{"value":"/      ▼   ┃ a₀₀ ┃ a₀₁ ┃     │     │   │     ┃ a₀₁ ┃ a₀₂ ┃     │   │     │     ┃ a₀₂ ┃ a₀₃ ┃","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417351,"byte_end":417501,"line_start":1131,"line_end":1131,"column_start":5,"column_end":99}},{"value":"/ Axis(0)  ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417506,"byte_end":417750,"line_start":1132,"line_end":1132,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417755,"byte_end":417903,"line_start":1133,"line_end":1133,"column_start":5,"column_end":99}},{"value":"/          ┡━━━━━╇━━━━━╃─────┼─────┤   ├─────╄━━━━━╇━━━━━╃─────┤   ├─────┼─────╄━━━━━╇━━━━━┩","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":417908,"byte_end":418152,"line_start":1134,"line_end":1134,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":418157,"byte_end":418281,"line_start":1135,"line_end":1135,"column_start":5,"column_end":99}},{"value":"/          └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":418286,"byte_end":418530,"line_start":1136,"line_end":1136,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":418535,"byte_end":418538,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/          ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":418543,"byte_end":418787,"line_start":1138,"line_end":1138,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":418792,"byte_end":418916,"line_start":1139,"line_end":1139,"column_start":5,"column_end":99}},{"value":"/          ┢━━━━━╈━━━━━╅─────┼─────┤   ├─────╆━━━━━╈━━━━━╅─────┤   ├─────┼─────╆━━━━━╈━━━━━┪","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":418921,"byte_end":419165,"line_start":1140,"line_end":1140,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":419170,"byte_end":419318,"line_start":1141,"line_end":1141,"column_start":5,"column_end":99}},{"value":"/          ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":419323,"byte_end":419567,"line_start":1142,"line_end":1142,"column_start":5,"column_end":99}},{"value":"/          ┃ a₂₀ ┃ a₂₁ ┃     │     │   │     ┃ a₂₁ ┃ a₂₂ ┃     │   │     │     ┃ a₂₂ ┃ a₂₃ ┃","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":419572,"byte_end":419720,"line_start":1143,"line_end":1143,"column_start":5,"column_end":99}},{"value":"/          ┗━━━━━┻━━━━━┹─────┴─────┘   └─────┺━━━━━┻━━━━━┹─────┘   └─────┴─────┺━━━━━┻━━━━━┛","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":419725,"byte_end":419969,"line_start":1144,"line_end":1144,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":419974,"byte_end":419981,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420658,"byte_end":420662,"line_start":1166,"line_end":1166,"column_start":12,"column_end":16},"name":"diag","qualname":"<ArrayBase<S, D>>::diag","value":"pub fn diag(&Self) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an view of the diagonal elements of the array.","sig":null,"attributes":[{"value":"/ Return an view of the diagonal elements of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420445,"byte_end":420502,"line_start":1162,"line_end":1162,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420507,"byte_end":420510,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The diagonal is simply the sequence indexed by *(0, 0, .., 0)*,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420515,"byte_end":420582,"line_start":1164,"line_end":1164,"column_start":5,"column_end":72}},{"value":"/ *(1, 1, ..., 1)* etc as long as all axes have elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420587,"byte_end":420646,"line_start":1165,"line_end":1165,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420848,"byte_end":420856,"line_start":1174,"line_end":1174,"column_start":12,"column_end":20},"name":"diag_mut","qualname":"<ArrayBase<S, D>>::diag_mut","value":"pub fn diag_mut(&mut Self) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view over the diagonal elements of the array.\n","sig":null,"attributes":[{"value":"/ Return a read-write view over the diagonal elements of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420767,"byte_end":420836,"line_start":1173,"line_end":1173,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":421038,"byte_end":421047,"line_start":1182,"line_end":1182,"column_start":12,"column_end":21},"name":"into_diag","qualname":"<ArrayBase<S, D>>::into_diag","value":"pub fn into_diag(Self) -> ArrayBase<S, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" Return the diagonal as a one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the diagonal as a one-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":420975,"byte_end":421026,"line_start":1181,"line_end":1181,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":422288,"byte_end":422306,"line_start":1223,"line_end":1223,"column_start":12,"column_end":30},"name":"is_standard_layout","qualname":"<ArrayBase<S, D>>::is_standard_layout","value":"pub fn is_standard_layout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the array data is laid out in contiguous “C order” in\n memory (where the last index is the most rapidly varying).","sig":null,"attributes":[{"value":"/ Return `true` if the array data is laid out in contiguous “C order” in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":422001,"byte_end":422079,"line_start":1218,"line_end":1218,"column_start":5,"column_end":79}},{"value":"/ memory (where the last index is the most rapidly varying).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":422084,"byte_end":422146,"line_start":1219,"line_end":1219,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":422151,"byte_end":422154,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ Return `false` otherwise, i.e the array is possibly not","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":422159,"byte_end":422218,"line_start":1221,"line_end":1221,"column_start":5,"column_end":64}},{"value":"/ contiguous in memory, it has custom strides, etc.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":422223,"byte_end":422276,"line_start":1222,"line_end":1222,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423972,"byte_end":423990,"line_start":1269,"line_end":1269,"column_start":12,"column_end":30},"name":"as_standard_layout","qualname":"<ArrayBase<S, D>>::as_standard_layout","value":"pub fn as_standard_layout(&Self) -> CowArray<, A, D> where S: Data<Elem = A>,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return a standard-layout array containing the data, cloning if\n necessary.","sig":null,"attributes":[{"value":"/ Return a standard-layout array containing the data, cloning if","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423127,"byte_end":423193,"line_start":1247,"line_end":1247,"column_start":5,"column_end":71}},{"value":"/ necessary.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423198,"byte_end":423212,"line_start":1248,"line_end":1248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423217,"byte_end":423220,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ If `self` is in standard layout, a COW view of the data is returned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423225,"byte_end":423296,"line_start":1250,"line_end":1250,"column_start":5,"column_end":76}},{"value":"/ without cloning. Otherwise, the data is cloned, and the returned array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423301,"byte_end":423375,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/ owns the cloned data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423380,"byte_end":423405,"line_start":1252,"line_end":1252,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423410,"byte_end":423413,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423418,"byte_end":423425,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423430,"byte_end":423454,"line_start":1255,"line_end":1255,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423459,"byte_end":423462,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let standard = Array2::<f64>::zeros((3, 4));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423467,"byte_end":423515,"line_start":1257,"line_end":1257,"column_start":5,"column_end":53}},{"value":"/ assert!(standard.is_standard_layout());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423520,"byte_end":423563,"line_start":1258,"line_end":1258,"column_start":5,"column_end":48}},{"value":"/ let cow_view = standard.as_standard_layout();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423568,"byte_end":423617,"line_start":1259,"line_end":1259,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_view.is_view());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423622,"byte_end":423654,"line_start":1260,"line_end":1260,"column_start":5,"column_end":37}},{"value":"/ assert!(cow_view.is_standard_layout());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423659,"byte_end":423702,"line_start":1261,"line_end":1261,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423707,"byte_end":423710,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ let fortran = standard.reversed_axes();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423715,"byte_end":423758,"line_start":1263,"line_end":1263,"column_start":5,"column_end":48}},{"value":"/ assert!(!fortran.is_standard_layout());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423763,"byte_end":423806,"line_start":1264,"line_end":1264,"column_start":5,"column_end":48}},{"value":"/ let cow_owned = fortran.as_standard_layout();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423811,"byte_end":423860,"line_start":1265,"line_end":1265,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_owned.is_owned());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423865,"byte_end":423899,"line_start":1266,"line_end":1266,"column_start":5,"column_end":39}},{"value":"/ assert!(cow_owned.is_standard_layout());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423904,"byte_end":423948,"line_start":1267,"line_end":1267,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":423953,"byte_end":423960,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425046,"byte_end":425052,"line_start":1299,"line_end":1299,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArrayBase<S, D>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A","parent":null,"children":[],"decl_id":null,"docs":" Return a pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a pointer to the first element in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424653,"byte_end":424708,"line_start":1289,"line_end":1289,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424713,"byte_end":424716,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ Raw access to array elements needs to follow the strided indexing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424721,"byte_end":424790,"line_start":1291,"line_end":1291,"column_start":5,"column_end":74}},{"value":"/ scheme: an element at multi-index *I* in an array with strides *S* is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424795,"byte_end":424868,"line_start":1292,"line_end":1292,"column_start":5,"column_end":78}},{"value":"/ located at offset","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424873,"byte_end":424894,"line_start":1293,"line_end":1293,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424899,"byte_end":424902,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ *Σ<sub>0 ≤ k < d</sub> I<sub>k</sub> × S<sub>k</sub>*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424907,"byte_end":424968,"line_start":1295,"line_end":1295,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424973,"byte_end":424976,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ where *d* is `self.ndim()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":424981,"byte_end":425012,"line_start":1297,"line_end":1297,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425017,"byte_end":425034,"line_start":1298,"line_end":1298,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425220,"byte_end":425230,"line_start":1305,"line_end":1305,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArrayBase<S, D>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable pointer to the first element in the array.\n","sig":null,"attributes":[{"value":"/ Return a mutable pointer to the first element in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425123,"byte_end":425186,"line_start":1303,"line_end":1303,"column_start":5,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425191,"byte_end":425208,"line_start":1304,"line_end":1304,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425438,"byte_end":425446,"line_start":1315,"line_end":1315,"column_start":12,"column_end":20},"name":"raw_view","qualname":"<ArrayBase<S, D>>::raw_view","value":"pub fn raw_view(&Self) -> RawArrayView<A, D>","parent":null,"children":[],"decl_id":null,"docs":" Return a raw view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425377,"byte_end":425412,"line_start":1313,"line_end":1313,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425417,"byte_end":425426,"line_start":1314,"line_end":1314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425655,"byte_end":425667,"line_start":1321,"line_end":1321,"column_start":12,"column_end":24},"name":"raw_view_mut","qualname":"<ArrayBase<S, D>>::raw_view_mut","value":"pub fn raw_view_mut(&mut Self) -> RawArrayViewMut<A, D> where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a raw mutable view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw mutable view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425586,"byte_end":425629,"line_start":1319,"line_end":1319,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425634,"byte_end":425643,"line_start":1320,"line_end":1320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426188,"byte_end":426196,"line_start":1334,"line_end":1334,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArrayBase<S, D>>::as_slice","value":"pub fn as_slice(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425903,"byte_end":425987,"line_start":1329,"line_end":1329,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":425992,"byte_end":426020,"line_start":1330,"line_end":1330,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426025,"byte_end":426028,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the element order in the slice","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426033,"byte_end":426108,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ corresponds to the logical order of the array’s elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426113,"byte_end":426176,"line_start":1333,"line_end":1333,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426558,"byte_end":426570,"line_start":1347,"line_end":1347,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<ArrayBase<S, D>>::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> Option<&mut [A]> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426429,"byte_end":426513,"line_start":1345,"line_end":1345,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426518,"byte_end":426546,"line_start":1346,"line_end":1346,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427184,"byte_end":427205,"line_start":1366,"line_end":1366,"column_start":12,"column_end":33},"name":"as_slice_memory_order","qualname":"<ArrayBase<S, D>>::as_slice_memory_order","value":"pub fn as_slice_memory_order(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426852,"byte_end":426913,"line_start":1359,"line_end":1359,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426918,"byte_end":426946,"line_start":1360,"line_end":1360,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426951,"byte_end":426954,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the elements in the slice","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":426959,"byte_end":427029,"line_start":1362,"line_end":1362,"column_start":5,"column_end":75}},{"value":"/ have whatever order the elements have in memory.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427034,"byte_end":427086,"line_start":1363,"line_end":1363,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427091,"byte_end":427094,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ Implementation notes: Does not yet support negatively strided arrays.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427099,"byte_end":427172,"line_start":1365,"line_end":1365,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427539,"byte_end":427564,"line_start":1379,"line_end":1379,"column_start":12,"column_end":37},"name":"as_slice_memory_order_mut","qualname":"<ArrayBase<S, D>>::as_slice_memory_order_mut","value":"pub fn as_slice_memory_order_mut(&mut Self) -> Option<&mut [A]> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427433,"byte_end":427494,"line_start":1377,"line_end":1377,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427499,"byte_end":427527,"line_start":1378,"line_end":1378,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428448,"byte_end":428458,"line_start":1407,"line_end":1407,"column_start":12,"column_end":22},"name":"into_shape","qualname":"<ArrayBase<S, D>>::into_shape","value":"pub fn into_shape<E>(Self, E) -> Result<ArrayBase<S, E::Dim>, ShapeError>\nwhere E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `shape`; any shape with the same number of\n elements is accepted, but the source array or view must be\n contiguous, otherwise we cannot rearrange the dimension.","sig":null,"attributes":[{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427841,"byte_end":427912,"line_start":1391,"line_end":1391,"column_start":5,"column_end":76}},{"value":"/ elements is accepted, but the source array or view must be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427917,"byte_end":427979,"line_start":1392,"line_end":1392,"column_start":5,"column_end":67}},{"value":"/ contiguous, otherwise we cannot rearrange the dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":427984,"byte_end":428044,"line_start":1393,"line_end":1393,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428049,"byte_end":428052,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the shapes don't have the same number of elements.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428057,"byte_end":428129,"line_start":1395,"line_end":1395,"column_start":5,"column_end":77}},{"value":"/ **Errors** if the input array is not c- or f-contiguous.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428134,"byte_end":428194,"line_start":1396,"line_end":1396,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428199,"byte_end":428202,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428207,"byte_end":428214,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428219,"byte_end":428253,"line_start":1399,"line_end":1399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428258,"byte_end":428261,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428266,"byte_end":428278,"line_start":1401,"line_end":1401,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 2., 3., 4.]).into_shape((2, 2)).unwrap()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428283,"byte_end":428344,"line_start":1402,"line_end":1402,"column_start":5,"column_end":66}},{"value":"/     == aview2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428349,"byte_end":428378,"line_start":1403,"line_end":1403,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428383,"byte_end":428413,"line_start":1404,"line_end":1404,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428418,"byte_end":428424,"line_start":1405,"line_end":1405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":428429,"byte_end":428436,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":430073,"byte_end":430080,"line_start":1455,"line_end":1455,"column_start":12,"column_end":19},"name":"reshape","qualname":"<ArrayBase<S, D>>::reshape","value":"pub fn reshape<E>(&Self, E) -> ArrayBase<S, E::Dim> where S: DataShared +\nDataOwned, A: Clone, E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for\n other arrays and array views.*","sig":null,"attributes":[{"value":"/ *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429440,"byte_end":429506,"line_start":1435,"line_end":1435,"column_start":5,"column_end":71}},{"value":"/ other arrays and array views.*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429511,"byte_end":429545,"line_start":1436,"line_end":1436,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429550,"byte_end":429553,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429558,"byte_end":429629,"line_start":1438,"line_end":1438,"column_start":5,"column_end":76}},{"value":"/ elements is accepted.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429634,"byte_end":429659,"line_start":1439,"line_end":1439,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429664,"byte_end":429667,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ May clone all elements if needed to arrange elements in standard","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429672,"byte_end":429740,"line_start":1441,"line_end":1441,"column_start":5,"column_end":73}},{"value":"/ layout (and break sharing).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429745,"byte_end":429776,"line_start":1442,"line_end":1442,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429781,"byte_end":429784,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429789,"byte_end":429831,"line_start":1444,"line_end":1444,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429836,"byte_end":429839,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429844,"byte_end":429851,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{rcarr1, rcarr2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429856,"byte_end":429890,"line_start":1447,"line_end":1447,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429895,"byte_end":429898,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429903,"byte_end":429915,"line_start":1449,"line_end":1449,"column_start":5,"column_end":17}},{"value":"/     rcarr1(&[1., 2., 3., 4.]).reshape((2, 2))","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429920,"byte_end":429969,"line_start":1450,"line_end":1450,"column_start":5,"column_end":54}},{"value":"/     == rcarr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":429974,"byte_end":430003,"line_start":1451,"line_end":1451,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":430008,"byte_end":430038,"line_start":1452,"line_end":1452,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":430043,"byte_end":430049,"line_start":1453,"line_end":1453,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":430054,"byte_end":430061,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431326,"byte_end":431334,"line_start":1493,"line_end":1493,"column_start":12,"column_end":20},"name":"into_dyn","qualname":"<ArrayBase<S, D>>::into_dyn","value":"pub fn into_dyn(Self) -> ArrayBase<S, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" Convert any array or array view to a dynamic dimensional array or\n array view (respectively).","sig":null,"attributes":[{"value":"/ Convert any array or array view to a dynamic dimensional array or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431024,"byte_end":431093,"line_start":1484,"line_end":1484,"column_start":5,"column_end":74}},{"value":"/ array view (respectively).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431098,"byte_end":431128,"line_start":1485,"line_end":1485,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431133,"byte_end":431136,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431141,"byte_end":431148,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayD};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431153,"byte_end":431185,"line_start":1488,"line_end":1488,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431190,"byte_end":431193,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ let array: ArrayD<i32> = arr2(&[[1, 2],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431198,"byte_end":431241,"line_start":1490,"line_end":1490,"column_start":5,"column_end":48}},{"value":"/                                 [3, 4]]).into_dyn();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431246,"byte_end":431302,"line_start":1491,"line_end":1491,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431307,"byte_end":431314,"line_start":1492,"line_end":1492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432035,"byte_end":432054,"line_start":1515,"line_end":1515,"column_start":12,"column_end":31},"name":"into_dimensionality","qualname":"<ArrayBase<S, D>>::into_dimensionality","value":"pub fn into_dimensionality<D2>(Self) -> Result<ArrayBase<S, D2>, ShapeError>\nwhere D2: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Convert an array or array view to another with the same type, but\n different dimensionality type. Errors if the dimensions don't agree.","sig":null,"attributes":[{"value":"/ Convert an array or array view to another with the same type, but","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431547,"byte_end":431616,"line_start":1502,"line_end":1502,"column_start":5,"column_end":74}},{"value":"/ different dimensionality type. Errors if the dimensions don't agree.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431621,"byte_end":431693,"line_start":1503,"line_end":1503,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431698,"byte_end":431701,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431706,"byte_end":431713,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{ArrayD, Ix2, IxDyn};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431718,"byte_end":431756,"line_start":1506,"line_end":1506,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431761,"byte_end":431764,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ // Create a dynamic dimensionality array and convert it to an Array2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431769,"byte_end":431841,"line_start":1508,"line_end":1508,"column_start":5,"column_end":77}},{"value":"/ // (Ix2 dimension type).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431846,"byte_end":431874,"line_start":1509,"line_end":1509,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431879,"byte_end":431882,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ let array = ArrayD::<f64>::zeros(IxDyn(&[10, 10]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431887,"byte_end":431942,"line_start":1511,"line_end":1511,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431947,"byte_end":431950,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ assert!(array.into_dimensionality::<Ix2>().is_ok());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":431955,"byte_end":432011,"line_start":1513,"line_end":1513,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432016,"byte_end":432023,"line_start":1514,"line_end":1514,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433612,"byte_end":433621,"line_start":1561,"line_end":1561,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<ArrayBase<S, D>>::broadcast","value":"pub fn broadcast<E>(&Self, E) -> Option<ArrayView<, A, E::Dim>> where\nE: IntoDimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Act like a larger size and/or shape array by *broadcasting*\n into a larger shape, if possible.","sig":null,"attributes":[{"value":"/ Act like a larger size and/or shape array by *broadcasting*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432558,"byte_end":432621,"line_start":1532,"line_end":1532,"column_start":5,"column_end":68}},{"value":"/ into a larger shape, if possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432626,"byte_end":432663,"line_start":1533,"line_end":1533,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432668,"byte_end":432671,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ Return `None` if shapes can not be broadcast together.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432676,"byte_end":432734,"line_start":1535,"line_end":1535,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432739,"byte_end":432742,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ ***Background***","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432747,"byte_end":432767,"line_start":1537,"line_end":1537,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432772,"byte_end":432775,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/  * Two axes are compatible if they are equal, or one of them is 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432780,"byte_end":432850,"line_start":1539,"line_end":1539,"column_start":5,"column_end":75}},{"value":"/  * In this instance, only the axes of the smaller side (self) can be 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432855,"byte_end":432930,"line_start":1540,"line_end":1540,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432935,"byte_end":432938,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ Compare axes beginning with the *last* axis of each shape.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":432943,"byte_end":433005,"line_start":1542,"line_end":1542,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433010,"byte_end":433013,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ For example (1, 2, 4) can be broadcast into (7, 6, 2, 4)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433018,"byte_end":433078,"line_start":1544,"line_end":1544,"column_start":5,"column_end":65}},{"value":"/ because its axes are either equal or 1 (or missing);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433083,"byte_end":433139,"line_start":1545,"line_end":1545,"column_start":5,"column_end":61}},{"value":"/ while (2, 2) can *not* be broadcast into (2, 4).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433144,"byte_end":433196,"line_start":1546,"line_end":1546,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433201,"byte_end":433204,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ The implementation creates a view with strides set to zero for the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433209,"byte_end":433279,"line_start":1548,"line_end":1548,"column_start":5,"column_end":75}},{"value":"/ axes that are to be repeated.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433284,"byte_end":433317,"line_start":1549,"line_end":1549,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433322,"byte_end":433325,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ The broadcasting documentation for Numpy has more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433330,"byte_end":433396,"line_start":1551,"line_end":1551,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433401,"byte_end":433404,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433409,"byte_end":433416,"line_start":1553,"line_end":1553,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433421,"byte_end":433455,"line_start":1554,"line_end":1554,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433460,"byte_end":433463,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433468,"byte_end":433480,"line_start":1556,"line_end":1556,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 0.]).broadcast((10, 2)).unwrap()","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433485,"byte_end":433538,"line_start":1557,"line_end":1557,"column_start":5,"column_end":58}},{"value":"/     == aview2(&[[1., 0.]; 10])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433543,"byte_end":433577,"line_start":1558,"line_end":1558,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433582,"byte_end":433588,"line_start":1559,"line_end":1559,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":433593,"byte_end":433600,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436591,"byte_end":436600,"line_start":1642,"line_end":1642,"column_start":12,"column_end":21},"name":"swap_axes","qualname":"<ArrayBase<S, D>>::swap_axes","value":"pub fn swap_axes(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap axes `ax` and `bx`.","sig":null,"attributes":[{"value":"/ Swap axes `ax` and `bx`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436178,"byte_end":436206,"line_start":1626,"line_end":1626,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436211,"byte_end":436214,"line_start":1627,"line_end":1627,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436219,"byte_end":436292,"line_start":1628,"line_end":1628,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436297,"byte_end":436313,"line_start":1629,"line_end":1629,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436318,"byte_end":436321,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axes are out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436326,"byte_end":436371,"line_start":1631,"line_end":1631,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436376,"byte_end":436379,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436384,"byte_end":436391,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436396,"byte_end":436418,"line_start":1634,"line_end":1634,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436423,"byte_end":436426,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2., 3.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436431,"byte_end":436469,"line_start":1636,"line_end":1636,"column_start":5,"column_end":43}},{"value":"/ a.swap_axes(0, 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436474,"byte_end":436496,"line_start":1637,"line_end":1637,"column_start":5,"column_end":27}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436501,"byte_end":436513,"line_start":1638,"line_end":1638,"column_start":5,"column_end":17}},{"value":"/     a == arr2(&[[1.], [2.], [3.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436518,"byte_end":436556,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436561,"byte_end":436567,"line_start":1640,"line_end":1640,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436572,"byte_end":436579,"line_start":1641,"line_end":1641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437484,"byte_end":437497,"line_start":1669,"line_end":1669,"column_start":12,"column_end":25},"name":"permuted_axes","qualname":"<ArrayBase<S, D>>::permuted_axes","value":"pub fn permuted_axes<T>(Self, T) -> ArrayBase<S, D> where T: IntoDimension<Dim\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Permute the axes.","sig":null,"attributes":[{"value":"/ Permute the axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436737,"byte_end":436758,"line_start":1647,"line_end":1647,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436763,"byte_end":436766,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436771,"byte_end":436844,"line_start":1649,"line_end":1649,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436849,"byte_end":436865,"line_start":1650,"line_end":1650,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436870,"byte_end":436873,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ *i* in the *j*-th place in the axes sequence means `self`'s *i*-th axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436878,"byte_end":436953,"line_start":1652,"line_end":1652,"column_start":5,"column_end":80}},{"value":"/ becomes `self.permuted_axes()`'s *j*-th axis","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":436958,"byte_end":437006,"line_start":1653,"line_end":1653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437011,"byte_end":437014,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the axes are out of bounds, if an axis is missing,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437019,"byte_end":437094,"line_start":1655,"line_end":1655,"column_start":5,"column_end":80}},{"value":"/ or if an axis is repeated more than once.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437099,"byte_end":437144,"line_start":1656,"line_end":1656,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437149,"byte_end":437152,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437157,"byte_end":437171,"line_start":1658,"line_end":1658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437176,"byte_end":437179,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437184,"byte_end":437191,"line_start":1660,"line_end":1660,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Array3};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437196,"byte_end":437228,"line_start":1661,"line_end":1661,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437233,"byte_end":437236,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[0, 1], [2, 3]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437241,"byte_end":437277,"line_start":1663,"line_end":1663,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.view().permuted_axes([1, 0]), a.t());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437282,"byte_end":437336,"line_start":1664,"line_end":1664,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437341,"byte_end":437344,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<u8>::zeros((1, 2, 3));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437349,"byte_end":437392,"line_start":1666,"line_end":1666,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(b.permuted_axes([1, 0, 2]).shape(), &[2, 1, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437397,"byte_end":437460,"line_start":1667,"line_end":1667,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":437465,"byte_end":437472,"line_start":1668,"line_end":1668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438717,"byte_end":438730,"line_start":1704,"line_end":1704,"column_start":12,"column_end":25},"name":"reversed_axes","qualname":"<ArrayBase<S, D>>::reversed_axes","value":"pub fn reversed_axes(Self) -> ArrayBase<S, D>","parent":null,"children":[],"decl_id":null,"docs":" Transpose the array by reversing axes.","sig":null,"attributes":[{"value":"/ Transpose the array by reversing axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438538,"byte_end":438580,"line_start":1700,"line_end":1700,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438585,"byte_end":438588,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ Transposition reverses the order of the axes (dimensions and strides)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438593,"byte_end":438666,"line_start":1702,"line_end":1702,"column_start":5,"column_end":78}},{"value":"/ while retaining the same data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438671,"byte_end":438705,"line_start":1703,"line_end":1703,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439084,"byte_end":439085,"line_start":1715,"line_end":1715,"column_start":12,"column_end":13},"name":"t","qualname":"<ArrayBase<S, D>>::t","value":"pub fn t(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a transposed view of the array.","sig":null,"attributes":[{"value":"/ Return a transposed view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438870,"byte_end":438912,"line_start":1710,"line_end":1710,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438917,"byte_end":438920,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ This is a shorthand for `self.view().reversed_axes()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438925,"byte_end":438983,"line_start":1712,"line_end":1712,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438988,"byte_end":438991,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ See also the more general methods `.reversed_axes()` and `.swap_axes()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":438996,"byte_end":439072,"line_start":1714,"line_end":1714,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439271,"byte_end":439275,"line_start":1723,"line_end":1723,"column_start":12,"column_end":16},"name":"axes","qualname":"<ArrayBase<S, D>>::axes","value":"pub fn axes(&Self) -> Axes<, D>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the length and stride of each axis.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the length and stride of each axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439196,"byte_end":439259,"line_start":1722,"line_end":1722,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439647,"byte_end":439662,"line_start":1736,"line_end":1736,"column_start":12,"column_end":27},"name":"max_stride_axis","qualname":"<ArrayBase<S, D>>::max_stride_axis","value":"pub fn max_stride_axis(&Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return the axis with the greatest stride (by absolute value),\n preferring axes with len > 1.\n","sig":null,"attributes":[{"value":"/ Return the axis with the greatest stride (by absolute value),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439532,"byte_end":439597,"line_start":1734,"line_end":1734,"column_start":5,"column_end":70}},{"value":"/ preferring axes with len > 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439602,"byte_end":439635,"line_start":1735,"line_end":1735,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439843,"byte_end":439854,"line_start":1743,"line_end":1743,"column_start":12,"column_end":23},"name":"invert_axis","qualname":"<ArrayBase<S, D>>::invert_axis","value":"pub fn invert_axis(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the stride of `axis`.","sig":null,"attributes":[{"value":"/ Reverse the stride of `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439739,"byte_end":439772,"line_start":1740,"line_end":1740,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439777,"byte_end":439780,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":439785,"byte_end":439831,"line_start":1742,"line_end":1742,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441644,"byte_end":441654,"line_start":1789,"line_end":1789,"column_start":12,"column_end":22},"name":"merge_axes","qualname":"<ArrayBase<S, D>>::merge_axes","value":"pub fn merge_axes(&mut Self, Axis, Axis) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If possible, merge in the axis `take` to `into`.","sig":null,"attributes":[{"value":"/ If possible, merge in the axis `take` to `into`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440177,"byte_end":440229,"line_start":1754,"line_end":1754,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440234,"byte_end":440237,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ Returns `true` iff the axes are now merged.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440242,"byte_end":440289,"line_start":1756,"line_end":1756,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440294,"byte_end":440297,"line_start":1757,"line_end":1757,"column_start":5,"column_end":8}},{"value":"/ This method merges the axes if movement along the two original axes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440302,"byte_end":440373,"line_start":1758,"line_end":1758,"column_start":5,"column_end":76}},{"value":"/ (moving fastest along the `into` axis) can be equivalently represented","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440378,"byte_end":440452,"line_start":1759,"line_end":1759,"column_start":5,"column_end":79}},{"value":"/ as movement along one (merged) axis. Merging the axes preserves this","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440457,"byte_end":440529,"line_start":1760,"line_end":1760,"column_start":5,"column_end":77}},{"value":"/ order in the merged axis. If `take` and `into` are the same axis, then","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440534,"byte_end":440608,"line_start":1761,"line_end":1761,"column_start":5,"column_end":79}},{"value":"/ the axis is \"merged\" if its length is ≤ 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440613,"byte_end":440661,"line_start":1762,"line_end":1762,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440666,"byte_end":440669,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ If the return value is `true`, then the following hold:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440674,"byte_end":440733,"line_start":1764,"line_end":1764,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440738,"byte_end":440741,"line_start":1765,"line_end":1765,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `into` axis is the product of the original","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440746,"byte_end":440816,"line_start":1766,"line_end":1766,"column_start":5,"column_end":75}},{"value":"/   lengths of the two axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440821,"byte_end":440851,"line_start":1767,"line_end":1767,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440856,"byte_end":440859,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `take` axis is 0 if the product of the original","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440864,"byte_end":440939,"line_start":1769,"line_end":1769,"column_start":5,"column_end":80}},{"value":"/   lengths of the two axes is 0, and 1 otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":440944,"byte_end":440996,"line_start":1770,"line_end":1770,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441001,"byte_end":441004,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ If the return value is `false`, then merging is not possible, and the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441009,"byte_end":441082,"line_start":1772,"line_end":1772,"column_start":5,"column_end":78}},{"value":"/ original shape and strides have been preserved.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441087,"byte_end":441138,"line_start":1773,"line_end":1773,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441143,"byte_end":441146,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ Note that the ordering constraint means that if it's possible to merge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441151,"byte_end":441225,"line_start":1775,"line_end":1775,"column_start":5,"column_end":79}},{"value":"/ `take` into `into`, it's usually not possible to merge `into` into","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441230,"byte_end":441300,"line_start":1776,"line_end":1776,"column_start":5,"column_end":75}},{"value":"/ `take`, and vice versa.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441305,"byte_end":441332,"line_start":1777,"line_end":1777,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441337,"byte_end":441340,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441345,"byte_end":441352,"line_start":1779,"line_end":1779,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441357,"byte_end":441381,"line_start":1780,"line_end":1780,"column_start":5,"column_end":29}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441386,"byte_end":441408,"line_start":1781,"line_end":1781,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441413,"byte_end":441416,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros((2, 3, 4));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441421,"byte_end":441469,"line_start":1783,"line_end":1783,"column_start":5,"column_end":53}},{"value":"/ assert!(a.merge_axes(Axis(1), Axis(2)));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441474,"byte_end":441518,"line_start":1784,"line_end":1784,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 12]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441523,"byte_end":441562,"line_start":1785,"line_end":1785,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441567,"byte_end":441574,"line_start":1786,"line_end":1786,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441579,"byte_end":441582,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an axis is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441587,"byte_end":441632,"line_start":1788,"line_end":1788,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442532,"byte_end":442543,"line_start":1814,"line_end":1814,"column_start":12,"column_end":23},"name":"insert_axis","qualname":"<ArrayBase<S, D>>::insert_axis","value":"pub fn insert_axis(Self, Axis) -> ArrayBase<S, D::Larger>","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis at `axis` and return the result.","sig":null,"attributes":[{"value":"/ Insert new array axis at `axis` and return the result.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441776,"byte_end":441834,"line_start":1793,"line_end":1793,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441839,"byte_end":441842,"line_start":1794,"line_end":1794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441847,"byte_end":441854,"line_start":1795,"line_end":1795,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array3, Axis, arr1, arr2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441859,"byte_end":441903,"line_start":1796,"line_end":1796,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441908,"byte_end":441911,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a row vector (2-D).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441916,"byte_end":441967,"line_start":1798,"line_end":1798,"column_start":5,"column_end":56}},{"value":"/ let a = arr1(&[1, 2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":441972,"byte_end":442001,"line_start":1799,"line_end":1799,"column_start":5,"column_end":34}},{"value":"/ let row = a.insert_axis(Axis(0));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442006,"byte_end":442043,"line_start":1800,"line_end":1800,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(row, arr2(&[[1, 2, 3]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442048,"byte_end":442088,"line_start":1801,"line_end":1801,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442093,"byte_end":442096,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a column vector (2-D).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442101,"byte_end":442155,"line_start":1803,"line_end":1803,"column_start":5,"column_end":59}},{"value":"/ let b = arr1(&[1, 2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442160,"byte_end":442189,"line_start":1804,"line_end":1804,"column_start":5,"column_end":34}},{"value":"/ let col = b.insert_axis(Axis(1));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442194,"byte_end":442231,"line_start":1805,"line_end":1805,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(col, arr2(&[[1], [2], [3]]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442236,"byte_end":442280,"line_start":1806,"line_end":1806,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442285,"byte_end":442288,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ // The new axis always has length 1.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442293,"byte_end":442333,"line_start":1808,"line_end":1808,"column_start":5,"column_end":45}},{"value":"/ let b = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442338,"byte_end":442382,"line_start":1809,"line_end":1809,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.insert_axis(Axis(2)).shape(), &[3, 4, 1, 5]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442387,"byte_end":442449,"line_start":1810,"line_end":1810,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442454,"byte_end":442461,"line_start":1811,"line_end":1811,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442466,"byte_end":442469,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442474,"byte_end":442520,"line_start":1813,"line_end":1813,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443147,"byte_end":443158,"line_start":1834,"line_end":1834,"column_start":12,"column_end":23},"name":"remove_axis","qualname":"<ArrayBase<S, D>>::remove_axis","value":"pub fn remove_axis(Self, Axis) -> ArrayBase<S, D::Smaller> where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Remove array axis `axis` and return the result.","sig":null,"attributes":[{"value":"/ Remove array axis `axis` and return the result.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442916,"byte_end":442967,"line_start":1830,"line_end":1830,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442972,"byte_end":442975,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds or its length is zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":442980,"byte_end":443046,"line_start":1832,"line_end":1832,"column_start":5,"column_end":71}},{"value":"deprecated(note = \"use `.index_axis_move(Axis(_), 0)` instead\", since =\n             \"0.12.1\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443051,"byte_end":443135,"line_start":1833,"line_end":1833,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443936,"byte_end":443942,"line_start":1860,"line_end":1860,"column_start":12,"column_end":18},"name":"assign","qualname":"<ArrayBase<S, D>>::assign","value":"pub fn assign<E: Dimension, S2>(&mut Self, &ArrayBase<S2, E>) where\nS: DataMut, A: Clone, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from `rhs`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from `rhs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443720,"byte_end":443778,"line_start":1855,"line_end":1855,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443783,"byte_end":443786,"line_start":1856,"line_end":1856,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443791,"byte_end":443863,"line_start":1857,"line_end":1857,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443868,"byte_end":443871,"line_start":1858,"line_end":1858,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":443876,"byte_end":443924,"line_start":1859,"line_end":1859,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":444220,"byte_end":444224,"line_start":1870,"line_end":1870,"column_start":12,"column_end":16},"name":"fill","qualname":"<ArrayBase<S, D>>::fill","value":"pub fn fill(&mut Self, A) where S: DataMut, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from element `x`.\n","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from element `x`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":444144,"byte_end":444208,"line_start":1869,"line_end":1869,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446340,"byte_end":446352,"line_start":1936,"line_end":1936,"column_start":12,"column_end":24},"name":"zip_mut_with","qualname":"<ArrayBase<S, D>>::zip_mut_with","value":"pub fn zip_mut_with<B, S2, E, F>(&mut Self, &ArrayBase<S2, E>, F) where\nS: DataMut, S2: Data<Elem = B>, E: Dimension, F: FnMut(&mut A, &B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverse two arrays in unspecified order, in lock step,\n calling the closure `f` on each element pair.","sig":null,"attributes":[{"value":"/ Traverse two arrays in unspecified order, in lock step,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446055,"byte_end":446114,"line_start":1929,"line_end":1929,"column_start":5,"column_end":64}},{"value":"/ calling the closure `f` on each element pair.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446119,"byte_end":446168,"line_start":1930,"line_end":1930,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446173,"byte_end":446176,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446181,"byte_end":446253,"line_start":1932,"line_end":1932,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446258,"byte_end":446261,"line_start":1933,"line_end":1933,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446266,"byte_end":446314,"line_start":1934,"line_end":1934,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446319,"byte_end":446328,"line_start":1935,"line_end":1935,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":447114,"byte_end":447118,"line_start":1958,"line_end":1958,"column_start":12,"column_end":16},"name":"fold","qualname":"<ArrayBase<S, D>>::fold","value":"pub fn fold<'a, F, B>(&'a Self, B, F) -> B where F: FnMut(B, &'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Traverse the array elements and apply a fold,\n returning the resulting value.","sig":null,"attributes":[{"value":"/ Traverse the array elements and apply a fold,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":446957,"byte_end":447006,"line_start":1954,"line_end":1954,"column_start":5,"column_end":54}},{"value":"/ returning the resulting value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":447011,"byte_end":447045,"line_start":1955,"line_end":1955,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":447050,"byte_end":447053,"line_start":1956,"line_end":1956,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":447058,"byte_end":447102,"line_start":1957,"line_end":1957,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448786,"byte_end":448789,"line_start":2011,"line_end":2011,"column_start":12,"column_end":15},"name":"map","qualname":"<ArrayBase<S, D>>::map","value":"pub fn map<'a, B, F>(&'a Self, F) -> Array<B, D> where F: FnMut(&'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by reference on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by reference on each element and create a new array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448288,"byte_end":448352,"line_start":1993,"line_end":1993,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448357,"byte_end":448381,"line_start":1994,"line_end":1994,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448386,"byte_end":448389,"line_start":1995,"line_end":1995,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448394,"byte_end":448438,"line_start":1996,"line_end":1996,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448443,"byte_end":448446,"line_start":1997,"line_end":1997,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448451,"byte_end":448501,"line_start":1998,"line_end":1998,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448506,"byte_end":448509,"line_start":1999,"line_end":1999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448514,"byte_end":448521,"line_start":2000,"line_end":2000,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448526,"byte_end":448548,"line_start":2001,"line_end":2001,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448553,"byte_end":448556,"line_start":2002,"line_end":2002,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448561,"byte_end":448590,"line_start":2003,"line_end":2003,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448595,"byte_end":448626,"line_start":2004,"line_end":2004,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448631,"byte_end":448643,"line_start":2005,"line_end":2005,"column_start":5,"column_end":17}},{"value":"/     a.map(|x| *x >= 1.0)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448648,"byte_end":448676,"line_start":2006,"line_end":2006,"column_start":5,"column_end":33}},{"value":"/     == arr2(&[[false, true],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448681,"byte_end":448713,"line_start":2007,"line_end":2007,"column_start":5,"column_end":37}},{"value":"/               [false, true]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448718,"byte_end":448751,"line_start":2008,"line_end":2008,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448756,"byte_end":448762,"line_start":2009,"line_end":2009,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":448767,"byte_end":448774,"line_start":2010,"line_end":2010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449654,"byte_end":449661,"line_start":2037,"line_end":2037,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<ArrayBase<S, D>>::map_mut","value":"pub fn map_mut<'a, B, F>(&'a mut Self, F) -> Array<B, D> where\nF: FnMut(&'a mut A) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Call `f` on a mutable reference of each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` on a mutable reference of each element and create a new array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449419,"byte_end":449493,"line_start":2031,"line_end":2031,"column_start":5,"column_end":79}},{"value":"/ with the new values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449498,"byte_end":449522,"line_start":2032,"line_end":2032,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449527,"byte_end":449530,"line_start":2033,"line_end":2033,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449535,"byte_end":449579,"line_start":2034,"line_end":2034,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449584,"byte_end":449587,"line_start":2035,"line_end":2035,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":449592,"byte_end":449642,"line_start":2036,"line_end":2036,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450798,"byte_end":450802,"line_start":2072,"line_end":2072,"column_start":12,"column_end":16},"name":"mapv","qualname":"<ArrayBase<S, D>>::mapv","value":"pub fn mapv<B, F>(&Self, F) -> Array<B, D> where F: FnMut(A) -> B, A: Clone,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element and create a new array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450309,"byte_end":450373,"line_start":2055,"line_end":2055,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450378,"byte_end":450402,"line_start":2056,"line_end":2056,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450407,"byte_end":450410,"line_start":2057,"line_end":2057,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450415,"byte_end":450459,"line_start":2058,"line_end":2058,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450464,"byte_end":450467,"line_start":2059,"line_end":2059,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450472,"byte_end":450522,"line_start":2060,"line_end":2060,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450527,"byte_end":450530,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450535,"byte_end":450542,"line_start":2062,"line_end":2062,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450547,"byte_end":450569,"line_start":2063,"line_end":2063,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450574,"byte_end":450577,"line_start":2064,"line_end":2064,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450582,"byte_end":450611,"line_start":2065,"line_end":2065,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450616,"byte_end":450647,"line_start":2066,"line_end":2066,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450652,"byte_end":450664,"line_start":2067,"line_end":2067,"column_start":5,"column_end":17}},{"value":"/     a.mapv(f32::abs) == arr2(&[[0., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450669,"byte_end":450713,"line_start":2068,"line_end":2068,"column_start":5,"column_end":49}},{"value":"/                                [1., 2.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450718,"byte_end":450763,"line_start":2069,"line_end":2069,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450768,"byte_end":450774,"line_start":2070,"line_end":2070,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450779,"byte_end":450786,"line_start":2071,"line_end":2071,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451140,"byte_end":451149,"line_start":2085,"line_end":2085,"column_start":12,"column_end":21},"name":"mapv_into","qualname":"<ArrayBase<S, D>>::mapv_into","value":"pub fn mapv_into<F>(Self, F) -> Self where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element, update the array with the new values\n and return it.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element, update the array with the new values","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":450969,"byte_end":451048,"line_start":2081,"line_end":2081,"column_start":5,"column_end":84}},{"value":"/ and return it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451053,"byte_end":451071,"line_start":2082,"line_end":2082,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451076,"byte_end":451079,"line_start":2083,"line_end":2083,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451084,"byte_end":451128,"line_start":2084,"line_end":2084,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451462,"byte_end":451473,"line_start":2098,"line_end":2098,"column_start":12,"column_end":23},"name":"map_inplace","qualname":"<ArrayBase<S, D>>::map_inplace","value":"pub fn map_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(&mut A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by mutable reference on each element.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by mutable reference on each element.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451311,"byte_end":451393,"line_start":2095,"line_end":2095,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451398,"byte_end":451401,"line_start":2096,"line_end":2096,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451406,"byte_end":451450,"line_start":2097,"line_end":2097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452232,"byte_end":452244,"line_start":2127,"line_end":2127,"column_start":12,"column_end":24},"name":"mapv_inplace","qualname":"<ArrayBase<S, D>>::mapv_inplace","value":"pub fn mapv_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by **v**alue on each element.\n The array is updated with the new values.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by **v**alue on each element.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451606,"byte_end":451680,"line_start":2106,"line_end":2106,"column_start":5,"column_end":79}},{"value":"/ The array is updated with the new values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451685,"byte_end":451730,"line_start":2107,"line_end":2107,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451735,"byte_end":451738,"line_start":2108,"line_end":2108,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451743,"byte_end":451787,"line_start":2109,"line_end":2109,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451792,"byte_end":451795,"line_start":2110,"line_end":2110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451800,"byte_end":451807,"line_start":2111,"line_end":2111,"column_start":5,"column_end":12}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451812,"byte_end":451847,"line_start":2112,"line_end":2112,"column_start":5,"column_end":40}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451852,"byte_end":451874,"line_start":2113,"line_end":2113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451879,"byte_end":451882,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451887,"byte_end":451921,"line_start":2115,"line_end":2115,"column_start":5,"column_end":39}},{"value":"/ let mut a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451926,"byte_end":451959,"line_start":2116,"line_end":2116,"column_start":5,"column_end":38}},{"value":"/                    [-1., 2.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":451964,"byte_end":451999,"line_start":2117,"line_end":2117,"column_start":5,"column_end":40}},{"value":"/ a.mapv_inplace(f32::exp);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452004,"byte_end":452033,"line_start":2118,"line_end":2118,"column_start":5,"column_end":34}},{"value":"/ assert_abs_diff_eq!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452038,"byte_end":452062,"line_start":2119,"line_end":2119,"column_start":5,"column_end":29}},{"value":"/     a,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452067,"byte_end":452077,"line_start":2120,"line_end":2120,"column_start":5,"column_end":15}},{"value":"/     arr2(&[[1.00000, 2.71828],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452082,"byte_end":452116,"line_start":2121,"line_end":2121,"column_start":5,"column_end":39}},{"value":"/            [0.36788, 7.38906]]),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452121,"byte_end":452157,"line_start":2122,"line_end":2122,"column_start":5,"column_end":41}},{"value":"/     epsilon = 1e-5,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452162,"byte_end":452185,"line_start":2123,"line_end":2123,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452190,"byte_end":452196,"line_start":2124,"line_end":2124,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452201,"byte_end":452208,"line_start":2125,"line_end":2125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452213,"byte_end":452220,"line_start":2126,"line_end":2126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452581,"byte_end":452586,"line_start":2140,"line_end":2140,"column_start":12,"column_end":17},"name":"visit","qualname":"<ArrayBase<S, D>>::visit","value":"pub fn visit<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Visit each element in the array by calling `f` by reference\n on each element.","sig":null,"attributes":[{"value":"/ Visit each element in the array by calling `f` by reference","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452424,"byte_end":452487,"line_start":2136,"line_end":2136,"column_start":5,"column_end":68}},{"value":"/ on each element.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452492,"byte_end":452512,"line_start":2137,"line_end":2137,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452517,"byte_end":452520,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452525,"byte_end":452569,"line_start":2139,"line_end":2139,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453013,"byte_end":453022,"line_start":2157,"line_end":2157,"column_start":12,"column_end":21},"name":"fold_axis","qualname":"<ArrayBase<S, D>>::fold_axis","value":"pub fn fold_axis<B, F>(&Self, Axis, B, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(&B, &A) -> B, B: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Fold along an axis.","sig":null,"attributes":[{"value":"/ Fold along an axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452743,"byte_end":452766,"line_start":2149,"line_end":2149,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452771,"byte_end":452774,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ Combine the elements of each subview with the previous using the `fold`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452779,"byte_end":452854,"line_start":2151,"line_end":2151,"column_start":5,"column_end":80}},{"value":"/ function and initial value `init`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452859,"byte_end":452897,"line_start":2152,"line_end":2152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452902,"byte_end":452905,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452910,"byte_end":452946,"line_start":2154,"line_end":2154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452951,"byte_end":452954,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":452959,"byte_end":453001,"line_start":2156,"line_end":2156,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453706,"byte_end":453714,"line_start":2179,"line_end":2179,"column_start":12,"column_end":20},"name":"map_axis","qualname":"<ArrayBase<S, D>>::map_axis","value":"pub fn map_axis<'a, B, F>(&'a Self, Axis, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(ArrayView1) -> B, A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453422,"byte_end":453494,"line_start":2171,"line_end":2171,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453499,"byte_end":453533,"line_start":2172,"line_end":2172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453538,"byte_end":453541,"line_start":2173,"line_end":2173,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453546,"byte_end":453590,"line_start":2174,"line_end":2174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453595,"byte_end":453598,"line_start":2175,"line_end":2175,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453603,"byte_end":453639,"line_start":2176,"line_end":2176,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453644,"byte_end":453647,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":453652,"byte_end":453694,"line_start":2178,"line_end":2178,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454864,"byte_end":454876,"line_start":2210,"line_end":2210,"column_start":12,"column_end":24},"name":"map_axis_mut","qualname":"<ArrayBase<S, D>>::map_axis_mut","value":"pub fn map_axis_mut<'a, B, F>(&'a mut Self, Axis, F) -> Array<B, D::Smaller>\nwhere D: RemoveAxis, F: FnMut(ArrayViewMut1) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.\n 1-dimensional lanes are passed as mutable references to the reducer,\n allowing for side-effects.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454468,"byte_end":454540,"line_start":2200,"line_end":2200,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454545,"byte_end":454579,"line_start":2201,"line_end":2201,"column_start":5,"column_end":39}},{"value":"/ 1-dimensional lanes are passed as mutable references to the reducer,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454584,"byte_end":454656,"line_start":2202,"line_end":2202,"column_start":5,"column_end":77}},{"value":"/ allowing for side-effects.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454661,"byte_end":454691,"line_start":2203,"line_end":2203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454696,"byte_end":454699,"line_start":2204,"line_end":2204,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454704,"byte_end":454748,"line_start":2205,"line_end":2205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454753,"byte_end":454756,"line_start":2206,"line_end":2206,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454761,"byte_end":454797,"line_start":2207,"line_end":2207,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454802,"byte_end":454805,"line_start":2208,"line_end":2208,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":454810,"byte_end":454852,"line_start":2209,"line_end":2209,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456661,"byte_end":456684,"line_start":2263,"line_end":2263,"column_start":12,"column_end":35},"name":"accumulate_axis_inplace","qualname":"<ArrayBase<S, D>>::accumulate_axis_inplace","value":"pub fn accumulate_axis_inplace<F>(&mut Self, Axis, F) where\nF: FnMut(&A, &mut A) -> (), S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Iterates over pairs of consecutive elements along the axis.","sig":null,"attributes":[{"value":"/ Iterates over pairs of consecutive elements along the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":455737,"byte_end":455800,"line_start":2235,"line_end":2235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":455805,"byte_end":455808,"line_start":2236,"line_end":2236,"column_start":5,"column_end":8}},{"value":"/ The first argument to the closure is an element, and the second","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":455813,"byte_end":455880,"line_start":2237,"line_end":2237,"column_start":5,"column_end":72}},{"value":"/ argument is the next element along the axis. Iteration is guaranteed to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":455885,"byte_end":455960,"line_start":2238,"line_end":2238,"column_start":5,"column_end":80}},{"value":"/ proceed in order along the specified axis, but in all other respects","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":455965,"byte_end":456037,"line_start":2239,"line_end":2239,"column_start":5,"column_end":77}},{"value":"/ the iteration order is unspecified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456042,"byte_end":456081,"line_start":2240,"line_end":2240,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456086,"byte_end":456089,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456094,"byte_end":456107,"line_start":2242,"line_end":2242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456112,"byte_end":456115,"line_start":2243,"line_end":2243,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used to compute the cumulative sum along an","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456120,"byte_end":456192,"line_start":2244,"line_end":2244,"column_start":5,"column_end":77}},{"value":"/ axis:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456197,"byte_end":456206,"line_start":2245,"line_end":2245,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456211,"byte_end":456214,"line_start":2246,"line_end":2246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456219,"byte_end":456226,"line_start":2247,"line_end":2247,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{array, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456231,"byte_end":456262,"line_start":2248,"line_end":2248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456267,"byte_end":456270,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ let mut arr = array![","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456275,"byte_end":456300,"line_start":2250,"line_end":2250,"column_start":5,"column_end":30}},{"value":"/     [[1, 2], [3, 4], [5, 6]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456305,"byte_end":456338,"line_start":2251,"line_end":2251,"column_start":5,"column_end":38}},{"value":"/     [[7, 8], [9, 10], [11, 12]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456343,"byte_end":456379,"line_start":2252,"line_end":2252,"column_start":5,"column_end":41}},{"value":"/ ];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456384,"byte_end":456390,"line_start":2253,"line_end":2253,"column_start":5,"column_end":11}},{"value":"/ arr.accumulate_axis_inplace(Axis(1), |&prev, curr| *curr += prev);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456395,"byte_end":456465,"line_start":2254,"line_end":2254,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456470,"byte_end":456485,"line_start":2255,"line_end":2255,"column_start":5,"column_end":20}},{"value":"/     arr,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456490,"byte_end":456502,"line_start":2256,"line_end":2256,"column_start":5,"column_end":17}},{"value":"/     array![","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456507,"byte_end":456522,"line_start":2257,"line_end":2257,"column_start":5,"column_end":20}},{"value":"/         [[1, 2], [4, 6], [9, 12]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456527,"byte_end":456565,"line_start":2258,"line_end":2258,"column_start":5,"column_end":43}},{"value":"/         [[7, 8], [16, 18], [27, 30]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456570,"byte_end":456611,"line_start":2259,"line_end":2259,"column_start":5,"column_end":46}},{"value":"/     ],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456616,"byte_end":456626,"line_start":2260,"line_end":2260,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456631,"byte_end":456637,"line_start":2261,"line_end":2261,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":456642,"byte_end":456649,"line_start":2262,"line_end":2262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458388,"byte_end":458399,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<Array<A, Ix0>>::into_scalar","value":"pub fn into_scalar(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the single element in the array without cloning it.","sig":null,"attributes":[{"value":"/ Returns the single element in the array without cloning it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458000,"byte_end":458063,"line_start":9,"line_end":9,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458068,"byte_end":458071,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458076,"byte_end":458083,"line_start":11,"line_end":11,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458088,"byte_end":458120,"line_start":12,"line_end":12,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458125,"byte_end":458128,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458133,"byte_end":458172,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458177,"byte_end":458212,"line_start":15,"line_end":15,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458217,"byte_end":458232,"line_start":16,"line_end":16,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458237,"byte_end":458240,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458245,"byte_end":458284,"line_start":18,"line_end":18,"column_start":5,"column_end":44}},{"value":"/ let scalar: Foo = array.into_scalar();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458289,"byte_end":458331,"line_start":19,"line_end":19,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, Foo);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458336,"byte_end":458364,"line_start":20,"line_end":20,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":458369,"byte_end":458376,"line_start":21,"line_end":21,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459698,"byte_end":459710,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"into_raw_vec","qualname":"<Array<A, D>>::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<A>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector of the elements in the array, in the way they are\n stored internally.","sig":null,"attributes":[{"value":"/ Return a vector of the elements in the array, in the way they are","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459421,"byte_end":459490,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ stored internally.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459495,"byte_end":459517,"line_start":52,"line_end":52,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459522,"byte_end":459525,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the array is in standard memory layout, the logical element order","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459530,"byte_end":459602,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ of the array (`.iter()` order) and of the returned vector will be the same.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459607,"byte_end":459686,"line_start":55,"line_end":55,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_1d.rs","byte_start":460354,"byte_end":460360,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<ArrayBase<S, Ix1>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<A> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an vector with the elements of the one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return an vector with the elements of the one-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_1d.rs","byte_start":460274,"byte_end":460342,"line_start":17,"line_end":17,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461223,"byte_end":461226,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"row","qualname":"<ArrayBase<S, Ix2>>::row","value":"pub fn row(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of row `index`.","sig":null,"attributes":[{"value":"/ Return an array view of row `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461115,"byte_end":461155,"line_start":17,"line_end":17,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461160,"byte_end":461163,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461168,"byte_end":461211,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461465,"byte_end":461472,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ArrayBase<S, Ix2>>::row_mut","value":"pub fn row_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of row `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of row `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461350,"byte_end":461397,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461402,"byte_end":461405,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461410,"byte_end":461453,"line_start":29,"line_end":29,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461703,"byte_end":461708,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"nrows","qualname":"<ArrayBase<S, Ix2>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461610,"byte_end":461691,"line_start":37,"line_end":37,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461933,"byte_end":461937,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"rows","qualname":"<ArrayBase<S, Ix2>>::rows","value":"pub fn rows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461767,"byte_end":461848,"line_start":42,"line_end":42,"column_start":5,"column_end":86}},{"value":"deprecated(note = \"Renamed to .nrows(), please use the new name\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461853,"byte_end":461921,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462099,"byte_end":462105,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"column","qualname":"<ArrayBase<S, Ix2>>::column","value":"pub fn column(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of column `index`.","sig":null,"attributes":[{"value":"/ Return an array view of column `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461988,"byte_end":462031,"line_start":48,"line_end":48,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462036,"byte_end":462039,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462044,"byte_end":462087,"line_start":50,"line_end":50,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462347,"byte_end":462357,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"column_mut","qualname":"<ArrayBase<S, Ix2>>::column_mut","value":"pub fn column_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of column `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of column `index`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462229,"byte_end":462279,"line_start":58,"line_end":58,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462284,"byte_end":462287,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462292,"byte_end":462335,"line_start":60,"line_end":60,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462591,"byte_end":462596,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"ncols","qualname":"<ArrayBase<S, Ix2>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462495,"byte_end":462579,"line_start":68,"line_end":68,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462824,"byte_end":462828,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"cols","qualname":"<ArrayBase<S, Ix2>>::cols","value":"pub fn cols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462655,"byte_end":462739,"line_start":73,"line_end":73,"column_start":5,"column_end":89}},{"value":"deprecated(note = \"Renamed to .ncols(), please use the new name\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462744,"byte_end":462812,"line_start":74,"line_end":74,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462947,"byte_end":462956,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_square","qualname":"<ArrayBase<S, Ix2>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the array is square, false otherwise.\n","sig":null,"attributes":[{"value":"/ Return true if the array is square, false otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":462879,"byte_end":462935,"line_start":79,"line_end":79,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464065,"byte_end":464084,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"insert_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::insert_axis_inplace","value":"pub fn insert_axis_inplace(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis of length 1 at `axis`, modifying the shape and\n strides in-place.","sig":null,"attributes":[{"value":"/ Insert new array axis of length 1 at `axis`, modifying the shape and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463555,"byte_end":463627,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ strides in-place.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463632,"byte_end":463653,"line_start":18,"line_end":18,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463658,"byte_end":463661,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463666,"byte_end":463710,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463715,"byte_end":463718,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463723,"byte_end":463730,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr2, arr3};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463735,"byte_end":463771,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463776,"byte_end":463779,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463784,"byte_end":463841,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463846,"byte_end":463881,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463886,"byte_end":463889,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ a.insert_axis_inplace(Axis(1));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463894,"byte_end":463929,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a, arr3(&[[[1, 2, 3]], [[4, 5, 6]]]).into_dyn());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463934,"byte_end":463998,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464003,"byte_end":464041,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464046,"byte_end":464053,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464787,"byte_end":464805,"line_start":53,"line_end":53,"column_start":12,"column_end":30},"name":"index_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::index_axis_inplace","value":"pub fn index_axis_inplace(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis,\n modifying the shape and strides in-place.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464269,"byte_end":464340,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ modifying the shape and strides in-place.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464345,"byte_end":464390,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464395,"byte_end":464398,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464403,"byte_end":464456,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464461,"byte_end":464464,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464469,"byte_end":464476,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr1, arr2};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464481,"byte_end":464517,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464522,"byte_end":464525,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464530,"byte_end":464587,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464592,"byte_end":464627,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464632,"byte_end":464635,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ a.index_axis_inplace(Axis(1), 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464640,"byte_end":464677,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a, arr1(&[2, 5]).into_dyn());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464682,"byte_end":464726,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464731,"byte_end":464763,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":464768,"byte_end":464775,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465919,"byte_end":465922,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"sum","qualname":"<ArrayBase<S, D>>::sum","value":"pub fn sum(&Self) -> A where A: Clone + Add<Output = A> + num_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465690,"byte_end":465738,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465743,"byte_end":465746,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465751,"byte_end":465758,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465763,"byte_end":465785,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465790,"byte_end":465793,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465798,"byte_end":465826,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465831,"byte_end":465861,"line_start":30,"line_end":30,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.sum(), 10.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465866,"byte_end":465895,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465900,"byte_end":465907,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466920,"byte_end":466924,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"mean","qualname":"<ArrayBase<S, D>>::mean","value":"pub fn mean(&Self) -> Option<A> where A: Clone + FromPrimitive + Add<Output =\nA> + Div<Output = A> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the [arithmetic mean] x̅ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [arithmetic mean] x̅ of all elements in the array:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466497,"byte_end":466564,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466569,"byte_end":466572,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466577,"byte_end":466588,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466593,"byte_end":466606,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466611,"byte_end":466635,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466640,"byte_end":466654,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466659,"byte_end":466666,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466671,"byte_end":466674,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `None` is returned.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466679,"byte_end":466725,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466730,"byte_end":466733,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466738,"byte_end":466827,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466832,"byte_end":466835,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ [arithmetic mean]: https://en.wikipedia.org/wiki/Arithmetic_mean","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":466840,"byte_end":466908,"line_start":63,"line_end":63,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467567,"byte_end":467577,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"scalar_sum","qualname":"<ArrayBase<S, D>>::scalar_sum","value":"pub fn scalar_sum(&Self) -> A where A: Clone + Add<Output = A> +\nnum_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467336,"byte_end":467384,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467389,"byte_end":467392,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ *This method has been renamed to `.sum()` and will be deprecated in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467397,"byte_end":467472,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ next version.*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467477,"byte_end":467495,"line_start":81,"line_end":81,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467928,"byte_end":467935,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"product","qualname":"<ArrayBase<S, D>>::product","value":"pub fn product(&Self) -> A where A: Clone + Mul<Output = A> + num_traits::One","parent":null,"children":[],"decl_id":null,"docs":" Return the product of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the product of all elements in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467691,"byte_end":467743,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467748,"byte_end":467751,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467756,"byte_end":467763,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467768,"byte_end":467790,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467795,"byte_end":467798,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467803,"byte_end":467831,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467836,"byte_end":467866,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.product(), 24.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467871,"byte_end":467904,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":467909,"byte_end":467916,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468986,"byte_end":468994,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"sum_axis","qualname":"<ArrayBase<S, D>>::sum_axis","value":"pub fn sum_axis(&Self, Axis) -> Array<A, D::Smaller> where A: Clone + Zero +\nAdd<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return sum along `axis`.","sig":null,"attributes":[{"value":"/ Return sum along `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468505,"byte_end":468533,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468538,"byte_end":468541,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468546,"byte_end":468553,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468558,"byte_end":468604,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468609,"byte_end":468612,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468617,"byte_end":468649,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468654,"byte_end":468688,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468693,"byte_end":468705,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/     a.sum_axis(Axis(0)) == aview1(&[5., 7., 9.]) &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468710,"byte_end":468765,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/     a.sum_axis(Axis(1)) == aview1(&[6., 15.]) &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468770,"byte_end":468822,"line_start":126,"line_end":126,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468827,"byte_end":468830,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     a.sum_axis(Axis(0)).sum_axis(Axis(0)) == aview0(&21.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468835,"byte_end":468896,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468901,"byte_end":468907,"line_start":129,"line_end":129,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468912,"byte_end":468919,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468924,"byte_end":468927,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":468932,"byte_end":468974,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470366,"byte_end":470375,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"mean_axis","qualname":"<ArrayBase<S, D>>::mean_axis","value":"pub fn mean_axis(&Self, Axis) -> Option<Array<A, D::Smaller>> where A: Clone +\nZero + FromPrimitive + Add<Output = A> + Div<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return mean along `axis`.","sig":null,"attributes":[{"value":"/ Return mean along `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469719,"byte_end":469748,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469753,"byte_end":469756,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the length of the axis is zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469761,"byte_end":469813,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469818,"byte_end":469821,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `A::from_usize()`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469826,"byte_end":469891,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ fails for the axis length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469896,"byte_end":469926,"line_start":161,"line_end":161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469931,"byte_end":469934,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469939,"byte_end":469946,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":469951,"byte_end":469997,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470002,"byte_end":470005,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470010,"byte_end":470042,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470047,"byte_end":470081,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470086,"byte_end":470098,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/     a.mean_axis(Axis(0)).unwrap() == aview1(&[2.5, 3.5, 4.5]) &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470103,"byte_end":470171,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/     a.mean_axis(Axis(1)).unwrap() == aview1(&[2., 5.]) &&","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470176,"byte_end":470237,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470242,"byte_end":470245,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     a.mean_axis(Axis(0)).unwrap().mean_axis(Axis(0)).unwrap() == aview0(&3.5)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470250,"byte_end":470331,"line_start":172,"line_end":172,"column_start":5,"column_end":86}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470336,"byte_end":470342,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470347,"byte_end":470354,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":472158,"byte_end":472166,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"var_axis","qualname":"<ArrayBase<S, D>>::var_axis","value":"pub fn var_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return variance along `axis`.","sig":null,"attributes":[{"value":"/ Return variance along `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470890,"byte_end":470923,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470928,"byte_end":470931,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470936,"byte_end":470992,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":470997,"byte_end":471050,"line_start":194,"line_end":194,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471055,"byte_end":471058,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471063,"byte_end":471133,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471138,"byte_end":471210,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471215,"byte_end":471265,"line_start":198,"line_end":198,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471270,"byte_end":471273,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471278,"byte_end":471309,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471314,"byte_end":471317,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471322,"byte_end":471333,"line_start":202,"line_end":202,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471338,"byte_end":471365,"line_start":203,"line_end":203,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471370,"byte_end":471430,"line_start":204,"line_end":204,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471435,"byte_end":471463,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471468,"byte_end":471475,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471480,"byte_end":471483,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471488,"byte_end":471497,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471502,"byte_end":471505,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471510,"byte_end":471521,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471526,"byte_end":471539,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471544,"byte_end":471568,"line_start":212,"line_end":212,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471573,"byte_end":471587,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471592,"byte_end":471599,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471604,"byte_end":471607,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471612,"byte_end":471650,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471655,"byte_end":471658,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471663,"byte_end":471736,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471741,"byte_end":471811,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471816,"byte_end":471849,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471854,"byte_end":471857,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471862,"byte_end":471875,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471880,"byte_end":471883,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471888,"byte_end":471895,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471900,"byte_end":471938,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471943,"byte_end":471946,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471951,"byte_end":471979,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":471984,"byte_end":472012,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":472017,"byte_end":472047,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let var = a.var_axis(Axis(0), 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":472052,"byte_end":472090,"line_start":230,"line_end":230,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(var, aview1(&[4., 4.]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":472095,"byte_end":472134,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":472139,"byte_end":472146,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474673,"byte_end":474681,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"std_axis","qualname":"<ArrayBase<S, D>>::std_axis","value":"pub fn std_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation along `axis`.","sig":null,"attributes":[{"value":"/ Return standard deviation along `axis`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473282,"byte_end":473325,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473330,"byte_end":473333,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473338,"byte_end":473400,"line_start":261,"line_end":261,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473405,"byte_end":473480,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473485,"byte_end":473488,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473493,"byte_end":473563,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473568,"byte_end":473644,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473649,"byte_end":473715,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473720,"byte_end":473723,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473728,"byte_end":473769,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473774,"byte_end":473777,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473782,"byte_end":473793,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473798,"byte_end":473845,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473850,"byte_end":473920,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473925,"byte_end":473972,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473977,"byte_end":473984,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473989,"byte_end":473992,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":473997,"byte_end":474006,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474011,"byte_end":474014,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474019,"byte_end":474030,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474035,"byte_end":474048,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474053,"byte_end":474077,"line_start":280,"line_end":280,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474082,"byte_end":474096,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474101,"byte_end":474108,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474113,"byte_end":474116,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474121,"byte_end":474159,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474164,"byte_end":474167,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474172,"byte_end":474245,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474250,"byte_end":474320,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474325,"byte_end":474358,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474363,"byte_end":474366,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474371,"byte_end":474384,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474389,"byte_end":474392,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474397,"byte_end":474404,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474409,"byte_end":474447,"line_start":293,"line_end":293,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474452,"byte_end":474455,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474460,"byte_end":474488,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474493,"byte_end":474521,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474526,"byte_end":474556,"line_start":297,"line_end":297,"column_start":5,"column_end":35}},{"value":"/ let stddev = a.std_axis(Axis(0), 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474561,"byte_end":474602,"line_start":298,"line_end":298,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stddev, aview1(&[2., 2.]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474607,"byte_end":474649,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474654,"byte_end":474661,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":475307,"byte_end":475316,"line_start":319,"line_end":319,"column_start":12,"column_end":21},"name":"all_close","qualname":"<ArrayBase<S, D>>::all_close","value":"pub fn all_close<S2, E>(&Self, &ArrayBase<S2, E>, A) -> bool where A: Float,\nS2: Data<Elem = A>, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the arrays' elementwise differences are all within\n the given absolute tolerance, `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if the arrays' elementwise differences are all within","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474876,"byte_end":474947,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the given absolute tolerance, `false` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":474952,"byte_end":475004,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":475009,"byte_end":475012,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":475017,"byte_end":475089,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":475094,"byte_end":475097,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting to the same shape isn’t possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":475102,"byte_end":475168,"line_start":314,"line_end":314,"column_start":5,"column_end":69}},{"value":"deprecated(note =\n             \"Use `abs_diff_eq` - it requires the `approx` crate feature\",\n             since = \"0.13.0\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":475173,"byte_end":475295,"line_start":315,"line_end":318,"column_start":5,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970}],"decl_id":null,"docs":" Linear algebra.\n","sig":null,"attributes":[{"value":"/ Linear algebra.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/mod.rs","byte_start":476145,"byte_end":476164,"line_start":9,"line_end":9,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478304,"byte_end":478307,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix1>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform dot product or matrix multiplication of arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform dot product or matrix multiplication of arrays `self` and `rhs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477420,"byte_end":477496,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477501,"byte_end":477504,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477509,"byte_end":477578,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477583,"byte_end":477586,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is one-dimensional, then the operation is a vector dot","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477591,"byte_end":477658,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ product, which is the sum of the elementwise products (no conjugation","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477663,"byte_end":477736,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ of complex operands, and thus not their inner product). In this case,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477741,"byte_end":477814,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ `self` and `rhs` must be the same length.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477819,"byte_end":477864,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477869,"byte_end":477872,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is two-dimensional, then the operation is matrix","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477877,"byte_end":477938,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"/ multiplication, where `self` is treated as a row vector. In this case,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477943,"byte_end":478017,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ if `self` is shape *M*, then `rhs` is shape *M* × *N* and the result is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478022,"byte_end":478098,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ shape *N*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478103,"byte_end":478117,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478122,"byte_end":478125,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the array shapes are incompatible.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478130,"byte_end":478186,"line_start":56,"line_end":56,"column_start":5,"column_end":61}},{"value":"/ *Note:* If enabled, uses blas `dot` for elements of `f32, f64` when memory","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478191,"byte_end":478269,"line_start":57,"line_end":57,"column_start":5,"column_end":83}},{"value":"/ layout allows.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":478274,"byte_end":478292,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481512,"byte_end":481515,"line_start":161,"line_end":161,"column_start":11,"column_end":14},"name":"Dot","qualname":"::linalg::impl_linalg::Dot","value":"Dot<Rhs>","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989}],"decl_id":null,"docs":" Matrix Multiplication","sig":null,"attributes":[{"value":"/ Matrix Multiplication","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481385,"byte_end":481410,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481411,"byte_end":481414,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ For two-dimensional arrays, the dot method computes the matrix","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481415,"byte_end":481481,"line_start":159,"line_end":159,"column_start":1,"column_end":67}},{"value":"/ multiplication.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481482,"byte_end":481501,"line_start":160,"line_end":160,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":2988},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481634,"byte_end":481640,"line_start":165,"line_end":165,"column_start":10,"column_end":16},"name":"Output","qualname":"::linalg::impl_linalg::Dot::Output","value":"type Output;","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":" The result of the operation.","sig":null,"attributes":[{"value":"/ The result of the operation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481527,"byte_end":481559,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481564,"byte_end":481567,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ For two-dimensional arrays: a rectangular array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481572,"byte_end":481624,"line_start":164,"line_end":164,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481649,"byte_end":481652,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"dot","qualname":"::linalg::impl_linalg::Dot::dot","value":"pub fn dot(&Self, &Rhs) -> Self::Output","parent":{"krate":0,"index":2986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":484028,"byte_end":484031,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix2>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform matrix multiplication of rectangular arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform matrix multiplication of rectangular arrays `self` and `rhs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":482983,"byte_end":483056,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483061,"byte_end":483064,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483069,"byte_end":483138,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483143,"byte_end":483146,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ If Rhs is two-dimensional, they array shapes must agree in the way that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483151,"byte_end":483226,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ if `self` is *M* × *N*, then `rhs` is *N* × *K*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483231,"byte_end":483285,"line_start":221,"line_end":221,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483290,"byte_end":483293,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Return a result array with shape *M* × *K*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483298,"byte_end":483346,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483351,"byte_end":483354,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible or the number of elements in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483359,"byte_end":483433,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ result would overflow `isize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483438,"byte_end":483472,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483477,"byte_end":483480,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ *Note:* If enabled, uses blas `gemv/gemm` for elements of `f32, f64`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483485,"byte_end":483557,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/ when memory layout allows. The default matrixmultiply backend","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483562,"byte_end":483627,"line_start":229,"line_end":229,"column_start":5,"column_end":70}},{"value":"/ is otherwise used for `f32, f64` for all memory layouts.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483632,"byte_end":483692,"line_start":230,"line_end":230,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483697,"byte_end":483700,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483705,"byte_end":483712,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483717,"byte_end":483739,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483744,"byte_end":483747,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483752,"byte_end":483780,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/                [0., 1.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483785,"byte_end":483815,"line_start":236,"line_end":236,"column_start":5,"column_end":35}},{"value":"/ let b = arr2(&[[1., 2.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483820,"byte_end":483848,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/                [2., 3.]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483853,"byte_end":483883,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483888,"byte_end":483891,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483896,"byte_end":483908,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/     a.dot(&b) == arr2(&[[5., 8.],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483913,"byte_end":483950,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/                         [2., 3.]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483955,"byte_end":483993,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":483998,"byte_end":484004,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":484009,"byte_end":484016,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":487086,"byte_end":487096,"line_start":347,"line_end":347,"column_start":12,"column_end":22},"name":"scaled_add","qualname":"<ArrayBase<S, D>>::scaled_add","value":"pub fn scaled_add<S2, E>(&mut Self, A, &ArrayBase<S2, E>) where S: DataMut,\nS2: Data<Elem = A>, A: LinalgScalar, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Perform the operation `self += alpha * rhs` efficiently, where\n `alpha` is a scalar and `rhs` is another array. This operation is\n also known as `axpy` in BLAS.","sig":null,"attributes":[{"value":"/ Perform the operation `self += alpha * rhs` efficiently, where","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486750,"byte_end":486816,"line_start":340,"line_end":340,"column_start":5,"column_end":71}},{"value":"/ `alpha` is a scalar and `rhs` is another array. This operation is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486821,"byte_end":486890,"line_start":341,"line_end":341,"column_start":5,"column_end":74}},{"value":"/ also known as `axpy` in BLAS.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486895,"byte_end":486928,"line_start":342,"line_end":342,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486933,"byte_end":486936,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486941,"byte_end":487013,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":487018,"byte_end":487021,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":487026,"byte_end":487074,"line_start":346,"line_end":346,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494063,"byte_end":494078,"line_start":558,"line_end":558,"column_start":8,"column_end":23},"name":"general_mat_mul","qualname":"::linalg::impl_linalg::general_mat_mul","value":"pub fn general_mat_mul<A, S1, S2,\n                       S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix2>, A,\n                           &mut ArrayBase<S3, Ix2>) where S1: Data<Elem = A>,\nS2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-matrix multiplication.","sig":null,"attributes":[{"value":"/ General matrix-matrix multiplication.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493598,"byte_end":493639,"line_start":547,"line_end":547,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493640,"byte_end":493643,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ Compute C ← α A B + β C","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493644,"byte_end":493675,"line_start":549,"line_end":549,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493676,"byte_end":493679,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ The array shapes must agree in the way that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493680,"byte_end":493727,"line_start":551,"line_end":551,"column_start":1,"column_end":48}},{"value":"/ if `a` is *M* × *N*, then `b` is *N* × *K* and `c` is *M* × *K*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493728,"byte_end":493799,"line_start":552,"line_end":552,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493800,"byte_end":493803,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493804,"byte_end":493859,"line_start":554,"line_end":554,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemm` for elements of `f32, f64` when memory","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493860,"byte_end":493939,"line_start":555,"line_end":555,"column_start":1,"column_end":80}},{"value":"/ layout allows.  The default matrixmultiply backend is otherwise used for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":493940,"byte_end":494016,"line_start":556,"line_end":556,"column_start":1,"column_end":77}},{"value":"/ `f32, f64` for all memory layouts.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494017,"byte_end":494055,"line_start":557,"line_end":557,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":495002,"byte_end":495021,"line_start":590,"line_end":590,"column_start":8,"column_end":27},"name":"general_mat_vec_mul","qualname":"::linalg::impl_linalg::general_mat_vec_mul","value":"pub fn general_mat_vec_mul<A, S1, S2,\n                           S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix1>, A,\n                               &mut ArrayBase<S3, Ix1>) where S1: Data<Elem =\nA>, S2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-vector multiplication.","sig":null,"attributes":[{"value":"/ General matrix-vector multiplication.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494583,"byte_end":494624,"line_start":579,"line_end":579,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494625,"byte_end":494628,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ Compute y ← α A x + β y","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494629,"byte_end":494660,"line_start":581,"line_end":581,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494661,"byte_end":494664,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ where A is a *M* × *N* matrix and x is an *N*-element column vector and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494665,"byte_end":494741,"line_start":583,"line_end":583,"column_start":1,"column_end":76}},{"value":"/ y an *M*-element column vector (one dimensional arrays).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494742,"byte_end":494802,"line_start":584,"line_end":584,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494803,"byte_end":494806,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494807,"byte_end":494862,"line_start":586,"line_end":586,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemv` for elements of `f32, f64` when memory","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494863,"byte_end":494942,"line_start":587,"line_end":587,"column_start":1,"column_end":80}},{"value":"/ layout allows.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494943,"byte_end":494961,"line_start":588,"line_end":588,"column_start":1,"column_end":19}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":494962,"byte_end":494994,"line_start":589,"line_end":589,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503579,"byte_end":503592,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"ScalarOperand","qualname":"::impl_ops::ScalarOperand","value":"ScalarOperand: 'static + Clone","parent":null,"children":[],"decl_id":null,"docs":" Elements that can be used as direct operands in arithmetic with arrays.","sig":null,"attributes":[{"value":"/ Elements that can be used as direct operands in arithmetic with arrays.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502496,"byte_end":502571,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502572,"byte_end":502575,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For example, `f64` is a `ScalarOperand` which means that for an array `a`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502576,"byte_end":502654,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ arithmetic like `a + 1.0`, and, `a * 2.`, and `a += 3.` are allowed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502655,"byte_end":502727,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502728,"byte_end":502731,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In the description below, let `A` be an array or array view,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502732,"byte_end":502796,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ let `B` be an array with owned data,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502797,"byte_end":502837,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ and let `C` be an array with mutable data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502838,"byte_end":502884,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502885,"byte_end":502888,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `ScalarOperand` determines for which scalars `K` operations `&A @ K`, and `B @ K`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502889,"byte_end":502975,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ and `C @= K` are defined, as ***right hand side operands***, for applicable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":502976,"byte_end":503055,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ arithmetic operators (denoted `@`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503056,"byte_end":503095,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503096,"byte_end":503099,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ***Left hand side*** scalar operands are not related to this trait","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503100,"byte_end":503170,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ (they need one `impl` per concrete scalar type); but they are still","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503171,"byte_end":503242,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ implemented for the same types, allowing operations","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503243,"byte_end":503298,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ `K @ &A`, and `K @ B` for primitive numeric types `K`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503299,"byte_end":503357,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503358,"byte_end":503361,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait ***does not*** limit which elements can be stored in an array in general.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503362,"byte_end":503450,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ Non-`ScalarOperand` types can still participate in arithmetic as array elements in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503451,"byte_end":503537,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ in array-array operations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503538,"byte_end":503568,"line_start":31,"line_end":31,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518137,"byte_end":518147,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayView>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-only array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-only array view borrowing its data from a slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517337,"byte_end":517403,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517408,"byte_end":517411,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Checks whether `shape` are compatible with the slice's","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517416,"byte_end":517474,"line_start":22,"line_end":22,"column_start":5,"column_end":63}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517479,"byte_end":517528,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517533,"byte_end":517536,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517541,"byte_end":517548,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517553,"byte_end":517580,"line_start":26,"line_end":26,"column_start":5,"column_end":32}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517585,"byte_end":517607,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517612,"byte_end":517642,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517647,"byte_end":517650,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ let s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517655,"byte_end":517710,"line_start":30,"line_end":30,"column_start":5,"column_end":60}},{"value":"/ let a = ArrayView::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517715,"byte_end":517778,"line_start":31,"line_end":31,"column_start":5,"column_end":68}},{"value":"/                               &s).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517783,"byte_end":517830,"line_start":32,"line_end":32,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517835,"byte_end":517838,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517843,"byte_end":517855,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[0, 2],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517860,"byte_end":517888,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517893,"byte_end":517921,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517926,"byte_end":517956,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517961,"byte_end":517989,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517994,"byte_end":518022,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518027,"byte_end":518058,"line_start":40,"line_end":40,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518063,"byte_end":518069,"line_start":41,"line_end":41,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518074,"byte_end":518113,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518118,"byte_end":518125,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520826,"byte_end":520840,"line_start":100,"line_end":100,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayView>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayView<A, D>` from shape information and a raw pointer to\n the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayView<A, D>` from shape information and a raw pointer to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518783,"byte_end":518858,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ the elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518863,"byte_end":518880,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518885,"byte_end":518888,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Unsafe because caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518893,"byte_end":518968,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518973,"byte_end":518976,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":518981,"byte_end":519055,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be not mutably","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519060,"byte_end":519128,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/   aliased for the duration of `'a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519133,"byte_end":519172,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519177,"byte_end":519180,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519185,"byte_end":519249,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519254,"byte_end":519288,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519293,"byte_end":519296,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519301,"byte_end":519372,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519377,"byte_end":519448,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519453,"byte_end":519527,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519532,"byte_end":519535,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519540,"byte_end":519561,"line_start":79,"line_end":79,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519566,"byte_end":519569,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519574,"byte_end":519649,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519654,"byte_end":519729,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519734,"byte_end":519812,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519817,"byte_end":519895,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519900,"byte_end":519966,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519971,"byte_end":519974,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":519979,"byte_end":520054,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520059,"byte_end":520134,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520139,"byte_end":520214,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520219,"byte_end":520288,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520293,"byte_end":520296,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520301,"byte_end":520374,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520379,"byte_end":520454,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520459,"byte_end":520537,"line_start":94,"line_end":94,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520542,"byte_end":520617,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520622,"byte_end":520625,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520630,"byte_end":520702,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520707,"byte_end":520710,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":520715,"byte_end":520807,"line_start":99,"line_end":99,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521977,"byte_end":521987,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayViewMut>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a mut [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-write array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-write array view borrowing its data from a slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521113,"byte_end":521180,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521185,"byte_end":521188,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Checks whether `dim` and `strides` are compatible with the slice's","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521193,"byte_end":521263,"line_start":115,"line_end":115,"column_start":5,"column_end":75}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521268,"byte_end":521317,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521322,"byte_end":521325,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521330,"byte_end":521337,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayViewMut;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521342,"byte_end":521372,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521377,"byte_end":521399,"line_start":120,"line_end":120,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521404,"byte_end":521434,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521439,"byte_end":521442,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let mut s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521447,"byte_end":521506,"line_start":123,"line_end":123,"column_start":5,"column_end":64}},{"value":"/ let mut a = ArrayViewMut::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521511,"byte_end":521581,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/                                      &mut s).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521586,"byte_end":521644,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521649,"byte_end":521652,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ a[[0, 0, 0]] = 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521657,"byte_end":521678,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/ assert!(","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521683,"byte_end":521695,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1, 2],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521700,"byte_end":521728,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521733,"byte_end":521761,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521766,"byte_end":521796,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521801,"byte_end":521829,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521834,"byte_end":521862,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521867,"byte_end":521898,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521903,"byte_end":521909,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521914,"byte_end":521953,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521958,"byte_end":521965,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524669,"byte_end":524683,"line_start":194,"line_end":194,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayViewMut>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayViewMut<A, D>` from shape information and a\n raw pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayViewMut<A, D>` from shape information and a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522635,"byte_end":522698,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/ raw pointer to the elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522703,"byte_end":522735,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522740,"byte_end":522743,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Unsafe because caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522748,"byte_end":522823,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522828,"byte_end":522831,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522836,"byte_end":522910,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be aliased for the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522915,"byte_end":522987,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/   duration of `'a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":522992,"byte_end":523015,"line_start":164,"line_end":164,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523020,"byte_end":523023,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523028,"byte_end":523092,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523097,"byte_end":523131,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523136,"byte_end":523139,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523144,"byte_end":523215,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523220,"byte_end":523291,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523296,"byte_end":523370,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523375,"byte_end":523378,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523383,"byte_end":523404,"line_start":173,"line_end":173,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523409,"byte_end":523412,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523417,"byte_end":523492,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523497,"byte_end":523572,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523577,"byte_end":523655,"line_start":177,"line_end":177,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523660,"byte_end":523738,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523743,"byte_end":523809,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523814,"byte_end":523817,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523822,"byte_end":523897,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523902,"byte_end":523977,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":523982,"byte_end":524057,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524062,"byte_end":524131,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524136,"byte_end":524139,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524144,"byte_end":524217,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524222,"byte_end":524297,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524302,"byte_end":524380,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524385,"byte_end":524460,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524465,"byte_end":524468,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524473,"byte_end":524545,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524550,"byte_end":524553,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524558,"byte_end":524650,"line_start":193,"line_end":193,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524972,"byte_end":524980,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayViewMut>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayViewMut where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524855,"byte_end":524933,"line_start":201,"line_end":201,"column_start":5,"column_end":83}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":524938,"byte_end":524960,"line_start":202,"line_end":202,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527116,"byte_end":527124,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayView>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayView where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527002,"byte_end":527077,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527082,"byte_end":527104,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527538,"byte_end":527548,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayView>::into_slice","value":"pub fn into_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527275,"byte_end":527359,"line_start":32,"line_end":32,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527364,"byte_end":527392,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"deprecated(note = \"`into_slice` has been renamed to `to_slice`\", since =\n             \"0.13.0\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527397,"byte_end":527482,"line_start":34,"line_end":34,"column_start":5,"column_end":90}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527487,"byte_end":527526,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527882,"byte_end":527890,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<ArrayView>::to_slice","value":"pub fn to_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527753,"byte_end":527837,"line_start":44,"line_end":44,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":527842,"byte_end":527870,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529082,"byte_end":529093,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayView>::into_scalar","value":"pub fn into_scalar(Self) -> &'a A","parent":null,"children":[],"decl_id":null,"docs":" Consume the view and return a reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the view and return a reference to the single element in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528516,"byte_end":528595,"line_start":67,"line_end":67,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528600,"byte_end":528603,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528608,"byte_end":528683,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528688,"byte_end":528723,"line_start":70,"line_end":70,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528728,"byte_end":528731,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528736,"byte_end":528743,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528748,"byte_end":528780,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528785,"byte_end":528788,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528793,"byte_end":528832,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528837,"byte_end":528872,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528877,"byte_end":528892,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528897,"byte_end":528900,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528905,"byte_end":528944,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ let view = array.view();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528949,"byte_end":528977,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/ let scalar: &Foo = view.into_scalar();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528982,"byte_end":529024,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, &Foo);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529029,"byte_end":529058,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529063,"byte_end":529070,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529927,"byte_end":529938,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayViewMut>::into_scalar","value":"pub fn into_scalar(Self) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Consume the mutable view and return a mutable reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the mutable view and return a mutable reference to the single element in the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529396,"byte_end":529491,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529496,"byte_end":529499,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529504,"byte_end":529579,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529584,"byte_end":529619,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529624,"byte_end":529627,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529632,"byte_end":529639,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529644,"byte_end":529676,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529681,"byte_end":529684,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let mut array: Array0<f64> = arr0(5.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529689,"byte_end":529731,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"/ let view = array.view_mut();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529736,"byte_end":529768,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/ let mut scalar = view.into_scalar();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529773,"byte_end":529813,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/ *scalar = 7.;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529818,"byte_end":529835,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(scalar, &7.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529840,"byte_end":529868,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(array[()], 7.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529873,"byte_end":529903,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529908,"byte_end":529915,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530232,"byte_end":530242,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayViewMut>::into_slice","value":"pub fn into_slice(Self) -> Option<&'a mut [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530103,"byte_end":530187,"line_start":121,"line_end":121,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530192,"byte_end":530220,"line_start":122,"line_end":122,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530925,"byte_end":530940,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayView>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIter where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530777,"byte_end":530820,"line_start":147,"line_end":147,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530860,"byte_end":530913,"line_start":149,"line_end":149,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":532296,"byte_end":532311,"line_start":197,"line_end":197,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayViewMut>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIterMut where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":532148,"byte_end":532191,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":532231,"byte_end":532284,"line_start":196,"line_end":196,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534310,"byte_end":534321,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IndexLonger","qualname":"::impl_views::indexing::IndexLonger","value":"IndexLonger<I>","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216}],"decl_id":null,"docs":" Extra indexing methods for array views","sig":null,"attributes":[{"value":"/ Extra indexing methods for array views","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":532896,"byte_end":532938,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":532939,"byte_end":532942,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ These methods are very similar to regular indexing or calling of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":532943,"byte_end":533015,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `get`/`get_mut` methods that we can use on any array or array view. The","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533016,"byte_end":533091,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ difference here is in the length of lifetime in the resulting reference.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533092,"byte_end":533168,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533169,"byte_end":533172,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note** that the `ArrayView` (read-only) and `ArrayViewMut` (read-write) differ","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533173,"byte_end":533257,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ in how they are allowed implement this trait -- `ArrayView`'s implementation","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533258,"byte_end":533338,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ is usual. If you put in a `ArrayView<'a, T, D>` here, you get references","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533339,"byte_end":533415,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ `&'a T` out.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533416,"byte_end":533432,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533433,"byte_end":533436,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For `ArrayViewMut` to obey the borrowing rules we have to consume the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533437,"byte_end":533510,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ view if we call any of these methods. (The equivalent of reborrow is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533511,"byte_end":533583,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `.view_mut()` for read-write array views, but if you can use that,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533584,"byte_end":533654,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ then the regular indexing / `get_mut` should suffice, too.)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533655,"byte_end":533718,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533719,"byte_end":533722,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533723,"byte_end":533730,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use ndarray::IndexLonger;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533731,"byte_end":533760,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533761,"byte_end":533788,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533789,"byte_end":533792,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let data = [0.; 256];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533793,"byte_end":533818,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ let long_life_ref = {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533819,"byte_end":533844,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/     // make a 16 × 16 array view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533845,"byte_end":533882,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/     let view = ArrayView::from(&data[..]).into_shape((16, 16)).unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533883,"byte_end":533959,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533960,"byte_end":533963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // index the view and with `IndexLonger`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":533964,"byte_end":534013,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/     // Note here that we get a reference with a life that is derived from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534014,"byte_end":534091,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/     // `data`, the base data, instead of being derived from the view","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534092,"byte_end":534164,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     IndexLonger::index(&view, [0, 1])","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534165,"byte_end":534206,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534207,"byte_end":534213,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534214,"byte_end":534217,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // view goes out of scope","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534218,"byte_end":534247,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534248,"byte_end":534251,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(long_life_ref, &0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534252,"byte_end":534287,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534288,"byte_end":534291,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534292,"byte_end":534299,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534435,"byte_end":534441,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::impl_views::indexing::IndexLonger::Output","value":"type Output;","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":" The type of the reference to the element that is produced, including\n its lifetime.\n","sig":null,"attributes":[{"value":"/ The type of the reference to the element that is produced, including","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534331,"byte_end":534403,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ its lifetime.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534408,"byte_end":534425,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534903,"byte_end":534908,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"index","qualname":"::impl_views::indexing::IndexLonger::index","value":"pub fn index(Self, I) -> Self::Output","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534447,"byte_end":534497,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534502,"byte_end":534505,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is like `Index::index` but with a longer lifetime (matching","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534510,"byte_end":534585,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534590,"byte_end":534665,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534670,"byte_end":534688,"line_start":57,"line_end":57,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534693,"byte_end":534696,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] which works for all arrays and array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534701,"byte_end":534772,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ views.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534777,"byte_end":534787,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534792,"byte_end":534795,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534800,"byte_end":534841,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534846,"byte_end":534849,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534854,"byte_end":534895,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535476,"byte_end":535479,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"get","qualname":"::impl_views::indexing::IndexLonger::get","value":"pub fn get(Self, I) -> Option<Self::Output>","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":534947,"byte_end":534997,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535002,"byte_end":535005,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is like `ArrayBase::get` but with a longer lifetime (matching","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535010,"byte_end":535087,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535092,"byte_end":535167,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535172,"byte_end":535190,"line_start":71,"line_end":71,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535195,"byte_end":535198,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] (and [`get_mut`][2]) which works for all arrays and array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535203,"byte_end":535295,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ views.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535300,"byte_end":535310,"line_start":74,"line_end":74,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535315,"byte_end":535318,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535323,"byte_end":535364,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ [2]: struct.ArrayBase.html#method.get_mut","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535369,"byte_end":535414,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535419,"byte_end":535422,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535427,"byte_end":535468,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535981,"byte_end":535985,"line_start":93,"line_end":93,"column_start":15,"column_end":19},"name":"uget","qualname":"::impl_views::indexing::IndexLonger::uget","value":"pub unsafe fn uget(Self, I) -> Self::Output","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view without boundary check","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view without boundary check","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535526,"byte_end":535598,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535603,"byte_end":535606,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is like `elem` with a longer lifetime (matching the array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535611,"byte_end":535684,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ view); which we can't do for general arrays.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535689,"byte_end":535737,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535742,"byte_end":535745,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See also [the `uget` method][1] which works for all arrays and array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535750,"byte_end":535822,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ views.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535827,"byte_end":535837,"line_start":88,"line_end":88,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535842,"byte_end":535845,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.uget","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535850,"byte_end":535892,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535897,"byte_end":535900,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":535905,"byte_end":535966,"line_start":92,"line_end":92,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543729,"byte_end":543737,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayView>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one view strictly before the\n split and one view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one view strictly before the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":539968,"byte_end":540045,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ split and one view after the split.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540050,"byte_end":540089,"line_start":17,"line_end":17,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540094,"byte_end":540097,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540102,"byte_end":540155,"line_start":19,"line_end":19,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540160,"byte_end":540163,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ **Examples:**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540168,"byte_end":540185,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540190,"byte_end":540201,"line_start":22,"line_end":22,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540206,"byte_end":540236,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"/ let a = aview2(&[[0, 1, 2, 3],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540241,"byte_end":540275,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/                  [4, 5, 6, 7],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540280,"byte_end":540314,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                  [8, 9, 0, 1]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540319,"byte_end":540355,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540360,"byte_end":540363,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540368,"byte_end":540375,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ The array view `a` has two axes and shape 3 × 4:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540380,"byte_end":540433,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540438,"byte_end":540449,"line_start":30,"line_end":30,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540454,"byte_end":540484,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/         ┌─────┬─────┬─────┬─────┐ 0","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540489,"byte_end":540578,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/       │ │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540583,"byte_end":540648,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/       ▼ ├─────┼─────┼─────┼─────┤ 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540653,"byte_end":540744,"line_start":34,"line_end":34,"column_start":5,"column_end":44}},{"value":"/  Axis(0)│ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540749,"byte_end":540812,"line_start":35,"line_end":35,"column_start":5,"column_end":42}},{"value":"/         ├─────┼─────┼─────┼─────┤ 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540817,"byte_end":540906,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540911,"byte_end":540974,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘ 3 ↑","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":540979,"byte_end":541072,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/         0     1     2     3     4 ← possible split_at indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541077,"byte_end":541145,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541150,"byte_end":541157,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541162,"byte_end":541165,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Row indices increase along `Axis(0)`, and column indices increase along","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541170,"byte_end":541245,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ `Axis(1)`. Note that we split “before” an element index, and that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541250,"byte_end":541323,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ both 0 and the endpoint are valid split indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541328,"byte_end":541380,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541385,"byte_end":541388,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ **Example 1**: Split `a` along the first axis, in this case the rows, at","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541393,"byte_end":541469,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ index 2.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541474,"byte_end":541490,"line_start":47,"line_end":47,"column_start":5,"column_end":21}},{"value":"/ This produces views v1 and v2 of shapes 2 × 4 and 1 × 4:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541495,"byte_end":541557,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541562,"byte_end":541565,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541570,"byte_end":541581,"line_start":50,"line_end":50,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541586,"byte_end":541616,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541621,"byte_end":541656,"line_start":52,"line_end":52,"column_start":5,"column_end":40}},{"value":"/ let (v1, v2) = a.split_at(Axis(0), 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541661,"byte_end":541703,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541708,"byte_end":541715,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541720,"byte_end":541731,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/         ┌─────┬─────┬─────┬─────┐       0  ↓ indices","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541736,"byte_end":541844,"line_start":56,"line_end":56,"column_start":5,"column_end":61}},{"value":"/         │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │            along Axis(0)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541849,"byte_end":541937,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/         ├─────┼─────┼─────┼─────┤ v1    1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":541942,"byte_end":542037,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/         │ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542042,"byte_end":542105,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542110,"byte_end":542197,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/         ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄       2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542202,"byte_end":542297,"line_start":61,"line_end":61,"column_start":5,"column_end":50}},{"value":"/         ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542302,"byte_end":542389,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │ v2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542394,"byte_end":542460,"line_start":63,"line_end":63,"column_start":5,"column_end":45}},{"value":"/         └─────┴─────┴─────┴─────┘       3","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542465,"byte_end":542560,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542565,"byte_end":542572,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542577,"byte_end":542580,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ **Example 2**: Split `a` along the second axis, in this case the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542585,"byte_end":542653,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ columns, at index 2.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542658,"byte_end":542686,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/ This produces views u1 and u2 of shapes 3 × 2 and 3 × 2:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542691,"byte_end":542754,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542759,"byte_end":542762,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542767,"byte_end":542778,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542783,"byte_end":542813,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542818,"byte_end":542853,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/ let (u1, u2) = a.split_at(Axis(1), 2);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542858,"byte_end":542900,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542905,"byte_end":542908,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542913,"byte_end":542920,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542925,"byte_end":542936,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/              u1             u2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542941,"byte_end":542975,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/         ┌─────┬─────┐┊┌─────┬─────┐","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":542980,"byte_end":543073,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/         │ a₀₀ │ a₀₁ │┊│ a₀₂ │ a₀₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543078,"byte_end":543147,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543152,"byte_end":543245,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/         │ a₁₀ │ a₁₁ │┊│ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543250,"byte_end":543319,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543324,"byte_end":543417,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │┊│ a₂₂ │ a₂₃ │","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543422,"byte_end":543491,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/         └─────┴─────┘┊└─────┴─────┘","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543496,"byte_end":543589,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/         0     1      2      3     4  indices →","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543594,"byte_end":543646,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/                                      along Axis(1)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543651,"byte_end":543705,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":543710,"byte_end":543717,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544282,"byte_end":544290,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayViewMut>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one mutable view strictly\n before the split and one mutable view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one mutable view strictly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544067,"byte_end":544141,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ before the split and one mutable view after the split.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544146,"byte_end":544204,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544209,"byte_end":544212,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544217,"byte_end":544270,"line_start":105,"line_end":105,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547060,"byte_end":547074,"line_start":57,"line_end":57,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayView<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayView<A, D>` from shape information and a raw pointer\n to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayView<A, D>` from shape information and a raw pointer","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545218,"byte_end":545293,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ to the elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545298,"byte_end":545318,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545323,"byte_end":545326,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Unsafe because caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545331,"byte_end":545406,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545411,"byte_end":545414,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545419,"byte_end":545483,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545488,"byte_end":545522,"line_start":30,"line_end":30,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545527,"byte_end":545530,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545535,"byte_end":545606,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545611,"byte_end":545682,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545687,"byte_end":545761,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545766,"byte_end":545769,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545774,"byte_end":545795,"line_start":36,"line_end":36,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545800,"byte_end":545803,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545808,"byte_end":545883,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545888,"byte_end":545963,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":545968,"byte_end":546046,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546051,"byte_end":546129,"line_start":41,"line_end":41,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546134,"byte_end":546200,"line_start":42,"line_end":42,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546205,"byte_end":546208,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546213,"byte_end":546288,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546293,"byte_end":546368,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546373,"byte_end":546448,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546453,"byte_end":546522,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546527,"byte_end":546530,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546535,"byte_end":546608,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546613,"byte_end":546688,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546693,"byte_end":546771,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546776,"byte_end":546851,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546856,"byte_end":546859,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546864,"byte_end":546936,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546941,"byte_end":546944,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":546949,"byte_end":547041,"line_start":56,"line_end":56,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547903,"byte_end":547918,"line_start":78,"line_end":78,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayView<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547593,"byte_end":547639,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547644,"byte_end":547647,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ **Warning** from a safety standpoint, this is equivalent to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547652,"byte_end":547715,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ dereferencing a raw pointer for every element in the array. You must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547720,"byte_end":547792,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ ensure that all of the data is valid and choose the correct lifetime.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547797,"byte_end":547870,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":547875,"byte_end":547884,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":548249,"byte_end":548257,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayView<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":548032,"byte_end":548107,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":548112,"byte_end":548171,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":548176,"byte_end":548179,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":548184,"byte_end":548237,"line_start":85,"line_end":85,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551490,"byte_end":551504,"line_start":161,"line_end":161,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayViewMut<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayViewMut<A, D>` from shape information and a raw\n pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayViewMut<A, D>` from shape information and a raw","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549645,"byte_end":549715,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ pointer to the elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549720,"byte_end":549748,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549753,"byte_end":549756,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Unsafe because caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549761,"byte_end":549836,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549841,"byte_end":549844,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549849,"byte_end":549913,"line_start":133,"line_end":133,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549918,"byte_end":549952,"line_start":134,"line_end":134,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549957,"byte_end":549960,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549965,"byte_end":550036,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550041,"byte_end":550112,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550117,"byte_end":550191,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550196,"byte_end":550199,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550204,"byte_end":550225,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550230,"byte_end":550233,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550238,"byte_end":550313,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550318,"byte_end":550393,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550398,"byte_end":550476,"line_start":144,"line_end":144,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550481,"byte_end":550559,"line_start":145,"line_end":145,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550564,"byte_end":550630,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550635,"byte_end":550638,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550643,"byte_end":550718,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550723,"byte_end":550798,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550803,"byte_end":550878,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550883,"byte_end":550952,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550957,"byte_end":550960,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":550965,"byte_end":551038,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551043,"byte_end":551118,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551123,"byte_end":551201,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551206,"byte_end":551281,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551286,"byte_end":551289,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551294,"byte_end":551366,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551371,"byte_end":551374,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":551379,"byte_end":551471,"line_start":160,"line_end":160,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552548,"byte_end":552563,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayViewMut<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552238,"byte_end":552284,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552289,"byte_end":552292,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ **Warning** from a safety standpoint, this is equivalent to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552297,"byte_end":552360,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/ dereferencing a raw pointer for every element in the array. You must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552365,"byte_end":552437,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ ensure that all of the data is valid and choose the correct lifetime.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552442,"byte_end":552515,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552520,"byte_end":552529,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552985,"byte_end":553004,"line_start":198,"line_end":198,"column_start":19,"column_end":38},"name":"deref_into_view_mut","qualname":"<RawArrayViewMut<A, D>>::deref_into_view_mut","value":"pub unsafe fn deref_into_view_mut<'a>(Self) -> ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable view of the array.","sig":null,"attributes":[{"value":"/ Converts to a mutable view of the array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552677,"byte_end":552721,"line_start":192,"line_end":192,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552726,"byte_end":552729,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ **Warning** from a safety standpoint, this is equivalent to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552734,"byte_end":552797,"line_start":194,"line_end":194,"column_start":5,"column_end":68}},{"value":"/ dereferencing a raw pointer for every element in the array. You must","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552802,"byte_end":552874,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ ensure that all of the data is valid and choose the correct lifetime.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552879,"byte_end":552952,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":552957,"byte_end":552966,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":553341,"byte_end":553349,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayViewMut<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":553124,"byte_end":553199,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":553204,"byte_end":553263,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":553268,"byte_end":553271,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":553276,"byte_end":553329,"line_start":205,"line_end":205,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554322,"byte_end":554329,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowArray>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the view (borrowed) variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the view (borrowed) variant.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554246,"byte_end":554310,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554452,"byte_end":554460,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowArray>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the owned variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the owned variant.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554386,"byte_end":554440,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6895},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54746,"byte_end":54751,"line_start":1597,"line_end":1597,"column_start":12,"column_end":17},"name":"Shape","qualname":"::Shape","value":"Shape {  }","parent":null,"children":[{"krate":0,"index":6897},{"krate":0,"index":6898}],"decl_id":null,"docs":" A contiguous array shape of n dimensions.","sig":null,"attributes":[{"value":"/ A contiguous array shape of n dimensions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54580,"byte_end":54625,"line_start":1593,"line_end":1593,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54626,"byte_end":54629,"line_start":1594,"line_end":1594,"column_start":1,"column_end":4}},{"value":"/ Either c- or f- memory ordered (*c* a.k.a *row major* is the default).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54630,"byte_end":54704,"line_start":1595,"line_end":1595,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6907},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54903,"byte_end":54914,"line_start":1604,"line_end":1604,"column_start":12,"column_end":23},"name":"StrideShape","qualname":"::StrideShape","value":"StrideShape {  }","parent":null,"children":[{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911}],"decl_id":null,"docs":" An array shape of n dimensions in c-order, f-order or custom strides.\n","sig":null,"attributes":[{"value":"/ An array shape of n dimensions in c-order, f-order or custom strides.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54788,"byte_end":54861,"line_start":1602,"line_end":1602,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":64507,"byte_end":64520,"line_start":37,"line_end":37,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":69572,"byte_end":69581,"line_start":193,"line_end":193,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":70024,"byte_end":70033,"line_start":207,"line_end":207,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":70903,"byte_end":70912,"line_start":235,"line_end":235,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":71364,"byte_end":71373,"line_start":249,"line_end":249,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":71824,"byte_end":71833,"line_start":262,"line_end":262,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":72279,"byte_end":72288,"line_start":276,"line_end":276,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":87146,"byte_end":87155,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":87704,"byte_end":87713,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":88302,"byte_end":88311,"line_start":86,"line_end":86,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":89043,"byte_end":89052,"line_start":115,"line_end":115,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":89146,"byte_end":89155,"line_start":123,"line_end":123,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":89792,"byte_end":89801,"line_start":147,"line_end":147,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":90968,"byte_end":90977,"line_start":197,"line_end":197,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":91184,"byte_end":91196,"line_start":209,"line_end":209,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":91408,"byte_end":91417,"line_start":221,"line_end":221,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":92364,"byte_end":92373,"line_start":252,"line_end":252,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":92503,"byte_end":92512,"line_start":260,"line_end":260,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":92897,"byte_end":92906,"line_start":273,"line_end":273,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":93558,"byte_end":93567,"line_start":293,"line_end":293,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":93895,"byte_end":93907,"line_start":305,"line_end":305,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94579,"byte_end":94591,"line_start":325,"line_end":325,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95404,"byte_end":95405,"line_start":362,"line_end":362,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":96013,"byte_end":96022,"line_start":381,"line_end":381,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100745,"byte_end":100746,"line_start":143,"line_end":143,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100807,"byte_end":100818,"line_start":145,"line_end":145,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100969,"byte_end":100980,"line_start":153,"line_end":153,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101145,"byte_end":101156,"line_start":159,"line_end":159,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101303,"byte_end":101314,"line_start":167,"line_end":167,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101579,"byte_end":101590,"line_start":182,"line_end":182,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101753,"byte_end":101765,"line_start":188,"line_end":188,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101939,"byte_end":101951,"line_start":197,"line_end":197,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103102,"byte_end":103114,"line_start":238,"line_end":238,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103559,"byte_end":103571,"line_start":255,"line_end":255,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103626,"byte_end":103638,"line_start":257,"line_end":257,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103835,"byte_end":103844,"line_start":264,"line_end":264,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103995,"byte_end":104004,"line_start":272,"line_end":272,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":104262,"byte_end":104271,"line_start":287,"line_end":287,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":104484,"byte_end":104493,"line_start":298,"line_end":298,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":104533,"byte_end":104542,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":105460,"byte_end":105468,"line_start":330,"line_end":330,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":105612,"byte_end":105620,"line_start":338,"line_end":338,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":105852,"byte_end":105860,"line_start":348,"line_end":348,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106026,"byte_end":106034,"line_start":354,"line_end":354,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106188,"byte_end":106196,"line_start":362,"line_end":362,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106466,"byte_end":106474,"line_start":377,"line_end":377,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106705,"byte_end":106713,"line_start":387,"line_end":387,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107383,"byte_end":107394,"line_start":411,"line_end":411,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107435,"byte_end":107443,"line_start":412,"line_end":412,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107484,"byte_end":107493,"line_start":414,"line_end":414,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107694,"byte_end":107706,"line_start":423,"line_end":423,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107897,"byte_end":107904,"line_start":433,"line_end":433,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":108183,"byte_end":108190,"line_start":444,"line_end":444,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":108848,"byte_end":108855,"line_start":472,"line_end":472,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":110163,"byte_end":110170,"line_start":512,"line_end":512,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":110663,"byte_end":110670,"line_start":531,"line_end":531,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":118012,"byte_end":118018,"line_start":229,"line_end":229,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":119138,"byte_end":119144,"line_start":259,"line_end":259,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":121922,"byte_end":121932,"line_start":19,"line_end":19,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122885,"byte_end":122894,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123020,"byte_end":123030,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123148,"byte_end":123158,"line_start":73,"line_end":73,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123748,"byte_end":123758,"line_start":87,"line_end":87,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123927,"byte_end":123937,"line_start":93,"line_end":93,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","byte_start":125922,"byte_end":125931,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","byte_start":126527,"byte_end":126536,"line_start":47,"line_end":47,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","byte_start":126978,"byte_end":126987,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131672,"byte_end":131683,"line_start":52,"line_end":52,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132556,"byte_end":132567,"line_start":85,"line_end":85,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132619,"byte_end":132626,"line_start":87,"line_end":87,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":133266,"byte_end":133274,"line_start":120,"line_end":120,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":133579,"byte_end":133586,"line_start":134,"line_end":134,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":3478},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":135623,"byte_end":135635,"line_start":230,"line_end":230,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":136569,"byte_end":136581,"line_start":266,"line_end":266,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183322,"byte_end":183333,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184197,"byte_end":184208,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185565,"byte_end":185579,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":186449,"byte_end":186463,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":189293,"byte_end":189298,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190342,"byte_end":190347,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190951,"byte_end":190959,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":191636,"byte_end":191644,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192393,"byte_end":192400,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":193911,"byte_end":193918,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":138450,"byte_end":138458,"line_start":41,"line_end":41,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":138905,"byte_end":138913,"line_start":56,"line_end":56,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":140300,"byte_end":140308,"line_start":100,"line_end":100,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":140800,"byte_end":140808,"line_start":118,"line_end":118,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":142655,"byte_end":142667,"line_start":195,"line_end":195,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":142880,"byte_end":142892,"line_start":204,"line_end":204,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":143360,"byte_end":143372,"line_start":223,"line_end":223,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":143742,"byte_end":143754,"line_start":237,"line_end":237,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":144444,"byte_end":144448,"line_start":273,"line_end":273,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":144801,"byte_end":144808,"line_start":288,"line_end":288,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146150,"byte_end":146165,"line_start":340,"line_end":340,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146836,"byte_end":146847,"line_start":359,"line_end":359,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146990,"byte_end":147004,"line_start":368,"line_end":368,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":147177,"byte_end":147181,"line_start":377,"line_end":377,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":148957,"byte_end":148961,"line_start":450,"line_end":450,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":149435,"byte_end":149439,"line_start":468,"line_end":468,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":149605,"byte_end":149616,"line_start":477,"line_end":477,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":150118,"byte_end":150129,"line_start":496,"line_end":496,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":150270,"byte_end":150277,"line_start":505,"line_end":505,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":152061,"byte_end":152068,"line_start":578,"line_end":578,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":152550,"byte_end":152557,"line_start":596,"line_end":596,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":152723,"byte_end":152738,"line_start":605,"line_end":605,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":153222,"byte_end":153237,"line_start":624,"line_end":624,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":153619,"byte_end":153634,"line_start":638,"line_end":638,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":153773,"byte_end":153787,"line_start":647,"line_end":647,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154293,"byte_end":154307,"line_start":666,"line_end":666,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154944,"byte_end":154953,"line_start":698,"line_end":698,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155350,"byte_end":155359,"line_start":714,"line_end":714,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155998,"byte_end":156010,"line_start":738,"line_end":738,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":156413,"byte_end":156425,"line_start":754,"line_end":754,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":157308,"byte_end":157320,"line_start":795,"line_end":795,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":159619,"byte_end":159631,"line_start":867,"line_end":867,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160083,"byte_end":160095,"line_start":889,"line_end":889,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160411,"byte_end":160423,"line_start":904,"line_end":904,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161384,"byte_end":161392,"line_start":943,"line_end":943,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162375,"byte_end":162383,"line_start":977,"line_end":977,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162706,"byte_end":162714,"line_start":992,"line_end":992,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162918,"byte_end":162926,"line_start":1001,"line_end":1001,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163773,"byte_end":163784,"line_start":1029,"line_end":1029,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164779,"byte_end":164790,"line_start":1063,"line_end":1063,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":165116,"byte_end":165127,"line_start":1078,"line_end":1078,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":165331,"byte_end":165342,"line_start":1087,"line_end":1087,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":165482,"byte_end":165490,"line_start":1096,"line_end":1096,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":167116,"byte_end":167127,"line_start":1153,"line_end":1153,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":3698}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":171288,"byte_end":171302,"line_start":1293,"line_end":1293,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":175200,"byte_end":175217,"line_start":1407,"line_end":1407,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176560,"byte_end":176569,"line_start":1448,"line_end":1448,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176611,"byte_end":176619,"line_start":1449,"line_end":1449,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176661,"byte_end":176669,"line_start":1450,"line_end":1450,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176718,"byte_end":176722,"line_start":1451,"line_end":1451,"column_start":43,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176778,"byte_end":176785,"line_start":1452,"line_end":1452,"column_start":43,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176845,"byte_end":176851,"line_start":1453,"line_end":1453,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176932,"byte_end":176935,"line_start":1454,"line_end":1454,"column_start":50,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177016,"byte_end":177020,"line_start":1455,"line_end":1455,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177077,"byte_end":177084,"line_start":1456,"line_end":1456,"column_start":47,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177139,"byte_end":177144,"line_start":1457,"line_end":1457,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177269,"byte_end":177280,"line_start":1459,"line_end":1459,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177341,"byte_end":177353,"line_start":1460,"line_end":1460,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/layoutfmt.rs","byte_start":196599,"byte_end":196605,"line_start":17,"line_end":17,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195258,"byte_end":195264,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195617,"byte_end":195623,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198121,"byte_end":198122,"line_start":30,"line_end":30,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linspace.rs","byte_start":199553,"byte_end":199561,"line_start":20,"line_end":20,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linspace.rs","byte_start":200102,"byte_end":200110,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linspace.rs","byte_start":200497,"byte_end":200505,"line_start":62,"line_end":62,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/logspace.rs","byte_start":202621,"byte_end":202629,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/logspace.rs","byte_start":203235,"byte_end":203243,"line_start":48,"line_end":48,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/logspace.rs","byte_start":203695,"byte_end":203703,"line_start":66,"line_end":66,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210786,"byte_end":210791,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":211000,"byte_end":211011,"line_start":30,"line_end":30,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":211770,"byte_end":211771,"line_start":67,"line_end":67,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":212299,"byte_end":212304,"line_start":90,"line_end":90,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":212753,"byte_end":212758,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214526,"byte_end":214531,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217039,"byte_end":217051,"line_start":109,"line_end":109,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":218197,"byte_end":218209,"line_start":149,"line_end":149,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":220996,"byte_end":221001,"line_start":237,"line_end":237,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":221181,"byte_end":221193,"line_start":248,"line_end":248,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":221390,"byte_end":221402,"line_start":259,"line_end":259,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222409,"byte_end":222418,"line_start":298,"line_end":298,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222553,"byte_end":222562,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222922,"byte_end":222931,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223512,"byte_end":223521,"line_start":343,"line_end":343,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":224197,"byte_end":224206,"line_start":366,"line_end":366,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":224401,"byte_end":224410,"line_start":376,"line_end":376,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":224945,"byte_end":224954,"line_start":393,"line_end":393,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":225024,"byte_end":225033,"line_start":400,"line_end":400,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":237634,"byte_end":237643,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238113,"byte_end":238122,"line_start":68,"line_end":68,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238600,"byte_end":238601,"line_start":85,"line_end":85,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239426,"byte_end":239427,"line_start":115,"line_end":115,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":244761,"byte_end":244770,"line_start":295,"line_end":295,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":4014},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":245865,"byte_end":245877,"line_start":348,"line_end":348,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":4015},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":246976,"byte_end":246988,"line_start":401,"line_end":401,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":4016},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":248077,"byte_end":248092,"line_start":454,"line_end":454,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":4017},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251731,"byte_end":251734,"line_start":582,"line_end":582,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252336,"byte_end":252339,"line_start":604,"line_end":604,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252944,"byte_end":252947,"line_start":625,"line_end":625,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":254275,"byte_end":254278,"line_start":676,"line_end":676,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266512,"byte_end":266521,"line_start":1032,"line_end":1032,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308154,"byte_end":308169,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308526,"byte_end":308530,"line_start":72,"line_end":72,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":309399,"byte_end":309403,"line_start":107,"line_end":107,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":311011,"byte_end":311015,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312753,"byte_end":312755,"line_start":46,"line_end":46,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312890,"byte_end":312891,"line_start":54,"line_end":54,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":313041,"byte_end":313050,"line_start":65,"line_end":65,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1947},{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":313195,"byte_end":313198,"line_start":73,"line_end":73,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316604,"byte_end":316607,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":317105,"byte_end":317108,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":317233,"byte_end":317236,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":331646,"byte_end":331649,"line_start":376,"line_end":376,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":4648},{"krate":0,"index":2098},{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":332586,"byte_end":332589,"line_start":420,"line_end":420,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":4651},{"krate":0,"index":2123},{"krate":0,"index":4653}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":334966,"byte_end":334969,"line_start":528,"line_end":528,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":4654},{"krate":0,"index":2150},{"krate":0,"index":4656}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":338669,"byte_end":338672,"line_start":685,"line_end":685,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":4657},{"krate":0,"index":2170},{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":343738,"byte_end":343743,"line_start":859,"line_end":859,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":344804,"byte_end":344807,"line_start":908,"line_end":908,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":344989,"byte_end":344992,"line_start":915,"line_end":915,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":345373,"byte_end":345382,"line_start":14,"line_end":14,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":345730,"byte_end":345739,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346141,"byte_end":346150,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346267,"byte_end":346276,"line_start":48,"line_end":48,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346578,"byte_end":346587,"line_start":60,"line_end":60,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346829,"byte_end":346838,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347034,"byte_end":347043,"line_start":81,"line_end":81,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347251,"byte_end":347260,"line_start":90,"line_end":90,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347301,"byte_end":347310,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347746,"byte_end":347755,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":348171,"byte_end":348180,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349505,"byte_end":349514,"line_start":159,"line_end":159,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349643,"byte_end":349652,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349782,"byte_end":349791,"line_start":173,"line_end":173,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349971,"byte_end":349980,"line_start":183,"line_end":183,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350124,"byte_end":350133,"line_start":192,"line_end":192,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2258},{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350248,"byte_end":350257,"line_start":200,"line_end":200,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350580,"byte_end":350583,"line_start":216,"line_end":216,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350759,"byte_end":350764,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351765,"byte_end":351766,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":353952,"byte_end":353954,"line_start":101,"line_end":101,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":354271,"byte_end":354273,"line_start":112,"line_end":112,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358825,"byte_end":358828,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358995,"byte_end":358998,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/mod.rs","byte_start":281570,"byte_end":281571,"line_start":277,"line_end":277,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49753,"byte_end":49765,"line_start":1397,"line_end":1397,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50227,"byte_end":50238,"line_start":1414,"line_end":1414,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50693,"byte_end":50701,"line_start":1432,"line_end":1432,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51084,"byte_end":51091,"line_start":1450,"line_end":1450,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_clone.rs","byte_start":361981,"byte_end":361990,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_clone.rs","byte_start":362795,"byte_end":362804,"line_start":37,"line_end":37,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":363827,"byte_end":363836,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368060,"byte_end":368069,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370726,"byte_end":370735,"line_start":243,"line_end":243,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380557,"byte_end":380566,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2810},{"krate":0,"index":2817},{"krate":0,"index":2821},{"krate":0,"index":2826},{"krate":0,"index":2833},{"krate":0,"index":2837},{"krate":0,"index":2841},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2852},{"krate":0,"index":2856},{"krate":0,"index":2860},{"krate":0,"index":2866},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":457980,"byte_end":457985,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459379,"byte_end":459384,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51643,"byte_end":51652,"line_start":1476,"line_end":1476,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_1d.rs","byte_start":460218,"byte_end":460227,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461059,"byte_end":461068,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463500,"byte_end":463509,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465621,"byte_end":465630,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477367,"byte_end":477376,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2982},{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481734,"byte_end":481743,"line_start":169,"line_end":169,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":482367,"byte_end":482376,"line_start":190,"line_end":190,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":482930,"byte_end":482939,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":484205,"byte_end":484214,"line_start":253,"line_end":253,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486107,"byte_end":486116,"line_start":313,"line_end":313,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486681,"byte_end":486690,"line_start":335,"line_end":335,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":504091,"byte_end":504098,"line_start":48,"line_end":48,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":504130,"byte_end":504137,"line_start":49,"line_end":49,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":512184,"byte_end":512193,"line_start":293,"line_end":293,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":513005,"byte_end":513014,"line_start":323,"line_end":323,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517287,"byte_end":517296,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521060,"byte_end":521072,"line_start":109,"line_end":109,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":525189,"byte_end":525198,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":525645,"byte_end":525657,"line_start":230,"line_end":230,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":526952,"byte_end":526961,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528488,"byte_end":528497,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529365,"byte_end":529377,"line_start":95,"line_end":95,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530050,"byte_end":530062,"line_start":117,"line_end":117,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530361,"byte_end":530370,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":531084,"byte_end":531096,"line_start":158,"line_end":158,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":537539,"byte_end":537551,"line_start":141,"line_end":141,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":539918,"byte_end":539927,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544014,"byte_end":544026,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":544709,"byte_end":544721,"line_start":6,"line_end":6,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549139,"byte_end":549154,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554197,"byte_end":554205,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554561,"byte_end":554569,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554878,"byte_end":554886,"line_start":45,"line_end":45,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":137776,"byte_end":137780,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":771}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":7107,"byte_end":7114,"line_start":197,"line_end":197,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2424}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":54384,"byte_end":54390,"line_start":1579,"line_end":1579,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2966}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":64507,"byte_end":64520,"line_start":37,"line_end":37,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":69572,"byte_end":69581,"line_start":193,"line_end":193,"column_start":61,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":70024,"byte_end":70033,"line_start":207,"line_end":207,"column_start":57,"column_end":66},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":70903,"byte_end":70912,"line_start":235,"line_end":235,"column_start":63,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6855}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":71364,"byte_end":71373,"line_start":249,"line_end":249,"column_start":63,"column_end":72},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6857}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":71824,"byte_end":71833,"line_start":262,"line_end":262,"column_start":63,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arrayformat.rs","byte_start":72279,"byte_end":72288,"line_start":276,"line_end":276,"column_start":59,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":6847}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":87146,"byte_end":87155,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":87704,"byte_end":87713,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":88302,"byte_end":88311,"line_start":86,"line_end":86,"column_start":54,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":89043,"byte_end":89052,"line_start":115,"line_end":115,"column_start":19,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":89146,"byte_end":89155,"line_start":123,"line_end":123,"column_start":29,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":89792,"byte_end":89801,"line_start":147,"line_end":147,"column_start":32,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":5445}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":90968,"byte_end":90977,"line_start":197,"line_end":197,"column_start":33,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2513},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":91184,"byte_end":91196,"line_start":209,"line_end":209,"column_start":33,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2517},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":91408,"byte_end":91417,"line_start":221,"line_end":221,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":7026}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":92364,"byte_end":92373,"line_start":252,"line_end":252,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2083}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":92503,"byte_end":92512,"line_start":260,"line_end":260,"column_start":28,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":92897,"byte_end":92906,"line_start":273,"line_end":273,"column_start":48,"column_end":57},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2513},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":93558,"byte_end":93567,"line_start":293,"line_end":293,"column_start":49,"column_end":58},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2513},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":93895,"byte_end":93907,"line_start":305,"line_end":305,"column_start":52,"column_end":64},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2517},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":94579,"byte_end":94591,"line_start":325,"line_end":325,"column_start":53,"column_end":65},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2517},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95306,"byte_end":95310,"line_start":357,"line_end":357,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1986},"to":{"krate":0,"index":340}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":95404,"byte_end":95405,"line_start":362,"line_end":362,"column_start":45,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":348},"to":{"krate":0,"index":340}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/arraytraits.rs","byte_start":96013,"byte_end":96022,"line_start":381,"line_end":381,"column_start":27,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97470,"byte_end":97475,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":97819,"byte_end":97826,"line_start":46,"line_end":46,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":371},"to":{"krate":0,"index":374}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":98599,"byte_end":98606,"line_start":70,"line_end":70,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":371},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99220,"byte_end":99227,"line_start":92,"line_end":92,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":371},"to":{"krate":0,"index":381}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99942,"byte_end":99946,"line_start":113,"line_end":113,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":381},"to":{"krate":0,"index":384}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":99949,"byte_end":99959,"line_start":113,"line_end":113,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":384}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100678,"byte_end":100682,"line_start":140,"line_end":140,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":381},"to":{"krate":0,"index":388}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100685,"byte_end":100697,"line_start":140,"line_end":140,"column_start":29,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":378},"to":{"krate":0,"index":388}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100745,"byte_end":100746,"line_start":143,"line_end":143,"column_start":23,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":388}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100807,"byte_end":100818,"line_start":145,"line_end":145,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":100969,"byte_end":100980,"line_start":153,"line_end":153,"column_start":33,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101145,"byte_end":101156,"line_start":159,"line_end":159,"column_start":28,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101303,"byte_end":101314,"line_start":167,"line_end":167,"column_start":31,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":374}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101579,"byte_end":101590,"line_start":182,"line_end":182,"column_start":33,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101753,"byte_end":101765,"line_start":188,"line_end":188,"column_start":28,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":101939,"byte_end":101951,"line_start":197,"line_end":197,"column_start":31,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":374}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103102,"byte_end":103114,"line_start":238,"line_end":238,"column_start":25,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":381}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103559,"byte_end":103571,"line_start":255,"line_end":255,"column_start":28,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":384}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103626,"byte_end":103638,"line_start":257,"line_end":257,"column_start":33,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103835,"byte_end":103844,"line_start":264,"line_end":264,"column_start":28,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":103995,"byte_end":104004,"line_start":272,"line_end":272,"column_start":31,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":374}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":104262,"byte_end":104271,"line_start":287,"line_end":287,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":381}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":104484,"byte_end":104493,"line_start":298,"line_end":298,"column_start":28,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":384}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":104533,"byte_end":104542,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":105460,"byte_end":105468,"line_start":330,"line_end":330,"column_start":32,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":105612,"byte_end":105620,"line_start":338,"line_end":338,"column_start":29,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":381}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":105852,"byte_end":105860,"line_start":348,"line_end":348,"column_start":37,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106026,"byte_end":106034,"line_start":354,"line_end":354,"column_start":32,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106188,"byte_end":106196,"line_start":362,"line_end":362,"column_start":35,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":374}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106466,"byte_end":106474,"line_start":377,"line_end":377,"column_start":29,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":381}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106705,"byte_end":106713,"line_start":387,"line_end":387,"column_start":32,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":384}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":106902,"byte_end":106906,"line_start":394,"line_end":394,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":381},"to":{"krate":0,"index":480}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107321,"byte_end":107326,"line_start":409,"line_end":409,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107329,"byte_end":107333,"line_start":409,"line_end":409,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":381},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107336,"byte_end":107348,"line_start":409,"line_end":409,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":378},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107383,"byte_end":107394,"line_start":411,"line_end":411,"column_start":31,"column_end":42},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107435,"byte_end":107443,"line_start":412,"line_end":412,"column_start":35,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4873},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107484,"byte_end":107493,"line_start":414,"line_end":414,"column_start":30,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4848},"to":{"krate":0,"index":480}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107694,"byte_end":107706,"line_start":423,"line_end":423,"column_start":30,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4858},"to":{"krate":0,"index":480}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":107897,"byte_end":107904,"line_start":433,"line_end":433,"column_start":32,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2537},"to":{"krate":0,"index":371}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":108183,"byte_end":108190,"line_start":444,"line_end":444,"column_start":35,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2537},"to":{"krate":0,"index":374}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":108848,"byte_end":108855,"line_start":472,"line_end":472,"column_start":37,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2537},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":110163,"byte_end":110170,"line_start":512,"line_end":512,"column_start":29,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2537},"to":{"krate":0,"index":381}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/data_traits.rs","byte_start":110663,"byte_end":110670,"line_start":531,"line_end":531,"column_start":32,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2537},"to":{"krate":0,"index":384}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":118012,"byte_end":118018,"line_start":229,"line_end":229,"column_start":29,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":87},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/free_functions.rs","byte_start":119138,"byte_end":119144,"line_start":259,"line_end":259,"column_start":32,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":121922,"byte_end":121932,"line_start":19,"line_end":19,"column_start":6,"column_end":16},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":122885,"byte_end":122894,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3426},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123020,"byte_end":123030,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3422},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123148,"byte_end":123158,"line_start":73,"line_end":73,"column_start":16,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3422},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123748,"byte_end":123758,"line_start":87,"line_end":87,"column_start":23,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3422},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/error.rs","byte_start":123927,"byte_end":123937,"line_start":93,"line_end":93,"column_start":21,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3422},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","byte_start":125922,"byte_end":125931,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","byte_start":126527,"byte_end":126536,"line_start":47,"line_end":47,"column_start":33,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/geomspace.rs","byte_start":126978,"byte_end":126987,"line_start":65,"line_end":65,"column_start":31,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":617},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":131672,"byte_end":131683,"line_start":52,"line_end":52,"column_start":22,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132556,"byte_end":132567,"line_start":85,"line_end":85,"column_start":31,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":132619,"byte_end":132626,"line_start":87,"line_end":87,"column_start":26,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3454},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":133266,"byte_end":133274,"line_start":120,"line_end":120,"column_start":20,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3466},"to":{"krate":0,"index":1676}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":133579,"byte_end":133586,"line_start":134,"line_end":134,"column_start":42,"column_end":49},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3454},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":135623,"byte_end":135635,"line_start":230,"line_end":230,"column_start":22,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3479},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/indexes.rs","byte_start":136569,"byte_end":136581,"line_start":266,"line_end":266,"column_start":31,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3479},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":183322,"byte_end":183333,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":184197,"byte_end":184208,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":717},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":185565,"byte_end":185579,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/chunks.rs","byte_start":186449,"byte_end":186463,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":744},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":189293,"byte_end":189298,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190342,"byte_end":190347,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":190951,"byte_end":190959,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/lanes.rs","byte_start":191636,"byte_end":191644,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":822},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":192393,"byte_end":192400,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/windows.rs","byte_start":193911,"byte_end":193918,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":5449}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":138450,"byte_end":138458,"line_start":41,"line_end":41,"column_start":23,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":138905,"byte_end":138913,"line_start":56,"line_end":56,"column_start":36,"column_end":44},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":140300,"byte_end":140308,"line_start":100,"line_end":100,"column_start":49,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":140800,"byte_end":140808,"line_start":118,"line_end":118,"column_start":33,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":142655,"byte_end":142667,"line_start":195,"line_end":195,"column_start":27,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":142880,"byte_end":142892,"line_start":204,"line_end":204,"column_start":40,"column_end":52},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":143360,"byte_end":143372,"line_start":223,"line_end":223,"column_start":37,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":143742,"byte_end":143754,"line_start":237,"line_end":237,"column_start":38,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":985},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":144444,"byte_end":144448,"line_start":273,"line_end":273,"column_start":16,"column_end":20},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":144801,"byte_end":144808,"line_start":288,"line_end":288,"column_start":16,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146150,"byte_end":146165,"line_start":340,"line_end":340,"column_start":27,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146836,"byte_end":146847,"line_start":359,"line_end":359,"column_start":16,"column_end":27},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":146990,"byte_end":147004,"line_start":368,"line_end":368,"column_start":16,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":147177,"byte_end":147181,"line_start":377,"line_end":377,"column_start":40,"column_end":44},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":980},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":148957,"byte_end":148961,"line_start":450,"line_end":450,"column_start":37,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":980},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":149435,"byte_end":149439,"line_start":468,"line_end":468,"column_start":38,"column_end":42},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":980},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":149605,"byte_end":149616,"line_start":477,"line_end":477,"column_start":40,"column_end":51},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":150118,"byte_end":150129,"line_start":496,"line_end":496,"column_start":38,"column_end":49},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":150270,"byte_end":150277,"line_start":505,"line_end":505,"column_start":40,"column_end":47},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":152061,"byte_end":152068,"line_start":578,"line_end":578,"column_start":37,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":152550,"byte_end":152557,"line_start":596,"line_end":596,"column_start":38,"column_end":45},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":152723,"byte_end":152738,"line_start":605,"line_end":605,"column_start":40,"column_end":55},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":153222,"byte_end":153237,"line_start":624,"line_end":624,"column_start":37,"column_end":52},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":153619,"byte_end":153634,"line_start":638,"line_end":638,"column_start":38,"column_end":53},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":153773,"byte_end":153787,"line_start":647,"line_end":647,"column_start":40,"column_end":54},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154293,"byte_end":154307,"line_start":666,"line_end":666,"column_start":38,"column_end":52},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":154944,"byte_end":154953,"line_start":698,"line_end":698,"column_start":29,"column_end":38},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155350,"byte_end":155359,"line_start":714,"line_end":714,"column_start":38,"column_end":47},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":155998,"byte_end":156010,"line_start":738,"line_end":738,"column_start":29,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":156413,"byte_end":156425,"line_start":754,"line_end":754,"column_start":38,"column_end":50},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":157308,"byte_end":157320,"line_start":795,"line_end":795,"column_start":23,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":159619,"byte_end":159631,"line_start":867,"line_end":867,"column_start":25,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160083,"byte_end":160095,"line_start":889,"line_end":889,"column_start":36,"column_end":48},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":160411,"byte_end":160423,"line_start":904,"line_end":904,"column_start":34,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":161384,"byte_end":161392,"line_start":943,"line_end":943,"column_start":27,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162375,"byte_end":162383,"line_start":977,"line_end":977,"column_start":29,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3681},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162706,"byte_end":162714,"line_start":992,"line_end":992,"column_start":40,"column_end":48},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3681},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":162918,"byte_end":162926,"line_start":1001,"line_end":1001,"column_start":38,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3681},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":163773,"byte_end":163784,"line_start":1029,"line_end":1029,"column_start":27,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":164779,"byte_end":164790,"line_start":1063,"line_end":1063,"column_start":29,"column_end":40},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":165116,"byte_end":165127,"line_start":1078,"line_end":1078,"column_start":40,"column_end":51},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":165331,"byte_end":165342,"line_start":1087,"line_end":1087,"column_start":38,"column_end":49},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":165482,"byte_end":165490,"line_start":1096,"line_end":1096,"column_start":42,"column_end":50},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3681},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":167116,"byte_end":167127,"line_start":1153,"line_end":1153,"column_start":42,"column_end":53},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1245},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":171288,"byte_end":171302,"line_start":1293,"line_end":1293,"column_start":27,"column_end":41},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":175200,"byte_end":175217,"line_start":1407,"line_end":1407,"column_start":27,"column_end":44},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176560,"byte_end":176569,"line_start":1448,"line_end":1448,"column_start":36,"column_end":45},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176611,"byte_end":176619,"line_start":1449,"line_end":1449,"column_start":36,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1436},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176661,"byte_end":176669,"line_start":1450,"line_end":1450,"column_start":36,"column_end":44},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1458},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176718,"byte_end":176722,"line_start":1451,"line_end":1451,"column_start":43,"column_end":47},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":980},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176778,"byte_end":176785,"line_start":1452,"line_end":1452,"column_start":43,"column_end":50},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":991},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176845,"byte_end":176851,"line_start":1453,"line_end":1453,"column_start":47,"column_end":53},"kind":{"Impl":{"id":148}},"from":{"krate":2,"index":29336},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":176932,"byte_end":176935,"line_start":1454,"line_end":1454,"column_start":50,"column_end":53},"kind":{"Impl":{"id":149}},"from":{"krate":2,"index":29424},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177016,"byte_end":177020,"line_start":1455,"line_end":1455,"column_start":47,"column_end":51},"kind":{"Impl":{"id":150}},"from":{"krate":2,"index":7401},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177077,"byte_end":177084,"line_start":1456,"line_end":1456,"column_start":47,"column_end":54},"kind":{"Impl":{"id":151}},"from":{"krate":2,"index":7425},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177139,"byte_end":177144,"line_start":1457,"line_end":1457,"column_start":45,"column_end":50},"kind":{"Impl":{"id":152}},"from":{"krate":2,"index":28797},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177269,"byte_end":177280,"line_start":1459,"line_end":1459,"column_start":36,"column_end":47},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3447},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/iterators/mod.rs","byte_start":177341,"byte_end":177353,"line_start":1460,"line_end":1460,"column_start":36,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3479},"to":{"krate":0,"index":1339}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/layoutfmt.rs","byte_start":196599,"byte_end":196605,"line_start":17,"line_end":17,"column_start":21,"column_end":27},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3850},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195099,"byte_end":195104,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195258,"byte_end":195264,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3850},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/layout/mod.rs","byte_start":195617,"byte_end":195623,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197965,"byte_end":197969,"line_start":20,"line_end":20,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197976,"byte_end":197980,"line_start":21,"line_end":21,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":17,"index":295},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197987,"byte_end":197990,"line_start":22,"line_end":22,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":17,"index":305},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":197997,"byte_end":198000,"line_start":23,"line_end":23,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2136},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198022,"byte_end":198025,"line_start":24,"line_end":24,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2141},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198047,"byte_end":198050,"line_start":25,"line_end":25,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198072,"byte_end":198075,"line_start":26,"line_end":26,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2151},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198121,"byte_end":198122,"line_start":30,"line_end":30,"column_start":26,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1430},"to":{"krate":0,"index":1428}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198693,"byte_end":198698,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":17,"index":228},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198705,"byte_end":198714,"line_start":52,"line_end":52,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2167},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198721,"byte_end":198730,"line_start":53,"line_end":53,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2171},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198737,"byte_end":198746,"line_start":54,"line_end":54,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2175},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198753,"byte_end":198762,"line_start":55,"line_end":55,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2179},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198769,"byte_end":198778,"line_start":56,"line_end":56,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2183},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198790,"byte_end":198797,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":6843},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198809,"byte_end":198814,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198826,"byte_end":198834,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":6855},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198846,"byte_end":198854,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":6857},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198861,"byte_end":198874,"line_start":61,"line_end":61,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":3053},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198881,"byte_end":198893,"line_start":62,"line_end":62,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1428},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198900,"byte_end":198904,"line_start":63,"line_end":63,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg_traits.rs","byte_start":198911,"byte_end":198915,"line_start":64,"line_end":64,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1431}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linspace.rs","byte_start":199553,"byte_end":199561,"line_start":20,"line_end":20,"column_start":22,"column_end":30},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linspace.rs","byte_start":200102,"byte_end":200110,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linspace.rs","byte_start":200497,"byte_end":200505,"line_start":62,"line_end":62,"column_start":31,"column_end":39},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/logspace.rs","byte_start":202621,"byte_end":202629,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/logspace.rs","byte_start":203235,"byte_end":203243,"line_start":48,"line_end":48,"column_start":33,"column_end":41},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/logspace.rs","byte_start":203695,"byte_end":203703,"line_start":66,"line_end":66,"column_start":31,"column_end":39},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":210786,"byte_end":210791,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":211000,"byte_end":211011,"line_start":30,"line_end":30,"column_start":24,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":211770,"byte_end":211771,"line_start":67,"line_end":67,"column_start":26,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1511},"to":{"krate":0,"index":1496}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":212299,"byte_end":212304,"line_start":90,"line_end":90,"column_start":26,"column_end":31},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6895},"to":{"krate":0,"index":1496}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/shape_builder.rs","byte_start":212753,"byte_end":212758,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":214526,"byte_end":214531,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":217039,"byte_end":217051,"line_start":109,"line_end":109,"column_start":6,"column_end":18},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":218197,"byte_end":218209,"line_start":149,"line_end":149,"column_start":23,"column_end":35},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":220996,"byte_end":221001,"line_start":237,"line_end":237,"column_start":26,"column_end":31},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3856},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":221181,"byte_end":221193,"line_start":248,"line_end":248,"column_start":26,"column_end":38},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":221390,"byte_end":221402,"line_start":259,"line_end":259,"column_start":22,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3875},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222409,"byte_end":222418,"line_start":298,"line_end":298,"column_start":30,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222553,"byte_end":222562,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":222922,"byte_end":222931,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":223512,"byte_end":223521,"line_start":343,"line_end":343,"column_start":20,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":224197,"byte_end":224206,"line_start":366,"line_end":366,"column_start":38,"column_end":47},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":224401,"byte_end":224410,"line_start":376,"line_end":376,"column_start":52,"column_end":61},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":224945,"byte_end":224954,"line_start":393,"line_end":393,"column_start":21,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/slice.rs","byte_start":225024,"byte_end":225033,"line_start":400,"line_end":400,"column_start":22,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":237634,"byte_end":237643,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238113,"byte_end":238122,"line_start":68,"line_end":68,"column_start":36,"column_end":45},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2513},"to":{"krate":0,"index":1631}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238504,"byte_end":238509,"line_start":81,"line_end":81,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1646}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":238600,"byte_end":238601,"line_start":85,"line_end":85,"column_start":24,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1649},"to":{"krate":0,"index":1646}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":239426,"byte_end":239427,"line_start":115,"line_end":115,"column_start":28,"column_end":29},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":1651}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":241818,"byte_end":241822,"line_start":190,"line_end":190,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1676}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":242369,"byte_end":242374,"line_start":212,"line_end":212,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1687}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":244761,"byte_end":244770,"line_start":295,"line_end":295,"column_start":42,"column_end":51},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2513},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":245865,"byte_end":245877,"line_start":348,"line_end":348,"column_start":42,"column_end":54},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":246976,"byte_end":246988,"line_start":401,"line_end":401,"column_start":38,"column_end":50},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2521},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":248077,"byte_end":248092,"line_start":454,"line_end":454,"column_start":38,"column_end":53},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2524},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":251731,"byte_end":251734,"line_start":582,"line_end":582,"column_start":12,"column_end":15},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252336,"byte_end":252339,"line_start":604,"line_end":604,"column_start":12,"column_end":15},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":252944,"byte_end":252947,"line_start":625,"line_end":625,"column_start":16,"column_end":19},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":254275,"byte_end":254278,"line_start":676,"line_end":676,"column_start":12,"column_end":15},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/zip/mod.rs","byte_start":266512,"byte_end":266521,"line_start":1032,"line_end":1032,"column_start":9,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308154,"byte_end":308169,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":308526,"byte_end":308530,"line_start":72,"line_end":72,"column_start":26,"column_end":30},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4338},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":309399,"byte_end":309403,"line_start":107,"line_end":107,"column_start":37,"column_end":41},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4338},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axes.rs","byte_start":309774,"byte_end":309778,"line_start":125,"line_end":125,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1911}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/axis.rs","byte_start":311011,"byte_end":311015,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312753,"byte_end":312755,"line_start":46,"line_end":46,"column_start":24,"column_end":26},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":1936}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":312890,"byte_end":312891,"line_start":54,"line_end":54,"column_start":27,"column_end":28},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":1936}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":313041,"byte_end":313050,"line_start":65,"line_end":65,"column_start":24,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4727},"to":{"krate":0,"index":1936}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/conversion.rs","byte_start":313195,"byte_end":313198,"line_start":73,"line_end":73,"column_start":24,"column_end":27},"kind":{"Impl":{"id":253}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":1936}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":316604,"byte_end":316607,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":317105,"byte_end":317108,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dim.rs","byte_start":317233,"byte_end":317236,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321086,"byte_end":321091,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321098,"byte_end":321100,"line_start":32,"line_end":32,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321107,"byte_end":321112,"line_start":33,"line_end":33,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321119,"byte_end":321123,"line_start":34,"line_end":34,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321130,"byte_end":321134,"line_start":35,"line_end":35,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321141,"byte_end":321148,"line_start":36,"line_end":36,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321155,"byte_end":321163,"line_start":37,"line_end":37,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2356},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321193,"byte_end":321196,"line_start":38,"line_end":38,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2136},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321224,"byte_end":321233,"line_start":39,"line_end":39,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2167},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321248,"byte_end":321257,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2167},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321274,"byte_end":321277,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2141},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321305,"byte_end":321314,"line_start":42,"line_end":42,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2171},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321329,"byte_end":321338,"line_start":43,"line_end":43,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2171},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321355,"byte_end":321358,"line_start":44,"line_end":44,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321387,"byte_end":321390,"line_start":45,"line_end":45,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321418,"byte_end":321427,"line_start":46,"line_end":46,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2175},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321442,"byte_end":321451,"line_start":47,"line_end":47,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2175},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":321468,"byte_end":321477,"line_start":48,"line_end":48,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2175},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":331646,"byte_end":331649,"line_start":376,"line_end":376,"column_start":20,"column_end":23},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":332586,"byte_end":332589,"line_start":420,"line_end":420,"column_start":20,"column_end":23},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":334966,"byte_end":334969,"line_start":528,"line_end":528,"column_start":20,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":338669,"byte_end":338672,"line_start":685,"line_end":685,"column_start":20,"column_end":23},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":343738,"byte_end":343743,"line_start":859,"line_end":859,"column_start":20,"column_end":25},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":344804,"byte_end":344807,"line_start":908,"line_end":908,"column_start":23,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dimension_trait.rs","byte_start":344989,"byte_end":344992,"line_start":915,"line_end":915,"column_start":26,"column_end":29},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":345373,"byte_end":345382,"line_start":14,"line_end":14,"column_start":19,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":345730,"byte_end":345739,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":2284}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346141,"byte_end":346150,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346267,"byte_end":346276,"line_start":48,"line_end":48,"column_start":22,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346578,"byte_end":346587,"line_start":60,"line_end":60,"column_start":22,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":346829,"byte_end":346838,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347034,"byte_end":347043,"line_start":81,"line_end":81,"column_start":25,"column_end":34},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347251,"byte_end":347260,"line_start":90,"line_end":90,"column_start":20,"column_end":29},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347301,"byte_end":347310,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":347746,"byte_end":347755,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4714},"to":{"krate":2,"index":7026}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":348171,"byte_end":348180,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349505,"byte_end":349514,"line_start":159,"line_end":159,"column_start":29,"column_end":38},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349643,"byte_end":349652,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349782,"byte_end":349791,"line_start":173,"line_end":173,"column_start":22,"column_end":31},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":349971,"byte_end":349980,"line_start":183,"line_end":183,"column_start":25,"column_end":34},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350124,"byte_end":350133,"line_start":192,"line_end":192,"column_start":16,"column_end":25},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350248,"byte_end":350257,"line_start":200,"line_end":200,"column_start":19,"column_end":28},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":2284}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350580,"byte_end":350583,"line_start":216,"line_end":216,"column_start":21,"column_end":24},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/dynindeximpl.rs","byte_start":350759,"byte_end":350764,"line_start":223,"line_end":223,"column_start":6,"column_end":11},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351565,"byte_end":351570,"line_start":22,"line_end":22,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":351765,"byte_end":351766,"line_start":29,"line_end":29,"column_start":31,"column_end":32},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2298},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":353952,"byte_end":353954,"line_start":101,"line_end":101,"column_start":30,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/ndindex.rs","byte_start":354271,"byte_end":354273,"line_start":112,"line_end":112,"column_start":32,"column_end":34},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2491},"to":{"krate":0,"index":2293}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358734,"byte_end":358743,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2034},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358825,"byte_end":358828,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/remove_axis.rs","byte_start":358995,"byte_end":358998,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4567},"to":{"krate":0,"index":2346}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/dimension/mod.rs","byte_start":281570,"byte_end":281571,"line_start":277,"line_end":277,"column_start":26,"column_end":27},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2381},"to":{"krate":0,"index":2377}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":49753,"byte_end":49765,"line_start":1397,"line_end":1397,"column_start":19,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4858},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50227,"byte_end":50238,"line_start":1414,"line_end":1414,"column_start":9,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":50693,"byte_end":50701,"line_start":1432,"line_end":1432,"column_start":9,"column_end":17},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51084,"byte_end":51091,"line_start":1450,"line_end":1450,"column_start":13,"column_end":20},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_clone.rs","byte_start":361981,"byte_end":361990,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_clone.rs","byte_start":362795,"byte_end":362804,"line_start":37,"line_end":37,"column_start":48,"column_end":57},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":363827,"byte_end":363836,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":368060,"byte_end":368069,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_constructors.rs","byte_start":370726,"byte_end":370735,"line_start":243,"line_end":243,"column_start":15,"column_end":24},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_methods.rs","byte_start":380557,"byte_end":380566,"line_start":35,"line_end":35,"column_start":15,"column_end":24},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":457980,"byte_end":457985,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_owned_array.rs","byte_start":459379,"byte_end":459384,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/lib.rs","byte_start":51643,"byte_end":51652,"line_start":1476,"line_end":1476,"column_start":15,"column_end":24},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_1d.rs","byte_start":460218,"byte_end":460227,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_2d.rs","byte_start":461059,"byte_end":461068,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_dyn.rs","byte_start":463500,"byte_end":463509,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/numeric/impl_numeric.rs","byte_start":465621,"byte_end":465630,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":477367,"byte_end":477376,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":481734,"byte_end":481743,"line_start":169,"line_end":169,"column_start":44,"column_end":53},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":2986}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":482367,"byte_end":482376,"line_start":190,"line_end":190,"column_start":44,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":2986}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":482930,"byte_end":482939,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":484205,"byte_end":484214,"line_start":253,"line_end":253,"column_start":44,"column_end":53},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":2986}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486107,"byte_end":486116,"line_start":313,"line_end":313,"column_start":44,"column_end":53},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":2986}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/linalg/impl_linalg.rs","byte_start":486681,"byte_end":486690,"line_start":335,"line_end":335,"column_start":15,"column_end":24},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":503604,"byte_end":503609,"line_start":32,"line_end":32,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":3053}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":504091,"byte_end":504098,"line_start":48,"line_end":48,"column_start":24,"column_end":31},"kind":{"Impl":{"id":328}},"from":{"krate":21,"index":565},"to":{"krate":0,"index":3053}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":504130,"byte_end":504137,"line_start":49,"line_end":49,"column_start":24,"column_end":31},"kind":{"Impl":{"id":329}},"from":{"krate":21,"index":565},"to":{"krate":0,"index":3053}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":512184,"byte_end":512193,"line_start":293,"line_end":293,"column_start":27,"column_end":36},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_ops.rs","byte_start":513005,"byte_end":513014,"line_start":323,"line_end":323,"column_start":27,"column_end":36},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":2493},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":517287,"byte_end":517296,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":521060,"byte_end":521072,"line_start":109,"line_end":109,"column_start":16,"column_end":28},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":525189,"byte_end":525198,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/constructors.rs","byte_start":525645,"byte_end":525657,"line_start":230,"line_end":230,"column_start":16,"column_end":28},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":526952,"byte_end":526961,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":528488,"byte_end":528497,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":529365,"byte_end":529377,"line_start":95,"line_end":95,"column_start":13,"column_end":25},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530050,"byte_end":530062,"line_start":117,"line_end":117,"column_start":16,"column_end":28},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":530361,"byte_end":530370,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/conversions.rs","byte_start":531084,"byte_end":531096,"line_start":158,"line_end":158,"column_start":16,"column_end":28},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/indexing.rs","byte_start":537539,"byte_end":537551,"line_start":141,"line_end":141,"column_start":38,"column_end":50},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":3211}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":539918,"byte_end":539927,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":2513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_views/splitting.rs","byte_start":544014,"byte_end":544026,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":544709,"byte_end":544721,"line_start":6,"line_end":6,"column_start":12,"column_end":24},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":2521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_raw_views.rs","byte_start":549139,"byte_end":549154,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554197,"byte_end":554205,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":2509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554561,"byte_end":554569,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":2509},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.13.0/src/impl_cow.rs","byte_start":554878,"byte_end":554886,"line_start":45,"line_end":45,"column_start":38,"column_end":46},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":2509},"to":{"krate":2,"index":1989}}]}