{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4","program":"/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","permutohedron","/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=67748fb088a2f6bf","-C","extra-filename=-67748fb088a2f6bf","--out-dir","/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","-L","dependency=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin"],"output":"/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libpermutohedron-67748fb088a2f6bf.rmeta"},"prelude":{"crate_id":{"name":"permutohedron","disambiguator":[10418545096686188118,10778912840727095849]},"crate_root":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src","external_crates":[{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9052359605736874625,10969620614104782158]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10208286902242434637,2419506206398467119]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14522653865950379425,1291702403687991040]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16226811538171955058,16445660279390814719]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8256647374517566634,12796438860464481652]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9027588853239241607,17582582296105197793]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5426963357244781228,922338936816546458]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2962871395052763982,5928641137518604403]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15745431865555696781,12103685295896601039]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7271060651791987639,13811114011233058843]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2069665013813441304,7528560138124483874]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16884418941088283343,17748518302090179015]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14905414021948729466,3432527410087948583]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13029430744807000157,16797736332599686345]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[3526016130744516730,11239067909179244643]}}],"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":0,"byte_end":9915,"line_start":1,"line_end":324,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":6},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":335,"byte_end":353,"line_start":15,"line_end":15,"column_start":18,"column_end":36},"alias_span":null,"name":"LexicalPermutation","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":0,"byte_end":9915,"line_start":1,"line_end":324,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":84},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":13},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":51},{"krate":0,"index":61},{"krate":0,"index":67}],"decl_id":null,"docs":"\n ## Crate Feature Flags","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":44,"byte_end":47,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":48,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":75,"byte_end":78,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `std`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":79,"byte_end":90,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/   + Default. Disabling `std` requires Rust 1.6 or later","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":91,"byte_end":150,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/   + Disabling `std` makes the crate a `#![no_std]` crate (works with core)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":151,"byte_end":229,"line_start":8,"line_end":8,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10520,"byte_end":10538,"line_start":23,"line_end":23,"column_start":11,"column_end":29},"name":"LexicalPermutation","qualname":"::lexical::LexicalPermutation","value":"LexicalPermutation","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" Permute a slice into its next or previous permutation (in lexical order).","sig":null,"attributes":[{"value":"/ Permute a slice into its next or previous permutation (in lexical order).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":9917,"byte_end":9994,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":9995,"byte_end":9998,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":9999,"byte_end":10006,"line_start":3,"line_end":3,"column_start":1,"column_end":8}},{"value":"/ use permutohedron::LexicalPermutation;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10007,"byte_end":10049,"line_start":4,"line_end":4,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10050,"byte_end":10053,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ let mut data = [1, 2, 3];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10054,"byte_end":10083,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/ let mut permutations = Vec::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10084,"byte_end":10122,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10123,"byte_end":10126,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10127,"byte_end":10137,"line_start":9,"line_end":9,"column_start":1,"column_end":11}},{"value":"/     permutations.push(data.to_vec());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10138,"byte_end":10179,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/     if !data.next_permutation() {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10180,"byte_end":10217,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/         break;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10218,"byte_end":10236,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10237,"byte_end":10246,"line_start":13,"line_end":13,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10247,"byte_end":10252,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10253,"byte_end":10256,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(permutations, &[&[1, 2, 3], &[1, 3, 2],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10257,"byte_end":10311,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/                            &[2, 1, 3], &[2, 3, 1],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10312,"byte_end":10366,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/                            &[3, 1, 2], &[3, 2, 1]]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10367,"byte_end":10423,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10424,"byte_end":10427,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // `data` has been mutated in-place:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10428,"byte_end":10468,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(data, [3, 2, 1]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10469,"byte_end":10501,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10502,"byte_end":10509,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10663,"byte_end":10679,"line_start":26,"line_end":26,"column_start":8,"column_end":24},"name":"next_permutation","qualname":"::lexical::LexicalPermutation::next_permutation","value":"pub fn next_permutation(&mut Self) -> bool","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Return `true` if the slice was permuted, `false` if it is already\n at the last ordered permutation.\n","sig":null,"attributes":[{"value":"/ Return `true` if the slice was permuted, `false` if it is already","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10545,"byte_end":10614,"line_start":24,"line_end":24,"column_start":5,"column_end":74}},{"value":"/ at the last ordered permutation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10619,"byte_end":10655,"line_start":25,"line_end":25,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10823,"byte_end":10839,"line_start":29,"line_end":29,"column_start":8,"column_end":24},"name":"prev_permutation","qualname":"::lexical::LexicalPermutation::prev_permutation","value":"pub fn prev_permutation(&mut Self) -> bool","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Return `true` if the slice was permuted, `false` if it is already\n at the first ordered permutation.\n","sig":null,"attributes":[{"value":"/ Return `true` if the slice was permuted, `false` if it is already","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10704,"byte_end":10773,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ at the first ordered permutation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lexical.rs","byte_start":10778,"byte_end":10815,"line_start":28,"line_end":28,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"control","qualname":"::control","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":82},{"krate":0,"index":79},{"krate":0,"index":76},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":28}],"decl_id":null,"docs":" Control flow for callbacks.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":369,"byte_end":381,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ Control flow for callbacks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13220,"byte_end":13251,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":71},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13539,"byte_end":13547,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Continue","qualname":"::control::Control::Continue","value":"Control::Continue","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":73},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13553,"byte_end":13558,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Break","qualname":"::control::Control::Break","value":"Control::Break(B)","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":69},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13522,"byte_end":13529,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Control","qualname":"::control::Control","value":"pub enum Control<B> { Continue, Break(B), }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[{"value":"/ Control flow for callbacks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13416,"byte_end":13447,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13448,"byte_end":13451,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Break` can carry a value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13452,"byte_end":13482,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13598,"byte_end":13606,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"breaking","qualname":"<Control<B>>::breaking","value":"pub fn breaking() -> Control<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13716,"byte_end":13727,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"break_value","qualname":"<Control<B>>::break_value","value":"pub fn break_value(Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Get the value in `Control::Break(_)`, if present.\n","sig":null,"attributes":[{"value":"/ Get the value in `Control::Break(_)`, if present.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13651,"byte_end":13704,"line_start":24,"line_end":24,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13975,"byte_end":13986,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"ControlFlow","qualname":"::control::ControlFlow","value":"ControlFlow","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[{"value":"/ Control flow for callbacks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13870,"byte_end":13901,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13902,"byte_end":13905,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The empty return value `()` is equivalent to continue.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13906,"byte_end":13964,"line_start":35,"line_end":35,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13996,"byte_end":14006,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"continuing","qualname":"::control::ControlFlow::continuing","value":"pub fn continuing() -> Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":14039,"byte_end":14051,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"should_break","qualname":"::control::ControlFlow::should_break","value":"pub fn should_break(&Self) -> bool","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":14022,"byte_end":14031,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":1136,"byte_end":1150,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"heap_recursive","qualname":"::heap_recursive","value":"pub fn heap_recursive<T, F, C>(&mut [T], F) -> C where F: FnMut(&mut [T]) ->\nC, C: ControlFlow","parent":null,"children":[],"decl_id":null,"docs":" Heap's algorithm for generating permutations, recursive version.","sig":null,"attributes":[{"value":"/ Heap's algorithm for generating permutations, recursive version.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":427,"byte_end":495,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":496,"byte_end":499,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The recursive algorithm supports slices of any size (even though","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":500,"byte_end":568,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ only a small number of elements is practical), and is generally","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":569,"byte_end":636,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ a bit faster than the iterative version.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":637,"byte_end":681,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":682,"byte_end":685,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The closure `f` may return either `()` to simply run through all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":686,"byte_end":754,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ permutations, or a `Control` value that permits breaking the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":755,"byte_end":819,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/ iteration early.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":820,"byte_end":840,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":841,"byte_end":844,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":845,"byte_end":852,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use permutohedron::heap_recursive;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":853,"byte_end":891,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":892,"byte_end":895,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut data = [1, 2, 3, 4, 5, 6];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":896,"byte_end":934,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let mut permutations = Vec::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":935,"byte_end":973,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ heap_recursive(&mut data, |permutation| {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":974,"byte_end":1019,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/     permutations.push(permutation.to_vec())","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":1020,"byte_end":1067,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":1068,"byte_end":1075,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":1076,"byte_end":1079,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(permutations.len(), 720);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":1080,"byte_end":1120,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":1121,"byte_end":1128,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":41},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2719,"byte_end":2726,"line_start":98,"line_end":98,"column_start":11,"column_end":18},"name":"MAXHEAP","qualname":"::MAXHEAP","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of elements we can generate permutations for using\n Heap's algorithm (iterative version).\n","sig":null,"attributes":[{"value":"/ Maximum number of elements we can generate permutations for using","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2597,"byte_end":2666,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ Heap's algorithm (iterative version).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2667,"byte_end":2708,"line_start":97,"line_end":97,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":42},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3310,"byte_end":3314,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"Heap","qualname":"::Heap","value":"Heap {  }","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50}],"decl_id":null,"docs":" Heap's algorithm for generating permutations.","sig":null,"attributes":[{"value":"/ Heap's algorithm for generating permutations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2741,"byte_end":2790,"line_start":100,"line_end":100,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2791,"byte_end":2794,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ An iterative method of generating all permutations of a sequence.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2795,"byte_end":2864,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2865,"byte_end":2868,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Note that for *n* elements there are *n!* (*n* factorial) permutations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2869,"byte_end":2944,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2945,"byte_end":2948,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2949,"byte_end":2956,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use permutohedron::Heap;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2957,"byte_end":2985,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2986,"byte_end":2989,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ let mut data = vec![1, 2, 3];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":2990,"byte_end":3023,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ let heap = Heap::new(&mut data);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3024,"byte_end":3060,"line_start":110,"line_end":110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3061,"byte_end":3064,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let mut permutations = Vec::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3065,"byte_end":3103,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"/ for data in heap {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3104,"byte_end":3126,"line_start":113,"line_end":113,"column_start":1,"column_end":23}},{"value":"/     permutations.push(data.clone());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3127,"byte_end":3167,"line_start":114,"line_end":114,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3168,"byte_end":3173,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3174,"byte_end":3177,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(permutations.len(), 6);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3178,"byte_end":3216,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3217,"byte_end":3224,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3288,"byte_end":3298,"line_start":120,"line_end":120,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4075,"byte_end":4078,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<Heap>::new","value":"pub fn new(&'a mut Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Heap`.","sig":null,"attributes":[{"value":"/ Create a new `Heap`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3725,"byte_end":3749,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3754,"byte_end":3757,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the number of elements is too large (see `MAXHEAP`)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3762,"byte_end":3833,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3838,"byte_end":3841,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The `heap_recursive` function has no length limit, but","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3846,"byte_end":3904,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/ note that for *n* elements there are *n!* (*n* factorial) permutations,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3909,"byte_end":3984,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ which gets impractical for surprisingingly small values of *n* anyway.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3989,"byte_end":4063,"line_start":141,"line_end":141,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4357,"byte_end":4360,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"get","qualname":"<Heap>::get","value":"pub fn get(&Self) -> &Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner data\n","sig":null,"attributes":[{"value":"/ Return a reference to the inner data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4305,"byte_end":4345,"line_start":152,"line_end":152,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4468,"byte_end":4475,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Heap>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Data","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner data\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the inner data","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4408,"byte_end":4456,"line_start":157,"line_end":157,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4702,"byte_end":4707,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"reset","qualname":"<Heap>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the permutations walker, without changing the data. It allows\n generating permutations again with the current state as starting\n point.\n","sig":null,"attributes":[{"value":"/ Reset the permutations walker, without changing the data. It allows","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4531,"byte_end":4602,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ generating permutations again with the current state as starting","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4607,"byte_end":4675,"line_start":163,"line_end":163,"column_start":5,"column_end":73}},{"value":"/ point.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4680,"byte_end":4690,"line_start":164,"line_end":164,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":5051,"byte_end":5067,"line_start":175,"line_end":175,"column_start":12,"column_end":28},"name":"next_permutation","qualname":"<Heap>::next_permutation","value":"pub fn next_permutation(&mut Self) -> Option<&mut Data>","parent":null,"children":[],"decl_id":null,"docs":" Step the internal data into the next permutation and return\n a reference to it. Return `None` when all permutations\n have been visited.","sig":null,"attributes":[{"value":"/ Step the internal data into the next permutation and return","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4798,"byte_end":4861,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ a reference to it. Return `None` when all permutations","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4866,"byte_end":4924,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/ have been visited.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4929,"byte_end":4951,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4956,"byte_end":4959,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Note that for *n* elements there are *n!* (*n* factorial) permutations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":4964,"byte_end":5039,"line_start":174,"line_end":174,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":6471,"byte_end":6480,"line_start":220,"line_end":220,"column_start":8,"column_end":17},"name":"factorial","qualname":"::factorial","value":"pub fn factorial(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute *n!* (*n* factorial)\n","sig":null,"attributes":[{"value":"/ Compute *n!* (*n* factorial)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":6431,"byte_end":6463,"line_start":219,"line_end":219,"column_start":1,"column_end":33}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13574,"byte_end":13581,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":14157,"byte_end":14164,"line_start":46,"line_end":46,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":14355,"byte_end":14361,"line_start":53,"line_end":53,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3674,"byte_end":3678,"line_start":132,"line_end":132,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":6163,"byte_end":6167,"line_start":207,"line_end":207,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":390,"byte_end":397,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":13}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":13574,"byte_end":13581,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":14157,"byte_end":14164,"line_start":46,"line_end":46,"column_start":25,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":19}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/control.rs","byte_start":14355,"byte_end":14361,"line_start":53,"line_end":53,"column_start":25,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":30220},"to":{"krate":0,"index":19}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":3674,"byte_end":3678,"line_start":132,"line_end":132,"column_start":27,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":42},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/permutohedron-0.2.4/src/lib.rs","byte_start":6163,"byte_end":6167,"line_start":207,"line_end":207,"column_start":40,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":42},"to":{"krate":2,"index":5543}}]}