{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0","program":"/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","petgraph","--edition=2018","/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"graphmap\"","--cfg","feature=\"matrix_graph\"","--cfg","feature=\"stable_graph\"","-C","metadata=c5ae4e750648f1ec","-C","extra-filename=-c5ae4e750648f1ec","--out-dir","/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","-L","dependency=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps","--extern","fixedbitset=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libfixedbitset-707c8a2a02ed0392.rmeta","--extern","indexmap=/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libindexmap-81409dc8fa2c4343.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/takanorifukuyama/.rustup/toolchains/beta-aarch64-apple-darwin"],"output":"/Users/takanorifukuyama/git/github.com/takanorifukuyama/abs/target/rls/debug/deps/libpetgraph-c5ae4e750648f1ec.rmeta"},"prelude":{"crate_id":{"name":"petgraph","disambiguator":[14244983183190508448,2957075557154350251]},"crate_root":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src","external_crates":[{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9052359605736874625,10969620614104782158]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10208286902242434637,2419506206398467119]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14522653865950379425,1291702403687991040]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16226811538171955058,16445660279390814719]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8256647374517566634,12796438860464481652]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9027588853239241607,17582582296105197793]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5426963357244781228,922338936816546458]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2962871395052763982,5928641137518604403]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15745431865555696781,12103685295896601039]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7271060651791987639,13811114011233058843]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2069665013813441304,7528560138124483874]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16884418941088283343,17748518302090179015]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14905414021948729466,3432527410087948583]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13029430744807000157,16797736332599686345]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[3526016130744516730,11239067909179244643]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":16,"id":{"name":"fixedbitset","disambiguator":[10835703545490129878,5604127378584280005]}},{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","num":17,"id":{"name":"indexmap","disambiguator":[12698384141978507422,16953065476767319779]}}],"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":0,"byte_end":9355,"line_start":1,"line_end":308,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5373,"byte_end":5378,"line_start":122,"line_end":122,"column_start":23,"column_end":28},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4660},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5408,"byte_end":5416,"line_start":124,"line_end":124,"column_start":28,"column_end":36},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4661},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5408,"byte_end":5416,"line_start":124,"line_end":124,"column_start":28,"column_end":36},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4657},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5418,"byte_end":5426,"line_start":124,"line_end":124,"column_start":38,"column_end":46},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4658},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5418,"byte_end":5426,"line_start":124,"line_end":124,"column_start":38,"column_end":46},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12721,"byte_end":12722,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12748,"byte_end":12749,"line_start":43,"line_end":43,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Reversed","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12831,"byte_end":12832,"line_start":50,"line_end":50,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"depth_first_search, DfsEvent","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12859,"byte_end":12860,"line_start":51,"line_end":51,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"Dfs, Bfs, Walker, DfsPostOrder","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85067,"byte_end":85072,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"astar","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":1359},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85099,"byte_end":85107,"line_start":28,"line_end":28,"column_start":26,"column_end":34},"alias_span":null,"name":"dijkstra","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":2882},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85138,"byte_end":85151,"line_start":29,"line_end":29,"column_start":30,"column_end":43},"alias_span":null,"name":"is_isomorphic","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":2887},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85153,"byte_end":85175,"line_start":29,"line_end":29,"column_start":45,"column_end":67},"alias_span":null,"name":"is_isomorphic_matching","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":3423},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85207,"byte_end":85223,"line_start":30,"line_end":30,"column_start":30,"column_end":46},"alias_span":null,"name":"all_simple_paths","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":122917,"byte_end":122926,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":122928,"byte_end":122937,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228512,"byte_end":228522,"line_start":29,"line_end":29,"column_start":5,"column_end":15},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228524,"byte_end":228534,"line_start":29,"line_end":29,"column_start":17,"column_end":27},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228536,"byte_end":228545,"line_start":29,"line_end":29,"column_start":29,"column_end":38},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":4284},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228547,"byte_end":228556,"line_start":29,"line_end":29,"column_start":40,"column_end":49},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228558,"byte_end":228568,"line_start":29,"line_end":29,"column_start":51,"column_end":61},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228570,"byte_end":228579,"line_start":29,"line_end":29,"column_start":63,"column_end":72},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":4247},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228581,"byte_end":228590,"line_start":29,"line_end":29,"column_start":74,"column_end":83},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":2055}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333281,"byte_end":333290,"line_start":25,"line_end":25,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2972}},{"kind":"Use","ref_id":{"krate":0,"index":1542},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394919,"byte_end":394926,"line_start":8,"line_end":8,"column_start":24,"column_end":31},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4284},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394928,"byte_end":394937,"line_start":8,"line_end":8,"column_start":33,"column_end":42},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394939,"byte_end":394944,"line_start":8,"line_end":8,"column_start":44,"column_end":49},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4247},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394946,"byte_end":394955,"line_start":8,"line_end":8,"column_start":51,"column_end":60},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":1546},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394957,"byte_end":394964,"line_start":8,"line_end":8,"column_start":62,"column_end":69},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":2547},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395040,"byte_end":395050,"line_start":11,"line_end":11,"column_start":27,"column_end":37},"alias_span":null,"name":"DiGraphMap","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4481},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395052,"byte_end":395060,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"GraphMap","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":2544},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395062,"byte_end":395072,"line_start":11,"line_end":11,"column_start":49,"column_end":59},"alias_span":null,"name":"UnGraphMap","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":2113},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395156,"byte_end":395169,"line_start":14,"line_end":14,"column_start":31,"column_end":44},"alias_span":null,"name":"StableDiGraph","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":2103},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395171,"byte_end":395182,"line_start":14,"line_end":14,"column_start":46,"column_end":57},"alias_span":null,"name":"StableGraph","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":2117},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395184,"byte_end":395197,"line_start":14,"line_end":14,"column_start":59,"column_end":72},"alias_span":null,"name":"StableUnGraph","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395241,"byte_end":395244,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"alias_span":null,"name":"Bfs","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395246,"byte_end":395249,"line_start":16,"line_end":16,"column_start":29,"column_end":32},"alias_span":null,"name":"Dfs","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395251,"byte_end":395263,"line_start":16,"line_end":16,"column_start":34,"column_end":46},"alias_span":null,"name":"DfsPostOrder","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4681},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395300,"byte_end":395308,"line_start":18,"line_end":18,"column_start":17,"column_end":25},"alias_span":null,"name":"Directed","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4656},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395310,"byte_end":395319,"line_start":18,"line_end":18,"column_start":27,"column_end":36},"alias_span":null,"name":"Direction","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4660},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395321,"byte_end":395329,"line_start":18,"line_end":18,"column_start":38,"column_end":46},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4661},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395321,"byte_end":395329,"line_start":18,"line_end":18,"column_start":38,"column_end":46},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3503}},{"kind":"Use","ref_id":{"krate":0,"index":4657},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395331,"byte_end":395339,"line_start":18,"line_end":18,"column_start":48,"column_end":56},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":4658},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395331,"byte_end":395339,"line_start":18,"line_end":18,"column_start":48,"column_end":56},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":3504}},{"kind":"Use","ref_id":{"krate":0,"index":4687},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395341,"byte_end":395351,"line_start":18,"line_end":18,"column_start":58,"column_end":68},"alias_span":null,"name":"Undirected","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":395395,"byte_end":395402,"line_start":21,"line_end":21,"column_start":23,"column_end":30},"alias_span":null,"name":"EdgeRef","value":"","parent":{"krate":0,"index":3481}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6178,"byte_end":6188,"line_start":165,"line_end":165,"column_start":9,"column_end":19},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6190,"byte_end":6200,"line_start":165,"line_end":165,"column_start":21,"column_end":31},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6202,"byte_end":6211,"line_start":165,"line_end":165,"column_start":33,"column_end":42},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1542},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6213,"byte_end":6220,"line_start":165,"line_end":165,"column_start":44,"column_end":51},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6222,"byte_end":6226,"line_start":165,"line_end":165,"column_start":53,"column_end":57},"alias_span":null,"name":"Edge","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4284},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6228,"byte_end":6237,"line_start":165,"line_end":165,"column_start":59,"column_end":68},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4356},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6239,"byte_end":6250,"line_start":165,"line_end":165,"column_start":70,"column_end":81},"alias_span":null,"name":"EdgeIndices","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4366},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6252,"byte_end":6265,"line_start":165,"line_end":165,"column_start":83,"column_end":96},"alias_span":null,"name":"EdgeReference","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1969},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6275,"byte_end":6289,"line_start":166,"line_end":166,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeReferences","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6291,"byte_end":6305,"line_start":166,"line_end":166,"column_start":25,"column_end":39},"alias_span":null,"name":"EdgeWeightsMut","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1751},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6307,"byte_end":6312,"line_start":166,"line_end":166,"column_start":41,"column_end":46},"alias_span":null,"name":"Edges","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1680},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6314,"byte_end":6323,"line_start":166,"line_end":166,"column_start":48,"column_end":57},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6325,"byte_end":6331,"line_start":166,"line_end":166,"column_start":59,"column_end":65},"alias_span":null,"name":"Frozen","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6333,"byte_end":6338,"line_start":166,"line_end":166,"column_start":67,"column_end":72},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6340,"byte_end":6350,"line_start":166,"line_end":166,"column_start":74,"column_end":84},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6352,"byte_end":6361,"line_start":166,"line_end":166,"column_start":86,"column_end":95},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1695},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6371,"byte_end":6380,"line_start":167,"line_end":167,"column_start":9,"column_end":18},"alias_span":null,"name":"Neighbors","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4321},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6382,"byte_end":6386,"line_start":167,"line_end":167,"column_start":20,"column_end":24},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4247},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6388,"byte_end":6397,"line_start":167,"line_end":167,"column_start":26,"column_end":35},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":4346},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6399,"byte_end":6410,"line_start":167,"line_end":167,"column_start":37,"column_end":48},"alias_span":null,"name":"NodeIndices","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6412,"byte_end":6426,"line_start":167,"line_end":167,"column_start":50,"column_end":64},"alias_span":null,"name":"NodeReferences","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1794},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6428,"byte_end":6442,"line_start":167,"line_end":167,"column_start":66,"column_end":80},"alias_span":null,"name":"NodeWeightsMut","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1546},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6444,"byte_end":6451,"line_start":167,"line_end":167,"column_start":82,"column_end":89},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6461,"byte_end":6474,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"alias_span":null,"name":"WalkNeighbors","value":"","parent":{"krate":0,"index":3507}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6546,"byte_end":6558,"line_start":173,"line_end":173,"column_start":28,"column_end":40},"alias_span":null,"name":"stable_graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4656},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7523,"byte_end":7532,"line_start":217,"line_end":217,"column_start":16,"column_end":25},"alias_span":null,"name":"EdgeDirection","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":0,"byte_end":9355,"line_start":1,"line_end":308,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":4695},{"krate":0,"index":8},{"krate":0,"index":4697},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":28},{"krate":0,"index":757},{"krate":0,"index":902},{"krate":0,"index":1061},{"krate":0,"index":1091},{"krate":0,"index":1344},{"krate":0,"index":1363},{"krate":0,"index":1437},{"krate":0,"index":2504},{"krate":0,"index":2849},{"krate":0,"index":2931},{"krate":0,"index":2962},{"krate":0,"index":2972},{"krate":0,"index":3411},{"krate":0,"index":3429},{"krate":0,"index":3458},{"krate":0,"index":3474},{"krate":0,"index":3481},{"krate":0,"index":3507},{"krate":0,"index":3533},{"krate":0,"index":4656},{"krate":0,"index":4678},{"krate":0,"index":4676},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4671},{"krate":0,"index":4669},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4663},{"krate":0,"index":4679},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4682},{"krate":0,"index":4685},{"krate":0,"index":4687},{"krate":0,"index":4690},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3543},{"krate":0,"index":3545},{"krate":0,"index":3549},{"krate":0,"index":3554},{"krate":0,"index":3559},{"krate":0,"index":3565},{"krate":0,"index":3571}],"decl_id":null,"docs":" `petgraph` is a graph data structure library.","sig":null,"attributes":[{"value":"/ `petgraph` is a graph data structure library.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":0,"byte_end":49,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":50,"byte_end":53,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Graphs are collections of nodes, and edges between nodes. `petgraph`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":54,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ provides several [graph types](index.html#graph-types) (each differing in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":127,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ tradeoffs taken in their internal representation),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":209,"byte_end":263,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/ [algorithms](./algo/index.html#functions) on those graphs, and functionality to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":264,"byte_end":347,"line_start":6,"line_end":6,"column_start":1,"column_end":84}},{"value":"/ [output graphs](./doc/petgraph/dot/struct.Dot.html) in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":348,"byte_end":406,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/ [`graphviz`](https://www.graphviz.org/) format. Both nodes and edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":407,"byte_end":479,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ can have arbitrary associated data, and edges may be either directed or undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":480,"byte_end":567,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":568,"byte_end":571,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":572,"byte_end":585,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":586,"byte_end":589,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":590,"byte_end":601,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use petgraph::graph::{NodeIndex, UnGraph};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":602,"byte_end":648,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ use petgraph::algo::{dijkstra, min_spanning_tree};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":649,"byte_end":703,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ use petgraph::data::FromElements;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":704,"byte_end":741,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ use petgraph::dot::{Dot, Config};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":742,"byte_end":779,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":780,"byte_end":783,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Create an undirected graph with `i32` nodes and edges with `()` associated data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":784,"byte_end":871,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/ let g = UnGraph::<i32, ()>::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":872,"byte_end":917,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     (1, 2), (2, 3), (3, 4),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":918,"byte_end":949,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/     (1, 4)]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":950,"byte_end":967,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":968,"byte_end":971,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Find the shortest path from `1` to `4` using `1` as the cost for every edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":972,"byte_end":1055,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ let node_map = dijkstra(&g, 1.into(), Some(4.into()), |_| 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1056,"byte_end":1121,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(&1i32, node_map.get(&NodeIndex::new(4)).unwrap());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1122,"byte_end":1187,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Get the minimum spanning tree of the graph as a new graph, and check that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1192,"byte_end":1272,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ // one edge was trimmed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1273,"byte_end":1301,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mst = UnGraph::<_, _>::from_elements(min_spanning_tree(&g));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1302,"byte_end":1370,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(g.raw_edges().len() - 1, mst.raw_edges().len());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1371,"byte_end":1434,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1435,"byte_end":1438,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // Output the tree to `graphviz` `DOT` format","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1439,"byte_end":1488,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ println!(\"{:?}\", Dot::with_config(&mst, &[Config::EdgeNoLabel]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1489,"byte_end":1558,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ // graph {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1559,"byte_end":1573,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/ //     0 [label=\"\\\"0\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1574,"byte_end":1602,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ //     1 [label=\"\\\"0\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1603,"byte_end":1631,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ //     2 [label=\"\\\"0\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1632,"byte_end":1660,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ //     3 [label=\"\\\"0\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1661,"byte_end":1689,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ //     1 -- 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1690,"byte_end":1707,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ //     3 -- 4","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1708,"byte_end":1725,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ //     2 -- 3","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1726,"byte_end":1743,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ // }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1744,"byte_end":1752,"line_start":43,"line_end":43,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1753,"byte_end":1760,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1761,"byte_end":1764,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Graph types","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1765,"byte_end":1782,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1783,"byte_end":1786,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ * [`Graph`](./graph/struct.Graph.html) -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1787,"byte_end":1831,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/   An adjacency list graph with arbitrary associated data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1832,"byte_end":1893,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/ * [`StableGraph`](./stable_graph/struct.StableGraph.html) -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1894,"byte_end":1957,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/   Similar to `Graph`, but it keeps indices stable across removals.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":1958,"byte_end":2028,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/ * [`GraphMap`](./graphmap/struct.GraphMap.html) -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2029,"byte_end":2082,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/   An adjacency list graph backed by a hash table. The node identifiers are the keys","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2083,"byte_end":2170,"line_start":53,"line_end":53,"column_start":1,"column_end":88}},{"value":"/   into the table.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2171,"byte_end":2192,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ * [`MatrixGraph`](./matrix_graph/struct.MatrixGraph.html) -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2193,"byte_end":2256,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/   An adjacency matrix graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2257,"byte_end":2289,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/ * [`CSR`](./csr/struct.Csr.html) -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2290,"byte_end":2328,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/   A sparse adjacency matrix graph with arbitrary associated data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2329,"byte_end":2398,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2399,"byte_end":2402,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ### Generic parameters","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2403,"byte_end":2429,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2430,"byte_end":2433,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Each graph type is generic over a handful of parameters. All graphs share 3 common","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2434,"byte_end":2520,"line_start":62,"line_end":62,"column_start":1,"column_end":87}},{"value":"/ parameters, `N`, `E`, and `Ty`. This is a broad overview of what those are. Each","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2521,"byte_end":2605,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"/ type's documentation will have finer detail on these parameters.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2606,"byte_end":2674,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2675,"byte_end":2678,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ `N` & `E` are called *weights* in this implementation, and are associated with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2679,"byte_end":2761,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ nodes and edges respectively. They can generally be of arbitrary type, and don't have to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2762,"byte_end":2854,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/ be what you might conventionally consider weight-like. For example, using `&str` for `N`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2855,"byte_end":2947,"line_start":68,"line_end":68,"column_start":1,"column_end":93}},{"value":"/ will work. Many algorithms that require costs let you provide a cost function that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":2948,"byte_end":3034,"line_start":69,"line_end":69,"column_start":1,"column_end":87}},{"value":"/ translates your `N` and `E` weights into costs appropriate to the algorithm. Some graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3035,"byte_end":3126,"line_start":70,"line_end":70,"column_start":1,"column_end":92}},{"value":"/ types and choices do impose bounds on `N` or `E`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3127,"byte_end":3180,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`min_spanning_tree`](./algo/fn.min_spanning_tree.html) for example requires edge weights that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3181,"byte_end":3279,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ implement [`PartialOrd`](https://doc.rust-lang.org/stable/core/cmp/trait.PartialOrd.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3280,"byte_end":3374,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ [`GraphMap`](./graphmap/struct.GraphMap.html) requires node weights that can serve as hash","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3375,"byte_end":3469,"line_start":74,"line_end":74,"column_start":1,"column_end":95}},{"value":"/ map keys, since that graph type does not create standalone node indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3470,"byte_end":3546,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3547,"byte_end":3550,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ `Ty` controls whether edges are [`Directed`](./petgraph/enum.Directed.html) or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3551,"byte_end":3633,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ [`Undirected`](./petgraph/enum.Unirected.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3634,"byte_end":3685,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3686,"byte_end":3689,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `Ix` appears on graph types that use indices. It is exposed so you can control","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3690,"byte_end":3772,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ the size of node and edge indices, and therefore the memory footprint of your graphs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3773,"byte_end":3862,"line_start":81,"line_end":81,"column_start":1,"column_end":90}},{"value":"/ Allowed values are `u8`, `u16`, `u32`, and `usize`, with `u32` being the default.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3863,"byte_end":3948,"line_start":82,"line_end":82,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3949,"byte_end":3952,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ### Shorthand types","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3953,"byte_end":3976,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3977,"byte_end":3980,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Each graph type vends a few shorthand type definitions that name some specific","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":3981,"byte_end":4063,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/ generic choices. For example, [`DiGraph<_, _>`](./graph/type.DiGraph.html) is shorthand","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4064,"byte_end":4155,"line_start":87,"line_end":87,"column_start":1,"column_end":92}},{"value":"/ for [`Graph<_, _, Undirected>`](graph/struct.Graph.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4156,"byte_end":4217,"line_start":88,"line_end":88,"column_start":1,"column_end":62}},{"value":"/ [`UnMatrix<_, _>`](./matrix_graph/type.UnMatrix.html) is shorthand for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4218,"byte_end":4292,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ [`MatrixGraph<_, _, Undirected>`](./matrix_graph/struct.MatrixGraph.html). Each graph type's","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4293,"byte_end":4389,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/ module documentation lists the available shorthand types.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4390,"byte_end":4451,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4452,"byte_end":4455,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Crate features","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4456,"byte_end":4476,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4477,"byte_end":4480,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * **serde-1** -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4481,"byte_end":4500,"line_start":95,"line_end":95,"column_start":1,"column_end":20}},{"value":"/   Defaults off. Enables serialization for ``Graph, StableGraph`` using","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4501,"byte_end":4575,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/   [`serde 1.0`](https://crates.io/crates/serde). May require a more recent version","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4576,"byte_end":4662,"line_start":97,"line_end":97,"column_start":1,"column_end":87}},{"value":"/   of Rust than petgraph alone.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4663,"byte_end":4697,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"/ * **graphmap** -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4698,"byte_end":4718,"line_start":99,"line_end":99,"column_start":1,"column_end":21}},{"value":"/   Defaults on. Enables [`GraphMap`](./graphmap/struct.GraphMap.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4719,"byte_end":4792,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ * **stable_graph** -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4793,"byte_end":4817,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/   Defaults on. Enables [`StableGraph`](./stable_graph/struct.StableGraph.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4818,"byte_end":4901,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/ * **matrix_graph** -","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4902,"byte_end":4926,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/   Defaults on. Enables [`MatrixGraph`](./matrix_graph/struct.MatrixGraph.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":4927,"byte_end":5010,"line_start":104,"line_end":104,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5011,"byte_end":5014,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":38},{"krate":0,"index":80},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":4731},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3736},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":208},{"krate":0,"index":216},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3751},{"krate":0,"index":223},{"krate":0,"index":231},{"krate":0,"index":239},{"krate":0,"index":247},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":254},{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":276},{"krate":0,"index":3781},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3795},{"krate":0,"index":282},{"krate":0,"index":290},{"krate":0,"index":301},{"krate":0,"index":3801},{"krate":0,"index":3805},{"krate":0,"index":306},{"krate":0,"index":313},{"krate":0,"index":3812},{"krate":0,"index":3816},{"krate":0,"index":321},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":327},{"krate":0,"index":333},{"krate":0,"index":339},{"krate":0,"index":344},{"krate":0,"index":3831},{"krate":0,"index":3835},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":353},{"krate":0,"index":361},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":382},{"krate":0,"index":3854},{"krate":0,"index":3858},{"krate":0,"index":387},{"krate":0,"index":394},{"krate":0,"index":402},{"krate":0,"index":409},{"krate":0,"index":417},{"krate":0,"index":424},{"krate":0,"index":430},{"krate":0,"index":3865},{"krate":0,"index":3869},{"krate":0,"index":437},{"krate":0,"index":444},{"krate":0,"index":680}],"decl_id":null,"docs":" Graph traits and graph traversals.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5518,"byte_end":5530,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/ Graph traits and graph traversals.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11135,"byte_end":11173,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11174,"byte_end":11177,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ### The `Into-` Traits","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11178,"byte_end":11204,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11205,"byte_end":11208,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Graph traits like [`IntoNeighbors`][in] create iterators and use the same","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11209,"byte_end":11286,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ pattern that `IntoIterator` does: the trait takes a reference to a graph,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11287,"byte_end":11364,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ and produces an iterator. These traits are quite composable, but with the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11365,"byte_end":11442,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ limitation that they only use shared references to graphs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11443,"byte_end":11505,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11506,"byte_end":11509,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Graph Traversal","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11510,"byte_end":11533,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11534,"byte_end":11537,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Dfs`](struct.Dfs.html), [`Bfs`][bfs], [`DfsPostOrder`][dfspo] and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11538,"byte_end":11609,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ [`Topo`][topo]  are basic visitors and they use “walker” methods: the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11610,"byte_end":11687,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ visitors don't hold the graph as borrowed during traversal, only for the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11688,"byte_end":11764,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ `.next()` call on the walker. They can be converted to iterators","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11765,"byte_end":11833,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ through the [`Walker`][w] trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11834,"byte_end":11870,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11871,"byte_end":11874,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ There is also the callback based traversal [`depth_first_search`][dfs].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11875,"byte_end":11950,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11951,"byte_end":11954,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [bfs]: struct.Bfs.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11955,"byte_end":11981,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [dfspo]: struct.DfsPostOrder.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":11982,"byte_end":12019,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/ [topo]: struct.Topo.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12020,"byte_end":12048,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [dfs]: fn.depth_first_search.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12049,"byte_end":12086,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/ [w]: trait.Walker.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12087,"byte_end":12113,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12114,"byte_end":12117,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ### Other Graph Traits","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12118,"byte_end":12144,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12145,"byte_end":12148,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The traits are rather loosely coupled at the moment (which is intentional,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12149,"byte_end":12227,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ but will develop a bit), and there are traits missing that could be added.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12228,"byte_end":12306,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12307,"byte_end":12310,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Not much is needed to be able to use the visitors on a graph. A graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12311,"byte_end":12384,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ needs to define [`GraphBase`][gb], [`IntoNeighbors`][in] and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12385,"byte_end":12449,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ [`Visitable`][vis] as a minimum.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12450,"byte_end":12486,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12487,"byte_end":12490,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [gb]: trait.GraphBase.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12491,"byte_end":12521,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ [in]: trait.IntoNeighbors.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12522,"byte_end":12556,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ [vis]: trait.Visitable.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12557,"byte_end":12588,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":12589,"byte_end":12592,"line_start":38,"line_end":38,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34599,"byte_end":34603,"line_start":6,"line_end":6,"column_start":12,"column_end":16},"name":"Time","qualname":"::visit::dfsvisit::Time","value":"","parent":null,"children":[],"decl_id":null,"docs":" Strictly monotonically increasing event time for a depth first search.\n","sig":null,"attributes":[{"value":"/ Strictly monotonically increasing event time for a depth first search.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34436,"byte_end":34510,"line_start":4,"line_end":4,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34604,"byte_end":34613,"line_start":6,"line_end":6,"column_start":17,"column_end":26},"name":"0","qualname":"::visit::dfsvisit::Time::0","value":"usize","parent":{"krate":0,"index":3594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34720,"byte_end":34728,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Discover","qualname":"::visit::dfsvisit::DfsEvent::Discover","value":"DfsEvent::Discover(N, Time)","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34796,"byte_end":34804,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"TreeEdge","qualname":"::visit::dfsvisit::DfsEvent::TreeEdge","value":"DfsEvent::TreeEdge(N, N)","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":" An edge of the tree formed by the traversal.\n","sig":null,"attributes":[{"value":"/ An edge of the tree formed by the traversal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34743,"byte_end":34791,"line_start":12,"line_end":12,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34860,"byte_end":34868,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"BackEdge","qualname":"::visit::dfsvisit::DfsEvent::BackEdge","value":"DfsEvent::BackEdge(N, N)","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":" An edge to an already visited node.\n","sig":null,"attributes":[{"value":"/ An edge to an already visited node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34816,"byte_end":34855,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35054,"byte_end":35070,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"CrossForwardEdge","qualname":"::visit::dfsvisit::DfsEvent::CrossForwardEdge","value":"DfsEvent::CrossForwardEdge(N, N)","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":" A cross or forward edge.","sig":null,"attributes":[{"value":"/ A cross or forward edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34880,"byte_end":34908,"line_start":16,"line_end":16,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34913,"byte_end":34916,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ For an edge *(u, v)*, if the discover time of *v* is greater than *u*,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34921,"byte_end":34995,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ then it is a forward edge, else a cross edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35000,"byte_end":35049,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35132,"byte_end":35138,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Finish","qualname":"::visit::dfsvisit::DfsEvent::Finish","value":"DfsEvent::Finish(N, Time)","parent":{"krate":0,"index":3622},"children":[],"decl_id":null,"docs":" All edges from a node have been reported.\n","sig":null,"attributes":[{"value":"/ All edges from a node have been reported.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35082,"byte_end":35127,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34702,"byte_end":34710,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"DfsEvent","qualname":"::visit::dfsvisit::DfsEvent","value":"pub enum DfsEvent<N> {\n    Discover(N, Time),\n\n    /// An edge of the tree formed by the traversal.\n    TreeEdge(N, N),\n\n    /// An edge to an already visited node.\n    BackEdge(N, N),\n\n    /// A cross or forward edge.\n    ///\n    /// For an edge *(u, v)*, if the discover time of *v* is greater than *u*,\n    /// then it is a forward edge, else a cross edge.\n    CrossForwardEdge(N, N),\n\n    /// All edges from a node have been reported.\n    Finish(N, Time),\n}","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3628},{"krate":0,"index":3632},{"krate":0,"index":3636},{"krate":0,"index":3640}],"decl_id":null,"docs":" A depth first search (DFS) visitor event.\n","sig":null,"attributes":[{"value":"/ A depth first search (DFS) visitor event.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":34617,"byte_end":34662,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35694,"byte_end":35702,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"Continue","qualname":"::visit::dfsvisit::Control::Continue","value":"Control::Continue","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Continue the DFS traversal as normal.\n","sig":null,"attributes":[{"value":"/ Continue the DFS traversal as normal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35648,"byte_end":35689,"line_start":44,"line_end":44,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35996,"byte_end":36001,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Prune","qualname":"::visit::dfsvisit::Control::Prune","value":"Control::Prune","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Prune the current node from the DFS traversal. No more edges from this\n node will be reported to the callback. A `DfsEvent::Finish` for this\n node will still be reported. This can be returned in response to any\n `DfsEvent`, except `Finish`, which will panic.\n","sig":null,"attributes":[{"value":"/ Prune the current node from the DFS traversal. No more edges from this","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35708,"byte_end":35782,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ node will be reported to the callback. A `DfsEvent::Finish` for this","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35787,"byte_end":35859,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ node will still be reported. This can be returned in response to any","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35864,"byte_end":35936,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ `DfsEvent`, except `Finish`, which will panic.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35941,"byte_end":35991,"line_start":49,"line_end":49,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36069,"byte_end":36074,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Break","qualname":"::visit::dfsvisit::Control::Break","value":"Control::Break(B)","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Stop the DFS traversal and return the provided value.\n","sig":null,"attributes":[{"value":"/ Stop the DFS traversal and return the provided value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36007,"byte_end":36064,"line_start":51,"line_end":51,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35631,"byte_end":35638,"line_start":43,"line_end":43,"column_start":10,"column_end":17},"name":"Control","qualname":"::visit::dfsvisit::Control","value":"pub enum Control<B> {\n\n    /// Continue the DFS traversal as normal.\n    Continue,\n\n    /// Prune the current node from the DFS traversal. No more edges from this\n    /// node will be reported to the callback. A `DfsEvent::Finish` for this\n    /// node will still be reported. This can be returned in response to any\n    /// `DfsEvent`, except `Finish`, which will panic.\n    Prune,\n\n    /// Stop the DFS traversal and return the provided value.\n    Break(B),\n}","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3658}],"decl_id":null,"docs":" Control flow for `depth_first_search` callbacks.\n","sig":null,"attributes":[{"value":"/ Control flow for `depth_first_search` callbacks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":35539,"byte_end":35591,"line_start":41,"line_end":41,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36114,"byte_end":36122,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"breaking","qualname":"<Control<B>>::breaking","value":"pub fn breaking() -> Control<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36244,"byte_end":36255,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"break_value","qualname":"<Control<B>>::break_value","value":"pub fn break_value(Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Get the value in `Control::Break(_)`, if present.\n","sig":null,"attributes":[{"value":"/ Get the value in `Control::Break(_)`, if present.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36179,"byte_end":36232,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36520,"byte_end":36531,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"name":"ControlFlow","qualname":"::visit::dfsvisit::ControlFlow","value":"ControlFlow","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[{"value":"/ Control flow for callbacks.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36415,"byte_end":36446,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36447,"byte_end":36450,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The empty return value `()` is equivalent to continue.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36451,"byte_end":36509,"line_start":70,"line_end":70,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36541,"byte_end":36551,"line_start":72,"line_end":72,"column_start":8,"column_end":18},"name":"continuing","qualname":"::visit::dfsvisit::ControlFlow::continuing","value":"pub fn continuing() -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36570,"byte_end":36582,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"should_break","qualname":"::visit::dfsvisit::ControlFlow::should_break","value":"pub fn should_break(&Self) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36606,"byte_end":36618,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"should_prune","qualname":"::visit::dfsvisit::ControlFlow::should_prune","value":"pub fn should_prune(&Self) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39877,"byte_end":39895,"line_start":197,"line_end":197,"column_start":8,"column_end":26},"name":"depth_first_search","qualname":"::visit::dfsvisit::depth_first_search","value":"pub fn depth_first_search<G, I, F, C>(G, I, F) -> C where G: IntoNeighbors +\nVisitable, I: IntoIterator<Item = G::NodeId>, F: FnMut(DfsEvent<G::NodeId>) ->\nC, C: ControlFlow","parent":null,"children":[],"decl_id":null,"docs":" A recursive depth first search.","sig":null,"attributes":[{"value":"/ A recursive depth first search.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37804,"byte_end":37839,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37840,"byte_end":37843,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Starting points are the nodes in the iterator `starts` (specify just one","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37844,"byte_end":37920,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/ start vertex *x* by using `Some(x)`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37921,"byte_end":37962,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37963,"byte_end":37966,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The traversal emits discovery and finish events for each reachable vertex,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37967,"byte_end":38045,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ and edge classification of each reachable edge. `visitor` is called for each","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38046,"byte_end":38126,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ event, see [`DfsEvent`][de] for possible values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38127,"byte_end":38179,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38180,"byte_end":38183,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ If the return value of the visitor is simply `()`, the visit runs until it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38184,"byte_end":38262,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ is finished. If the return value is a `Control<B>`, it can be used to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38263,"byte_end":38336,"line_start":145,"line_end":145,"column_start":1,"column_end":74}},{"value":"/ change the control flow of the search. `Control::Break` will stop","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38337,"byte_end":38406,"line_start":146,"line_end":146,"column_start":1,"column_end":70}},{"value":"/ the visit early, returning the contained value from the function.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38407,"byte_end":38476,"line_start":147,"line_end":147,"column_start":1,"column_end":70}},{"value":"/ `Control::Prune` will stop traversing any additional edges from the current","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38477,"byte_end":38556,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/ node and proceed immediately to the `Finish` event.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38557,"byte_end":38612,"line_start":149,"line_end":149,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38613,"byte_end":38616,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ***Panics** if you attempt to prune a node from its `Finish` event.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38617,"byte_end":38688,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38689,"byte_end":38692,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ [de]: enum.DfsEvent.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38693,"byte_end":38721,"line_start":153,"line_end":153,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38722,"byte_end":38725,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38726,"byte_end":38739,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38740,"byte_end":38743,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Find a path from vertex 0 to 5, and exit the visit as soon as we reach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38744,"byte_end":38818,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/ the goal vertex.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38819,"byte_end":38839,"line_start":158,"line_end":158,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38840,"byte_end":38843,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38844,"byte_end":38851,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38852,"byte_end":38881,"line_start":161,"line_end":161,"column_start":1,"column_end":30}},{"value":"/ use petgraph::graph::node_index as n;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38882,"byte_end":38923,"line_start":162,"line_end":162,"column_start":1,"column_end":42}},{"value":"/ use petgraph::visit::depth_first_search;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38924,"byte_end":38968,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ use petgraph::visit::{DfsEvent, Control};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":38969,"byte_end":39014,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39015,"byte_end":39018,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let gr: Graph<(), ()> = Graph::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39019,"byte_end":39067,"line_start":166,"line_end":166,"column_start":1,"column_end":49}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39068,"byte_end":39099,"line_start":167,"line_end":167,"column_start":1,"column_end":32}},{"value":"/     (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39100,"byte_end":39115,"line_start":168,"line_end":168,"column_start":1,"column_end":16}},{"value":"/     (2, 3), (2, 4),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39116,"byte_end":39139,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"/     (4, 0), (4, 5),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39140,"byte_end":39163,"line_start":170,"line_end":170,"column_start":1,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39164,"byte_end":39171,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39172,"byte_end":39175,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // record each predecessor, mapping node → node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39176,"byte_end":39229,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/ let mut predecessor = vec![NodeIndex::end(); gr.node_count()];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39230,"byte_end":39296,"line_start":174,"line_end":174,"column_start":1,"column_end":67}},{"value":"/ let start = n(0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39297,"byte_end":39318,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/ let goal = n(5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39319,"byte_end":39339,"line_start":176,"line_end":176,"column_start":1,"column_end":21}},{"value":"/ depth_first_search(&gr, Some(start), |event| {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39340,"byte_end":39390,"line_start":177,"line_end":177,"column_start":1,"column_end":51}},{"value":"/     if let DfsEvent::TreeEdge(u, v) = event {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39391,"byte_end":39440,"line_start":178,"line_end":178,"column_start":1,"column_end":50}},{"value":"/         predecessor[v.index()] = u;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39441,"byte_end":39480,"line_start":179,"line_end":179,"column_start":1,"column_end":40}},{"value":"/         if v == goal {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39481,"byte_end":39507,"line_start":180,"line_end":180,"column_start":1,"column_end":27}},{"value":"/             return Control::Break(v);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39508,"byte_end":39549,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/         }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39550,"byte_end":39563,"line_start":182,"line_end":182,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39564,"byte_end":39573,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/     Control::Continue","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39574,"byte_end":39599,"line_start":184,"line_end":184,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39600,"byte_end":39607,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39608,"byte_end":39611,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ let mut next = goal;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39612,"byte_end":39636,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/ let mut path = vec![next];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39637,"byte_end":39667,"line_start":188,"line_end":188,"column_start":1,"column_end":31}},{"value":"/ while next != start {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39668,"byte_end":39693,"line_start":189,"line_end":189,"column_start":1,"column_end":26}},{"value":"/     let pred = predecessor[next.index()];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39694,"byte_end":39739,"line_start":190,"line_end":190,"column_start":1,"column_end":46}},{"value":"/     path.push(pred);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39740,"byte_end":39764,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/     next = pred;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39765,"byte_end":39785,"line_start":192,"line_end":192,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39786,"byte_end":39791,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ path.reverse();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39792,"byte_end":39811,"line_start":194,"line_end":194,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(&path, &[n(0), n(2), n(4), n(5)]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39812,"byte_end":39861,"line_start":195,"line_end":195,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":39862,"byte_end":39869,"line_start":196,"line_end":196,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42973,"byte_end":42976,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Dfs","qualname":"::visit::traversal::Dfs","value":"Dfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":3672},{"krate":0,"index":3673}],"decl_id":null,"docs":" Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in\n preorder (when they are first discovered).","sig":null,"attributes":[{"value":"/ Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":41987,"byte_end":42061,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ preorder (when they are first discovered).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42062,"byte_end":42108,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42109,"byte_end":42112,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The traversal starts at a given node and only traverses nodes reachable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42113,"byte_end":42188,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42189,"byte_end":42201,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42202,"byte_end":42205,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `Dfs` is not recursive.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42206,"byte_end":42233,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42234,"byte_end":42237,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `Dfs` does not itself borrow the graph, and because of this you can run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42238,"byte_end":42313,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ a traversal over a graph while still retaining mutable access to it, if you","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42314,"byte_end":42393,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ use it like the following example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42394,"byte_end":42432,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42433,"byte_end":42436,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42437,"byte_end":42444,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42445,"byte_end":42469,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42470,"byte_end":42499,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42500,"byte_end":42503,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut graph = Graph::<_,()>::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42504,"byte_end":42545,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ let a = graph.add_node(0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42546,"byte_end":42576,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42577,"byte_end":42580,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut dfs = Dfs::new(&graph, a);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42581,"byte_end":42619,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ while let Some(nx) = dfs.next(&graph) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42620,"byte_end":42663,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/     // we can access `graph` mutably here still","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42664,"byte_end":42715,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/     graph[nx] += 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42716,"byte_end":42739,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42740,"byte_end":42745,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42746,"byte_end":42749,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(graph[a], 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42750,"byte_end":42778,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42779,"byte_end":42786,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42787,"byte_end":42790,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ **Note:** The algorithm may not behave correctly if nodes are removed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42791,"byte_end":42864,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ during iteration. It may not necessarily visit added nodes or edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42865,"byte_end":42937,"line_start":35,"line_end":35,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43030,"byte_end":43035,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Dfs::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[{"value":"/ The stack of nodes to visit","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":42990,"byte_end":43021,"line_start":38,"line_end":38,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3673},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43089,"byte_end":43099,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Dfs::discovered","value":"VM","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[{"value":"/ The map of discovered nodes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43049,"byte_end":43080,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43315,"byte_end":43318,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Dfs<N, VM>>::new","value":"pub fn new<G>(G, N) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[{"value":"/ Create a new **Dfs**, using the graph's visitor map, and put **start**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43189,"byte_end":43263,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ in the stack of nodes to visit.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43268,"byte_end":43303,"line_start":50,"line_end":50,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43573,"byte_end":43583,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Dfs<N, VM>>::from_parts","value":"pub fn from_parts(Vec<N>, VM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dfs` from a vector and a visit map\n","sig":null,"attributes":[{"value":"/ Create a `Dfs` from a vector and a visit map","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43513,"byte_end":43561,"line_start":60,"line_end":60,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43707,"byte_end":43712,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"reset","qualname":"<Dfs<N, VM>>::reset","value":"pub fn reset<G>(&mut Self, G) where G: GraphRef + Visitable<NodeId = N, Map =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[{"value":"/ Clear the visit state","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43670,"byte_end":43695,"line_start":65,"line_end":65,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43975,"byte_end":43980,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"empty","qualname":"<Dfs<N, VM>>::empty","value":"pub fn empty<G>(G) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs** using the graph's visitor map, and no stack.\n","sig":null,"attributes":[{"value":"/ Create a new **Dfs** using the graph's visitor map, and no stack.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43894,"byte_end":43963,"line_start":74,"line_end":74,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":44300,"byte_end":44307,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Dfs<N, VM>>::move_to","value":"pub fn move_to(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[{"value":"/ Keep the discovered map, but clear the visit stack and restart","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":44182,"byte_end":44248,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/ the dfs from a particular node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":44253,"byte_end":44288,"line_start":86,"line_end":86,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":44488,"byte_end":44492,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"next","qualname":"<Dfs<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighbors<NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the dfs, or **None** if the traversal is done.\n","sig":null,"attributes":[{"value":"/ Return the next node in the dfs, or **None** if the traversal is done.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":44402,"byte_end":44476,"line_start":92,"line_end":92,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45263,"byte_end":45275,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"DfsPostOrder","qualname":"::visit::traversal::DfsPostOrder","value":"DfsPostOrder { stack, discovered, finished }","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687}],"decl_id":null,"docs":" Visit nodes in a depth-first-search (DFS) emitting nodes in postorder\n (each node after all its descendants have been emitted).","sig":null,"attributes":[{"value":"/ Visit nodes in a depth-first-search (DFS) emitting nodes in postorder","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":44959,"byte_end":45032,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ (each node after all its descendants have been emitted).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45033,"byte_end":45093,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45094,"byte_end":45097,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ `DfsPostOrder` is not recursive.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45098,"byte_end":45134,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45135,"byte_end":45138,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The traversal starts at a given node and only traverses nodes reachable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45139,"byte_end":45214,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45215,"byte_end":45227,"line_start":117,"line_end":117,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":3685},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45329,"byte_end":45334,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::DfsPostOrder::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[{"value":"/ The stack of nodes to visit","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45289,"byte_end":45320,"line_start":120,"line_end":120,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3686},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45388,"byte_end":45398,"line_start":123,"line_end":123,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::DfsPostOrder::discovered","value":"VM","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[{"value":"/ The map of discovered nodes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45348,"byte_end":45379,"line_start":122,"line_end":122,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3687},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45446,"byte_end":45454,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"finished","qualname":"::visit::traversal::DfsPostOrder::finished","value":"VM","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":" The map of finished nodes\n","sig":null,"attributes":[{"value":"/ The map of finished nodes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45408,"byte_end":45437,"line_start":124,"line_end":124,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45683,"byte_end":45686,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsPostOrder<N, VM>>::new","value":"pub fn new<G>(G, N) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and put\n `start` in the stack of nodes to visit.\n","sig":null,"attributes":[{"value":"/ Create a new `DfsPostOrder` using the graph's visitor map, and put","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45553,"byte_end":45623,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/ `start` in the stack of nodes to visit.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45628,"byte_end":45671,"line_start":134,"line_end":134,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45970,"byte_end":45975,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"empty","qualname":"<DfsPostOrder<N, VM>>::empty","value":"pub fn empty<G>(G) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and no stack.\n","sig":null,"attributes":[{"value":"/ Create a new `DfsPostOrder` using the graph's visitor map, and no stack.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45882,"byte_end":45958,"line_start":144,"line_end":144,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46264,"byte_end":46269,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"reset","qualname":"<DfsPostOrder<N, VM>>::reset","value":"pub fn reset<G>(&mut Self, G) where G: GraphRef + Visitable<NodeId = N, Map =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[{"value":"/ Clear the visit state","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46227,"byte_end":46252,"line_start":156,"line_end":156,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46627,"byte_end":46634,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"move_to","qualname":"<DfsPostOrder<N, VM>>::move_to","value":"pub fn move_to(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered and finished map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[{"value":"/ Keep the discovered and finished map, but clear the visit stack and restart","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46496,"byte_end":46575,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/ the dfs from a particular node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46580,"byte_end":46615,"line_start":167,"line_end":167,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46819,"byte_end":46823,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"next","qualname":"<DfsPostOrder<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighbors<NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the traversal, or `None` if the traversal is done.\n","sig":null,"attributes":[{"value":"/ Return the next node in the traversal, or `None` if the traversal is done.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":46729,"byte_end":46807,"line_start":173,"line_end":173,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48464,"byte_end":48467,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"Bfs","qualname":"::visit::traversal::Bfs","value":"Bfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700}],"decl_id":null,"docs":" A breadth first search (BFS) of a graph.","sig":null,"attributes":[{"value":"/ A breadth first search (BFS) of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47562,"byte_end":47606,"line_start":198,"line_end":198,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47607,"byte_end":47610,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The traversal starts at a given node and only traverses nodes reachable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47611,"byte_end":47686,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47687,"byte_end":47699,"line_start":201,"line_end":201,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47700,"byte_end":47703,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ `Bfs` is not recursive.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47704,"byte_end":47731,"line_start":203,"line_end":203,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47732,"byte_end":47735,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ `Bfs` does not itself borrow the graph, and because of this you can run","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47736,"byte_end":47811,"line_start":205,"line_end":205,"column_start":1,"column_end":76}},{"value":"/ a traversal over a graph while still retaining mutable access to it, if you","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47812,"byte_end":47891,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ use it like the following example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47892,"byte_end":47930,"line_start":207,"line_end":207,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47931,"byte_end":47934,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47935,"byte_end":47942,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47943,"byte_end":47967,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/ use petgraph::visit::Bfs;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47968,"byte_end":47997,"line_start":211,"line_end":211,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":47998,"byte_end":48001,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ let mut graph = Graph::<_,()>::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48002,"byte_end":48043,"line_start":213,"line_end":213,"column_start":1,"column_end":42}},{"value":"/ let a = graph.add_node(0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48044,"byte_end":48074,"line_start":214,"line_end":214,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48075,"byte_end":48078,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ let mut bfs = Bfs::new(&graph, a);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48079,"byte_end":48117,"line_start":216,"line_end":216,"column_start":1,"column_end":39}},{"value":"/ while let Some(nx) = bfs.next(&graph) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48118,"byte_end":48161,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/     // we can access `graph` mutably here still","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48162,"byte_end":48213,"line_start":218,"line_end":218,"column_start":1,"column_end":52}},{"value":"/     graph[nx] += 1;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48214,"byte_end":48237,"line_start":219,"line_end":219,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48238,"byte_end":48243,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48244,"byte_end":48247,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(graph[a], 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48248,"byte_end":48276,"line_start":222,"line_end":222,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48277,"byte_end":48284,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48285,"byte_end":48288,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ **Note:** The algorithm may not behave correctly if nodes are removed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48289,"byte_end":48362,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"/ during iteration. It may not necessarily visit added nodes or edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48363,"byte_end":48435,"line_start":226,"line_end":226,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3699},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48521,"byte_end":48526,"line_start":230,"line_end":230,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Bfs::stack","value":"std::collections::VecDeque<N>","parent":{"krate":0,"index":3696},"children":[],"decl_id":null,"docs":" The queue of nodes to visit\n","sig":null,"attributes":[{"value":"/ The queue of nodes to visit","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48481,"byte_end":48512,"line_start":229,"line_end":229,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48585,"byte_end":48595,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Bfs::discovered","value":"VM","parent":{"krate":0,"index":3696},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[{"value":"/ The map of discovered nodes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48545,"byte_end":48576,"line_start":231,"line_end":231,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48811,"byte_end":48814,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<Bfs<N, VM>>::new","value":"pub fn new<G>(G, N) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Bfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[{"value":"/ Create a new **Bfs**, using the graph's visitor map, and put **start**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48685,"byte_end":48759,"line_start":240,"line_end":240,"column_start":5,"column_end":79}},{"value":"/ in the stack of nodes to visit.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48764,"byte_end":48799,"line_start":241,"line_end":241,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49203,"byte_end":49207,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"next","qualname":"<Bfs<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighbors<NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the bfs, or **None** if the traversal is done.\n","sig":null,"attributes":[{"value":"/ Return the next node in the bfs, or **None** if the traversal is done.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49117,"byte_end":49191,"line_start":253,"line_end":253,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49888,"byte_end":49892,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"Topo","qualname":"::visit::traversal::Topo","value":"Topo {  }","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3709}],"decl_id":null,"docs":" A topological order traversal for a graph.","sig":null,"attributes":[{"value":"/ A topological order traversal for a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49593,"byte_end":49639,"line_start":271,"line_end":271,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49640,"byte_end":49643,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ **Note** that `Topo` only visits nodes that are not part of cycles,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49644,"byte_end":49715,"line_start":273,"line_end":273,"column_start":1,"column_end":72}},{"value":"/ i.e. nodes in a true DAG. Use other visitors like `DfsPostOrder` or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49716,"byte_end":49787,"line_start":274,"line_end":274,"column_start":1,"column_end":72}},{"value":"/ algorithms like kosaraju_scc to handle graphs with possible cycles.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49788,"byte_end":49859,"line_start":275,"line_end":275,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":50148,"byte_end":50151,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"new","qualname":"<Topo<N, VM>>::new","value":"pub fn new<G>(G) -> Self where G: IntoNodeIdentifiers +\nIntoNeighborsDirected + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Topo`, using the graph's visitor map, and put all\n initial nodes in the to visit list.\n","sig":null,"attributes":[{"value":"/ Create a new `Topo`, using the graph's visitor map, and put all","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":50025,"byte_end":50092,"line_start":287,"line_end":287,"column_start":5,"column_end":72}},{"value":"/ initial nodes in the to visit list.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":50097,"byte_end":50136,"line_start":288,"line_end":288,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51186,"byte_end":51191,"line_start":323,"line_end":323,"column_start":12,"column_end":17},"name":"reset","qualname":"<Topo<N, VM>>::reset","value":"pub fn reset<G>(&mut Self, G) where G: IntoNodeIdentifiers +\nIntoNeighborsDirected + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Clear visited state, and put all initial nodes in the to visit list.\n","sig":null,"attributes":[{"value":"/ Clear visited state, and put all initial nodes in the to visit list.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51102,"byte_end":51174,"line_start":322,"line_end":322,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51755,"byte_end":51759,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"next","qualname":"<Topo<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighborsDirected +\nVisitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the current topological order traversal, or\n `None` if the traversal is at the end.","sig":null,"attributes":[{"value":"/ Return the next node in the current topological order traversal, or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51449,"byte_end":51520,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/ `None` if the traversal is at the end.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51525,"byte_end":51567,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51572,"byte_end":51575,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ *Note:* The graph may not have a complete topological order, and the only","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51580,"byte_end":51657,"line_start":335,"line_end":335,"column_start":5,"column_end":82}},{"value":"/ way to know is to run the whole traversal and make sure it visits every node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":51662,"byte_end":51743,"line_start":336,"line_end":336,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":139},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52864,"byte_end":52870,"line_start":368,"line_end":368,"column_start":11,"column_end":17},"name":"Walker","qualname":"::visit::traversal::Walker","value":"Walker<Context>","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" A walker is a traversal state, but where part of the traversal\n information is supplied manually to each next call.","sig":null,"attributes":[{"value":"/ A walker is a traversal state, but where part of the traversal","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52619,"byte_end":52685,"line_start":363,"line_end":363,"column_start":1,"column_end":67}},{"value":"/ information is supplied manually to each next call.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52686,"byte_end":52741,"line_start":364,"line_end":364,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52742,"byte_end":52745,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ This for example allows graph traversals that don't hold a borrow of the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52746,"byte_end":52822,"line_start":366,"line_end":366,"column_start":1,"column_end":77}},{"value":"/ graph they are traversing.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52823,"byte_end":52853,"line_start":367,"line_end":367,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":141},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52891,"byte_end":52895,"line_start":369,"line_end":369,"column_start":10,"column_end":14},"name":"Item","qualname":"::visit::traversal::Walker::Item","value":"type Item;","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52937,"byte_end":52946,"line_start":371,"line_end":371,"column_start":8,"column_end":17},"name":"walk_next","qualname":"::visit::traversal::Walker::walk_next","value":"pub fn walk_next(&mut Self, Context) -> Option<Self::Item>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Advance to the next item\n","sig":null,"attributes":[{"value":"/ Advance to the next item","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":52901,"byte_end":52929,"line_start":370,"line_end":370,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53073,"byte_end":53077,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"iter","qualname":"::visit::traversal::Walker::iter","value":"pub fn iter(Self, Context) -> WalkerIter<Self, Context> where Self: Sized,\nContext: Clone","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Create an iterator out of the walker and given `context`.\n","sig":null,"attributes":[{"value":"/ Create an iterator out of the walker and given `context`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53004,"byte_end":53065,"line_start":373,"line_end":373,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53369,"byte_end":53379,"line_start":388,"line_end":388,"column_start":12,"column_end":22},"name":"WalkerIter","qualname":"::visit::traversal::WalkerIter","value":"WalkerIter {  }","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718}],"decl_id":null,"docs":" A walker and its context wrapped into an iterator.\n","sig":null,"attributes":[{"value":"/ A walker and its context wrapped into an iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53279,"byte_end":53333,"line_start":386,"line_end":386,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53501,"byte_end":53508,"line_start":398,"line_end":398,"column_start":12,"column_end":19},"name":"context","qualname":"<WalkerIter<W, C>>::context","value":"pub fn context(&Self) -> C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53570,"byte_end":53579,"line_start":402,"line_end":402,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<WalkerIter<W, C>>::inner_ref","value":"pub fn inner_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53634,"byte_end":53643,"line_start":406,"line_end":406,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WalkerIter<W, C>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13490,"byte_end":13499,"line_start":76,"line_end":76,"column_start":11,"column_end":20},"name":"GraphBase","qualname":"::visit::GraphBase","value":"GraphBase","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730}],"decl_id":null,"docs":" Base graph trait: defines the associated node identifier and\n edge identifier types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13679,"byte_end":13685,"line_start":82,"line_end":82,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::GraphBase::EdgeId","value":"type EdgeId: Copy + PartialEq;","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":" edge identifier\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13738,"byte_end":13744,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::GraphBase::NodeId","value":"type NodeId: Copy + PartialEq;","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":" node identifier\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":199},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13905,"byte_end":13913,"line_start":92,"line_end":92,"column_start":11,"column_end":19},"name":"GraphRef","qualname":"::visit::GraphRef","value":"GraphRef: Copy + GraphBase","parent":null,"children":[],"decl_id":null,"docs":" A copyable reference to a graph.\n","sig":null,"attributes":[{"value":"/ A copyable reference to a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13858,"byte_end":13894,"line_start":91,"line_end":91,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":14974,"byte_end":14987,"line_start":135,"line_end":135,"column_start":11,"column_end":24},"name":"IntoNeighbors","qualname":"::visit::IntoNeighbors","value":"IntoNeighbors: GraphRef","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744}],"decl_id":null,"docs":" Access to the neighbors of each node","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3743},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":15028,"byte_end":15037,"line_start":137,"line_end":137,"column_start":10,"column_end":19},"name":"Neighbors","qualname":"::visit::IntoNeighbors::Neighbors","value":"type Neighbors: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":15150,"byte_end":15159,"line_start":140,"line_end":140,"column_start":8,"column_end":17},"name":"neighbors","qualname":"::visit::IntoNeighbors::neighbors","value":"pub fn neighbors(Self, Self::NodeId) -> Self::Neighbors","parent":{"krate":0,"index":3742},"children":[],"decl_id":null,"docs":" Return an iterator of the neighbors of node `a`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":15641,"byte_end":15662,"line_start":155,"line_end":155,"column_start":11,"column_end":32},"name":"IntoNeighborsDirected","qualname":"::visit::IntoNeighborsDirected","value":"IntoNeighborsDirected: IntoNeighbors","parent":null,"children":[{"krate":0,"index":3752},{"krate":0,"index":3753}],"decl_id":null,"docs":" Access to the neighbors of each node, through incoming or outgoing edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3752},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":15708,"byte_end":15725,"line_start":157,"line_end":157,"column_start":10,"column_end":27},"name":"NeighborsDirected","qualname":"::visit::IntoNeighborsDirected::NeighborsDirected","value":"type NeighborsDirected: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":15781,"byte_end":15799,"line_start":159,"line_end":159,"column_start":8,"column_end":26},"name":"neighbors_directed","qualname":"::visit::IntoNeighborsDirected::neighbors_directed","value":"pub fn neighbors_directed(Self, Self::NodeId, Direction)\n-> Self::NeighborsDirected","parent":{"krate":0,"index":3751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":17725,"byte_end":17734,"line_start":227,"line_end":227,"column_start":11,"column_end":20},"name":"IntoEdges","qualname":"::visit::IntoEdges","value":"IntoEdges: IntoEdgeReferences + IntoNeighbors","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757}],"decl_id":null,"docs":" Access to the edges of each node.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":17801,"byte_end":17806,"line_start":229,"line_end":229,"column_start":10,"column_end":15},"name":"Edges","qualname":"::visit::IntoEdges::Edges","value":"type Edges: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":17863,"byte_end":17868,"line_start":231,"line_end":231,"column_start":8,"column_end":13},"name":"edges","qualname":"::visit::IntoEdges::edges","value":"pub fn edges(Self, Self::NodeId) -> Self::Edges","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":18662,"byte_end":18679,"line_start":253,"line_end":253,"column_start":11,"column_end":28},"name":"IntoEdgesDirected","qualname":"::visit::IntoEdgesDirected","value":"IntoEdgesDirected: IntoEdges + IntoNeighborsDirected","parent":null,"children":[{"krate":0,"index":3765},{"krate":0,"index":3766}],"decl_id":null,"docs":" Access to all edges of each node, in the specified direction.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":18745,"byte_end":18758,"line_start":255,"line_end":255,"column_start":10,"column_end":23},"name":"EdgesDirected","qualname":"::visit::IntoEdgesDirected::EdgesDirected","value":"type EdgesDirected: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":18815,"byte_end":18829,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"edges_directed","qualname":"::visit::IntoEdgesDirected::edges_directed","value":"pub fn edges_directed(Self, Self::NodeId, Direction) -> Self::EdgesDirected","parent":{"krate":0,"index":3764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":19020,"byte_end":19039,"line_start":265,"line_end":265,"column_start":11,"column_end":30},"name":"IntoNodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers","value":"IntoNodeIdentifiers: GraphRef","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3775}],"decl_id":null,"docs":" Access to the sequence of the graph’s `NodeId`s.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":19080,"byte_end":19095,"line_start":267,"line_end":267,"column_start":10,"column_end":25},"name":"NodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers::NodeIdentifiers","value":"type NodeIdentifiers: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":19151,"byte_end":19167,"line_start":269,"line_end":269,"column_start":8,"column_end":24},"name":"node_identifiers","qualname":"::visit::IntoNodeIdentifiers::node_identifiers","value":"pub fn node_identifiers(Self) -> Self::NodeIdentifiers","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3787},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20343,"byte_end":20347,"line_start":323,"line_end":323,"column_start":11,"column_end":15},"name":"Data","qualname":"::visit::Data","value":"Data: GraphBase","parent":null,"children":[{"krate":0,"index":3788},{"krate":0,"index":3789}],"decl_id":null,"docs":" Define associated data for nodes and edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20389,"byte_end":20399,"line_start":325,"line_end":325,"column_start":10,"column_end":20},"name":"NodeWeight","qualname":"::visit::Data::NodeWeight","value":"type NodeWeight;","parent":{"krate":0,"index":3787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3789},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20410,"byte_end":20420,"line_start":326,"line_end":326,"column_start":10,"column_end":20},"name":"EdgeWeight","qualname":"::visit::Data::EdgeWeight","value":"type EdgeWeight;","parent":{"krate":0,"index":3787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20620,"byte_end":20627,"line_start":336,"line_end":336,"column_start":11,"column_end":18},"name":"EdgeRef","qualname":"::visit::EdgeRef","value":"EdgeRef: Copy","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" An edge reference.","sig":null,"attributes":[{"value":"/ An edge reference.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20506,"byte_end":20528,"line_start":333,"line_end":333,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20529,"byte_end":20532,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ Edge references are used by traits `IntoEdges` and `IntoEdgeReferences`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20533,"byte_end":20609,"line_start":335,"line_end":335,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":283},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20645,"byte_end":20651,"line_start":337,"line_end":337,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::EdgeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":284},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20662,"byte_end":20668,"line_start":338,"line_end":338,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::EdgeRef::EdgeId","value":"type EdgeId;","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":285},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20679,"byte_end":20685,"line_start":339,"line_end":339,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::EdgeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20731,"byte_end":20737,"line_start":341,"line_end":341,"column_start":8,"column_end":14},"name":"source","qualname":"::visit::EdgeRef::source","value":"pub fn source(&Self) -> Self::NodeId","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" The source node of the edge.\n","sig":null,"attributes":[{"value":"/ The source node of the edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20691,"byte_end":20723,"line_start":340,"line_end":340,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20806,"byte_end":20812,"line_start":343,"line_end":343,"column_start":8,"column_end":14},"name":"target","qualname":"::visit::EdgeRef::target","value":"pub fn target(&Self) -> Self::NodeId","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" The target node of the edge.\n","sig":null,"attributes":[{"value":"/ The target node of the edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20766,"byte_end":20798,"line_start":342,"line_end":342,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20891,"byte_end":20897,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::EdgeRef::weight","value":"pub fn weight(&Self) -> &Self::Weight","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" A reference to the weight of the edge.\n","sig":null,"attributes":[{"value":"/ A reference to the weight of the edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20841,"byte_end":20883,"line_start":344,"line_end":344,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20963,"byte_end":20965,"line_start":347,"line_end":347,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::EdgeRef::id","value":"pub fn id(&Self) -> Self::EdgeId","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" The edge’s identifier.\n","sig":null,"attributes":[{"value":"/ The edge’s identifier.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20927,"byte_end":20955,"line_start":346,"line_end":346,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":301},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21367,"byte_end":21374,"line_start":373,"line_end":373,"column_start":11,"column_end":18},"name":"NodeRef","qualname":"::visit::NodeRef","value":"NodeRef: Copy","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A node reference.\n","sig":null,"attributes":[{"value":"/ A node reference.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21335,"byte_end":21356,"line_start":372,"line_end":372,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21392,"byte_end":21398,"line_start":374,"line_end":374,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::NodeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":303},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21409,"byte_end":21415,"line_start":375,"line_end":375,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::NodeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21424,"byte_end":21426,"line_start":376,"line_end":376,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::NodeRef::id","value":"pub fn id(&Self) -> Self::NodeId","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21458,"byte_end":21464,"line_start":377,"line_end":377,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::NodeRef::weight","value":"pub fn weight(&Self) -> &Self::Weight","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3801},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21571,"byte_end":21589,"line_start":382,"line_end":382,"column_start":11,"column_end":29},"name":"IntoNodeReferences","qualname":"::visit::IntoNodeReferences","value":"IntoNodeReferences: Data + IntoNodeIdentifiers","parent":null,"children":[{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804}],"decl_id":null,"docs":" Access to the sequence of the graph’s nodes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21648,"byte_end":21655,"line_start":384,"line_end":384,"column_start":10,"column_end":17},"name":"NodeRef","qualname":"::visit::IntoNodeReferences::NodeRef","value":"type NodeRef: NodeRef<NodeId=Self::NodeId, Weight=Self::NodeWeight>;","parent":{"krate":0,"index":3801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21721,"byte_end":21735,"line_start":385,"line_end":385,"column_start":10,"column_end":24},"name":"NodeReferences","qualname":"::visit::IntoNodeReferences::NodeReferences","value":"type NodeReferences: Iterator<Item=Self::NodeRef>;","parent":{"krate":0,"index":3801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21792,"byte_end":21807,"line_start":387,"line_end":387,"column_start":8,"column_end":23},"name":"node_references","qualname":"::visit::IntoNodeReferences::node_references","value":"pub fn node_references(Self) -> Self::NodeReferences","parent":{"krate":0,"index":3801},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3812},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22434,"byte_end":22452,"line_start":424,"line_end":424,"column_start":11,"column_end":29},"name":"IntoEdgeReferences","qualname":"::visit::IntoEdgeReferences","value":"IntoEdgeReferences: Data + GraphRef","parent":null,"children":[{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815}],"decl_id":null,"docs":" Access to the sequence of the graph’s edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22500,"byte_end":22507,"line_start":426,"line_end":426,"column_start":10,"column_end":17},"name":"EdgeRef","qualname":"::visit::IntoEdgeReferences::EdgeRef","value":"type EdgeRef: EdgeRef<NodeId=Self::NodeId, EdgeId=Self::EdgeId,\n                          Weight=Self::EdgeWeight>;","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22620,"byte_end":22634,"line_start":428,"line_end":428,"column_start":10,"column_end":24},"name":"EdgeReferences","qualname":"::visit::IntoEdgeReferences::EdgeReferences","value":"type EdgeReferences: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22691,"byte_end":22706,"line_start":430,"line_end":430,"column_start":8,"column_end":23},"name":"edge_references","qualname":"::visit::IntoEdgeReferences::edge_references","value":"pub fn edge_references(Self) -> Self::EdgeReferences","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23046,"byte_end":23055,"line_start":448,"line_end":448,"column_start":11,"column_end":20},"name":"GraphProp","qualname":"::visit::GraphProp","value":"GraphProp: GraphBase","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825}],"decl_id":null,"docs":" Edge kind property (directed or undirected edges)\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23134,"byte_end":23142,"line_start":451,"line_end":451,"column_start":10,"column_end":18},"name":"EdgeType","qualname":"::visit::GraphProp::EdgeType","value":"type EdgeType: EdgeType;","parent":{"krate":0,"index":3823},"children":[],"decl_id":null,"docs":" The kind edges in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23186,"byte_end":23197,"line_start":454,"line_end":454,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::visit::GraphProp::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":{"krate":0,"index":3823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3831},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24146,"byte_end":24159,"line_start":502,"line_end":502,"column_start":15,"column_end":28},"name":"NodeIndexable","qualname":"::visit::NodeIndexable","value":"NodeIndexable: GraphBase","parent":null,"children":[{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834}],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24323,"byte_end":24333,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"node_bound","qualname":"::visit::NodeIndexable::node_bound","value":"pub fn node_bound(&Self) -> usize","parent":{"krate":0,"index":3831},"children":[],"decl_id":null,"docs":" Return an upper bound of the node indices in the graph\n (suitable for the size of a bitmap).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24413,"byte_end":24421,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"to_index","qualname":"::visit::NodeIndexable::to_index","value":"pub fn to_index(&Self, Self::NodeId) -> usize","parent":{"krate":0,"index":3831},"children":[],"decl_id":null,"docs":" Convert `a` to an integer index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24513,"byte_end":24523,"line_start":510,"line_end":510,"column_start":12,"column_end":22},"name":"from_index","qualname":"::visit::NodeIndexable::from_index","value":"pub fn from_index(&Self, usize) -> Self::NodeId","parent":{"krate":0,"index":3831},"children":[],"decl_id":null,"docs":" Convert `i` to a node index\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24673,"byte_end":24682,"line_start":518,"line_end":518,"column_start":11,"column_end":20},"name":"NodeCount","qualname":"::visit::NodeCount","value":"NodeCount: GraphBase","parent":null,"children":[{"krate":0,"index":3843}],"decl_id":null,"docs":" A graph with a known node count.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24722,"byte_end":24732,"line_start":520,"line_end":520,"column_start":8,"column_end":18},"name":"node_count","qualname":"::visit::NodeCount::node_count","value":"pub fn node_count(&Self) -> usize","parent":{"krate":0,"index":3842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24989,"byte_end":25009,"line_start":531,"line_end":531,"column_start":11,"column_end":31},"name":"NodeCompactIndexable","qualname":"::visit::NodeCompactIndexable","value":"NodeCompactIndexable: NodeIndexable + NodeCount","parent":null,"children":[],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices, in a range without holes.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":366},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25608,"byte_end":25616,"line_start":560,"line_end":560,"column_start":11,"column_end":19},"name":"VisitMap","qualname":"::visit::VisitMap","value":"VisitMap<N>","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"decl_id":null,"docs":" A mapping for storing the visited status for NodeId `N`.\n","sig":null,"attributes":[{"value":"/ A mapping for storing the visited status for NodeId `N`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25537,"byte_end":25597,"line_start":559,"line_end":559,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25735,"byte_end":25740,"line_start":564,"line_end":564,"column_start":8,"column_end":13},"name":"visit","qualname":"::visit::VisitMap::visit","value":"pub fn visit(&mut Self, N) -> bool","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Mark `a` as visited.","sig":null,"attributes":[{"value":"/ Mark `a` as visited.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25626,"byte_end":25650,"line_start":561,"line_end":561,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25655,"byte_end":25658,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Return **true** if this is the first visit, false otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25663,"byte_end":25727,"line_start":563,"line_end":563,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25827,"byte_end":25837,"line_start":567,"line_end":567,"column_start":8,"column_end":18},"name":"is_visited","qualname":"::visit::VisitMap::is_visited","value":"pub fn is_visited(&Self, &N) -> bool","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Return whether `a` has been visited before.\n","sig":null,"attributes":[{"value":"/ Return whether `a` has been visited before.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25772,"byte_end":25819,"line_start":566,"line_end":566,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26989,"byte_end":26998,"line_start":621,"line_end":621,"column_start":11,"column_end":20},"name":"Visitable","qualname":"::visit::Visitable","value":"Visitable: GraphBase","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857}],"decl_id":null,"docs":" A graph that can create a map that tracks the visited status of its nodes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27072,"byte_end":27075,"line_start":624,"line_end":624,"column_start":10,"column_end":13},"name":"Map","qualname":"::visit::Visitable::Map","value":"type Map: VisitMap<Self::NodeId>;","parent":{"krate":0,"index":3854},"children":[],"decl_id":null,"docs":" The associated map type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27159,"byte_end":27168,"line_start":627,"line_end":627,"column_start":8,"column_end":17},"name":"visit_map","qualname":"::visit::Visitable::visit_map","value":"pub fn visit_map(&Self) -> Self::Map","parent":{"krate":0,"index":3854},"children":[],"decl_id":null,"docs":" Create a new visitor map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27277,"byte_end":27286,"line_start":629,"line_end":629,"column_start":8,"column_end":17},"name":"reset_map","qualname":"::visit::Visitable::reset_map","value":"pub fn reset_map(&Self, &mut Self::Map) -> ()","parent":{"krate":0,"index":3854},"children":[],"decl_id":null,"docs":" Reset the visitor map (and resize to new size of graph if needed)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29352,"byte_end":29370,"line_start":722,"line_end":722,"column_start":11,"column_end":29},"name":"GetAdjacencyMatrix","qualname":"::visit::GetAdjacencyMatrix","value":"GetAdjacencyMatrix: GraphBase","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868}],"decl_id":null,"docs":" Create or access the adjacency matrix of a graph.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29457,"byte_end":29466,"line_start":725,"line_end":725,"column_start":10,"column_end":19},"name":"AdjMatrix","qualname":"::visit::GetAdjacencyMatrix::AdjMatrix","value":"type AdjMatrix;","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" The associated adjacency matrix type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29529,"byte_end":29545,"line_start":728,"line_end":728,"column_start":8,"column_end":24},"name":"adjacency_matrix","qualname":"::visit::GetAdjacencyMatrix::adjacency_matrix","value":"pub fn adjacency_matrix(&Self) -> Self::AdjMatrix","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Create the adjacency matrix\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29699,"byte_end":29710,"line_start":732,"line_end":732,"column_start":8,"column_end":19},"name":"is_adjacent","qualname":"::visit::GetAdjacencyMatrix::is_adjacent","value":"pub fn is_adjacent(&Self, &Self::AdjMatrix, Self::NodeId, Self::NodeId)\n-> bool","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":" Return true if there is an edge from `a` to `b`, false otherwise.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55469,"byte_end":55479,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"FilterNode","qualname":"::visit::filter::FilterNode","value":"FilterNode<N>","parent":null,"children":[{"krate":0,"index":470}],"decl_id":null,"docs":" A graph filter for nodes.\n","sig":null,"attributes":[{"value":"/ A graph filter for nodes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55429,"byte_end":55458,"line_start":15,"line_end":15,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55550,"byte_end":55562,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"include_node","qualname":"::visit::filter::FilterNode::include_node","value":"pub fn include_node(&Self, N) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Return true to have the node be part of the graph\n","sig":null,"attributes":[{"value":"/ Return true to have the node be part of the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55489,"byte_end":55542,"line_start":17,"line_end":17,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56251,"byte_end":56263,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"NodeFiltered","qualname":"::visit::filter::NodeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" A node-filtering graph adaptor.\n","sig":null,"attributes":[{"value":"/ A node-filtering graph adaptor.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56174,"byte_end":56209,"line_start":50,"line_end":50,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56270,"byte_end":56275,"line_start":52,"line_end":52,"column_start":31,"column_end":36},"name":"0","qualname":"::visit::filter::NodeFiltered::0","value":"G","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56277,"byte_end":56282,"line_start":52,"line_end":52,"column_start":38,"column_end":43},"name":"1","qualname":"::visit::filter::NodeFiltered::1","value":"F","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56451,"byte_end":56458,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<NodeFiltered<G, F>>::from_fn","value":"pub fn from_fn(G, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `NodeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[{"value":"/ Create an `NodeFiltered` adaptor from the closure `filter`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56376,"byte_end":56439,"line_start":59,"line_end":59,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":57117,"byte_end":57138,"line_start":89,"line_end":89,"column_start":12,"column_end":33},"name":"NodeFilteredNeighbors","qualname":"::visit::filter::NodeFilteredNeighbors","value":"NodeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[{"value":"/ A filtered neighbors iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":57071,"byte_end":57105,"line_start":88,"line_end":88,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":58976,"byte_end":58993,"line_start":159,"line_end":159,"column_start":12,"column_end":29},"name":"NodeFilteredNodes","qualname":"::visit::filter::NodeFilteredNodes","value":"NodeFilteredNodes {  }","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A filtered node references iterator.\n","sig":null,"attributes":[{"value":"/ A filtered node references iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":58924,"byte_end":58964,"line_start":158,"line_end":158,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":59972,"byte_end":59998,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"NodeFilteredEdgeReferences","qualname":"::visit::filter::NodeFilteredEdgeReferences","value":"NodeFilteredEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[{"value":"/ A filtered edges iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":59930,"byte_end":59960,"line_start":198,"line_end":198,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":573},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":60911,"byte_end":60928,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"NodeFilteredEdges","qualname":"::visit::filter::NodeFilteredEdges","value":"NodeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[{"value":"/ A filtered edges iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":60869,"byte_end":60899,"line_start":235,"line_end":235,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62228,"byte_end":62238,"line_start":290,"line_end":290,"column_start":11,"column_end":21},"name":"FilterEdge","qualname":"::visit::filter::FilterEdge","value":"FilterEdge<Edge>","parent":null,"children":[{"krate":0,"index":598}],"decl_id":null,"docs":" A graph filter for edges\n","sig":null,"attributes":[{"value":"/ A graph filter for edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62189,"byte_end":62217,"line_start":289,"line_end":289,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62312,"byte_end":62324,"line_start":292,"line_end":292,"column_start":8,"column_end":20},"name":"include_edge","qualname":"::visit::filter::FilterEdge::include_edge","value":"pub fn include_edge(&Self, Edge) -> bool","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Return true to have the edge be part of the graph\n","sig":null,"attributes":[{"value":"/ Return true to have the edge be part of the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62251,"byte_end":62304,"line_start":291,"line_end":291,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62847,"byte_end":62859,"line_start":313,"line_end":313,"column_start":12,"column_end":24},"name":"EdgeFiltered","qualname":"::visit::filter::EdgeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-filtering graph adaptor.","sig":null,"attributes":[{"value":"/ An edge-filtering graph adaptor.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62488,"byte_end":62524,"line_start":304,"line_end":304,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62525,"byte_end":62528,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ The adaptor may filter out edges. The filter implements the trait","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62529,"byte_end":62598,"line_start":306,"line_end":306,"column_start":1,"column_end":70}},{"value":"/ `FilterEdge`. Closures of type `Fn(G::EdgeRef) -> bool` already","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62599,"byte_end":62666,"line_start":307,"line_end":307,"column_start":1,"column_end":68}},{"value":"/ implement this trait.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62667,"byte_end":62692,"line_start":308,"line_end":308,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62693,"byte_end":62696,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ The filter may use edge source, target, id, and weight to select whether to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62697,"byte_end":62776,"line_start":310,"line_end":310,"column_start":1,"column_end":80}},{"value":"/ include the edge or not.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62777,"byte_end":62805,"line_start":311,"line_end":311,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62866,"byte_end":62871,"line_start":313,"line_end":313,"column_start":31,"column_end":36},"name":"0","qualname":"::visit::filter::EdgeFiltered::0","value":"G","parent":{"krate":0,"index":3913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3918},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62873,"byte_end":62878,"line_start":313,"line_end":313,"column_start":38,"column_end":43},"name":"1","qualname":"::visit::filter::EdgeFiltered::1","value":"F","parent":{"krate":0,"index":3913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":63057,"byte_end":63064,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<EdgeFiltered<G, F>>::from_fn","value":"pub fn from_fn(G, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EdgeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[{"value":"/ Create an `EdgeFiltered` adaptor from the closure `filter`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62982,"byte_end":63045,"line_start":320,"line_end":320,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":64096,"byte_end":64117,"line_start":364,"line_end":364,"column_start":12,"column_end":33},"name":"EdgeFilteredNeighbors","qualname":"::visit::filter::EdgeFilteredNeighbors","value":"EdgeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[{"value":"/ A filtered neighbors iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":64050,"byte_end":64084,"line_start":363,"line_end":363,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":65496,"byte_end":65513,"line_start":424,"line_end":424,"column_start":12,"column_end":29},"name":"EdgeFilteredEdges","qualname":"::visit::filter::EdgeFilteredEdges","value":"EdgeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[{"value":"/ A filtered edges iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":65454,"byte_end":65484,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":65972,"byte_end":66001,"line_start":444,"line_end":444,"column_start":12,"column_end":41},"name":"EdgeFilteredNeighborsDirected","qualname":"::visit::filter::EdgeFilteredNeighborsDirected","value":"EdgeFilteredNeighborsDirected {  }","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" A filtered neighbors-directed iterator.\n","sig":null,"attributes":[{"value":"/ A filtered neighbors-directed iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":65917,"byte_end":65960,"line_start":443,"line_end":443,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67865,"byte_end":67873,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Reversed","qualname":"::visit::reversed::Reversed","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-reversing graph adaptor.","sig":null,"attributes":[{"value":"/ An edge-reversing graph adaptor.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67724,"byte_end":67760,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67761,"byte_end":67764,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All edges have the opposite direction with `Reversed`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67765,"byte_end":67823,"line_start":11,"line_end":11,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67877,"byte_end":67882,"line_start":13,"line_end":13,"column_start":24,"column_end":29},"name":"0","qualname":"::visit::reversed::Reversed::0","value":"G","parent":{"krate":0,"index":3971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69465,"byte_end":69478,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"ReversedEdges","qualname":"::visit::reversed::ReversedEdges","value":"ReversedEdges {  }","parent":null,"children":[{"krate":0,"index":730}],"decl_id":null,"docs":" A reversed edges iterator.\n","sig":null,"attributes":[{"value":"/ A reversed edges iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69423,"byte_end":69453,"line_start":78,"line_end":78,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3987},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69812,"byte_end":69833,"line_start":96,"line_end":96,"column_start":12,"column_end":33},"name":"ReversedEdgeReference","qualname":"::visit::reversed::ReversedEdgeReference","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reversed edge reference\n","sig":null,"attributes":[{"value":"/ A reversed edge reference","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69741,"byte_end":69770,"line_start":94,"line_end":94,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":749},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":70696,"byte_end":70718,"line_start":134,"line_end":134,"column_start":12,"column_end":34},"name":"ReversedEdgeReferences","qualname":"::visit::reversed::ReversedEdgeReferences","value":"ReversedEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":751}],"decl_id":null,"docs":" A reversed edge references iterator.\n","sig":null,"attributes":[{"value":"/ A reversed edge references iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":70644,"byte_end":70684,"line_start":133,"line_end":133,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":757},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":4847},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4030},{"krate":0,"index":4035},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4048},{"krate":0,"index":771},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":784},{"krate":0,"index":791},{"krate":0,"index":798},{"krate":0,"index":805},{"krate":0,"index":812},{"krate":0,"index":820},{"krate":0,"index":828},{"krate":0,"index":835},{"krate":0,"index":841},{"krate":0,"index":847},{"krate":0,"index":4052},{"krate":0,"index":4080},{"krate":0,"index":4076},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":866},{"krate":0,"index":873},{"krate":0,"index":879},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":895}],"decl_id":null,"docs":" Graph traits for associated data and graph construction.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5546,"byte_end":5558,"line_start":133,"line_end":133,"column_start":1,"column_end":13}},{"value":"/ Graph traits for associated data and graph construction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":71438,"byte_end":71498,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":71859,"byte_end":71866,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"DataMap","qualname":"::data::DataMap","value":"DataMap: Data","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024}],"decl_id":null,"docs":" Access node and edge weights (associated data).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":71901,"byte_end":71912,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"node_weight","qualname":"::data::DataMap::node_weight","value":"pub fn node_weight(&Self, Self::NodeId) -> Option<&Self::NodeWeight>","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":71981,"byte_end":71992,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"edge_weight","qualname":"::data::DataMap::edge_weight","value":"pub fn edge_weight(&Self, Self::EdgeId) -> Option<&Self::EdgeWeight>","parent":{"krate":0,"index":4022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72345,"byte_end":72355,"line_start":33,"line_end":33,"column_start":11,"column_end":21},"name":"DataMapMut","qualname":"::data::DataMapMut","value":"DataMapMut: DataMap","parent":null,"children":[{"krate":0,"index":4041},{"krate":0,"index":4042}],"decl_id":null,"docs":" Access node and edge weights mutably.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4041},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72393,"byte_end":72408,"line_start":35,"line_end":35,"column_start":8,"column_end":23},"name":"node_weight_mut","qualname":"::data::DataMapMut::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, Self::NodeId)\n-> Option<&mut Self::NodeWeight>","parent":{"krate":0,"index":4040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72485,"byte_end":72500,"line_start":36,"line_end":36,"column_start":8,"column_end":23},"name":"edge_weight_mut","qualname":"::data::DataMapMut::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, Self::EdgeId)\n-> Option<&mut Self::EdgeWeight>","parent":{"krate":0,"index":4040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":771},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72772,"byte_end":72777,"line_start":44,"line_end":44,"column_start":11,"column_end":16},"name":"Build","qualname":"::data::Build","value":"Build: Data + NodeCount","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" A graph that can be extended with further nodes and edges\n","sig":null,"attributes":[{"value":"/ A graph that can be extended with further nodes and edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72700,"byte_end":72761,"line_start":43,"line_end":43,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72805,"byte_end":72813,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"add_node","qualname":"::data::Build::add_node","value":"pub fn add_node(&mut Self, Self::NodeWeight) -> Self::NodeId","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72997,"byte_end":73005,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"add_edge","qualname":"::data::Build::add_edge","value":"pub fn add_edge(&mut Self, Self::NodeId, Self::NodeId, Self::EdgeWeight)\n-> Option<Self::EdgeId>","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Add a new edge. If parallel edges (duplicate) are not allowed and\n the edge already exists, return `None`.\n","sig":null,"attributes":[{"value":"/ Add a new edge. If parallel edges (duplicate) are not allowed and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72872,"byte_end":72941,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ the edge already exists, return `None`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72946,"byte_end":72989,"line_start":47,"line_end":47,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73292,"byte_end":73303,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"update_edge","qualname":"::data::Build::update_edge","value":"pub fn update_edge(&mut Self, Self::NodeId, Self::NodeId, Self::EdgeWeight)\n-> Self::EdgeId","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" Add or update the edge from `a` to `b`. Return the id of the affected\n edge.\n","sig":null,"attributes":[{"value":"/ Add or update the edge from `a` to `b`. Return the id of the affected","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73197,"byte_end":73270,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73275,"byte_end":73284,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":775},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73476,"byte_end":73482,"line_start":67,"line_end":67,"column_start":11,"column_end":17},"name":"Create","qualname":"::data::Create","value":"Create: Build + Default","parent":null,"children":[{"krate":0,"index":776}],"decl_id":null,"docs":" A graph that can be created\n","sig":null,"attributes":[{"value":"/ A graph that can be created","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73434,"byte_end":73465,"line_start":66,"line_end":66,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73509,"byte_end":73522,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::data::Create::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":{"krate":0,"index":775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78145,"byte_end":78149,"line_start":260,"line_end":260,"column_start":5,"column_end":9},"name":"Node","qualname":"::data::Element::Node","value":"Element::Node { weight }","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":" A graph node.\n","sig":null,"attributes":[{"value":"/ A graph node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78123,"byte_end":78140,"line_start":259,"line_end":259,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78191,"byte_end":78195,"line_start":262,"line_end":262,"column_start":5,"column_end":9},"name":"Edge","qualname":"::data::Element::Edge","value":"Element::Edge { source, target, weight }","parent":{"krate":0,"index":4052},"children":[],"decl_id":null,"docs":" A graph edge.\n","sig":null,"attributes":[{"value":"/ A graph edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78169,"byte_end":78186,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78103,"byte_end":78110,"line_start":258,"line_end":258,"column_start":10,"column_end":17},"name":"Element","qualname":"::data::Element","value":"pub enum Element<N, E> {\n\n    /// A graph node.\n    Node {\n        weight: N,\n    },\n\n    /// A graph edge.\n    Edge {\n        source: usize,\n        target: usize,\n        weight: E,\n    },\n}","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4057}],"decl_id":null,"docs":" A graph element.","sig":null,"attributes":[{"value":"/ A graph element.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77809,"byte_end":77829,"line_start":252,"line_end":252,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77830,"byte_end":77833,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ A sequence of Elements, for example an iterator, is laid out as follows:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77834,"byte_end":77910,"line_start":254,"line_end":254,"column_start":1,"column_end":77}},{"value":"/ Nodes are implicitly given the index of their appearance in the sequence.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77911,"byte_end":77988,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/ The edges’ source and target fields refer to these indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77989,"byte_end":78054,"line_start":256,"line_end":256,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":852},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78332,"byte_end":78344,"line_start":270,"line_end":270,"column_start":11,"column_end":23},"name":"FromElements","qualname":"::data::FromElements","value":"FromElements: Create","parent":null,"children":[{"krate":0,"index":853}],"decl_id":null,"docs":" Create a graph from an iterator of elements.\n","sig":null,"attributes":[{"value":"/ Create a graph from an iterator of elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78273,"byte_end":78321,"line_start":269,"line_end":269,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78362,"byte_end":78375,"line_start":271,"line_end":271,"column_start":8,"column_end":21},"name":"from_elements","qualname":"::data::FromElements::from_elements","value":"pub fn from_elements<I>(I) -> Self where Self: Sized, I: IntoIterator<Item =\nElement<Self::NodeWeight, Self::EdgeWeight>>","parent":{"krate":0,"index":852},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":879},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80810,"byte_end":80825,"line_start":368,"line_end":368,"column_start":11,"column_end":26},"name":"ElementIterator","qualname":"::data::ElementIterator","value":"ElementIterator<N, E>: Iterator<Item = Element<N, E>>","parent":null,"children":[{"krate":0,"index":882}],"decl_id":null,"docs":" Iterator adaptors for iterators of `Element`.\n","sig":null,"attributes":[{"value":"/ Iterator adaptors for iterators of `Element`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80750,"byte_end":80799,"line_start":367,"line_end":367,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81377,"byte_end":81392,"line_start":378,"line_end":378,"column_start":8,"column_end":23},"name":"filter_elements","qualname":"::data::ElementIterator::filter_elements","value":"pub fn filter_elements<F>(Self, F) -> FilterElements<Self, F> where\nSelf: Sized, F: FnMut(Element<&mut N, &mut E>) -> bool","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":" Create an iterator adaptor that filters graph elements.","sig":null,"attributes":[{"value":"/ Create an iterator adaptor that filters graph elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80870,"byte_end":80929,"line_start":369,"line_end":369,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80934,"byte_end":80937,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The function `f` is called with each element and if its return value","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80942,"byte_end":81014,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/ is `true` the element is accepted and if `false` it is removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81019,"byte_end":81086,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ `f` is called with mutable references to the node and edge weights,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81091,"byte_end":81162,"line_start":373,"line_end":373,"column_start":5,"column_end":76}},{"value":"/ so that they can be mutated (but the edge endpoints can not).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81167,"byte_end":81232,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81237,"byte_end":81240,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This filter adapts the edge source and target indices in the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81245,"byte_end":81309,"line_start":376,"line_end":376,"column_start":5,"column_end":69}},{"value":"/ stream so that they are correct after the removals.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81314,"byte_end":81369,"line_start":377,"line_end":377,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":888},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81935,"byte_end":81949,"line_start":399,"line_end":399,"column_start":12,"column_end":26},"name":"FilterElements","qualname":"::data::FilterElements","value":"FilterElements {  }","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"decl_id":null,"docs":" An iterator that filters graph elements.","sig":null,"attributes":[{"value":"/ An iterator that filters graph elements.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81756,"byte_end":81800,"line_start":394,"line_end":394,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81801,"byte_end":81804,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ See [`.filter_elements()`][1] for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81805,"byte_end":81860,"line_start":396,"line_end":396,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81861,"byte_end":81864,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ [1]: trait.ElementIterator.html#method.filter_elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81865,"byte_end":81923,"line_start":398,"line_end":398,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":902},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"algo","qualname":"::algo","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":4901},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":4911},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":994},{"krate":0,"index":4095},{"krate":0,"index":4103},{"krate":0,"index":4099},{"krate":0,"index":996},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1022},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1037},{"krate":0,"index":4127},{"krate":0,"index":4140},{"krate":0,"index":4137},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":1041},{"krate":0,"index":4143},{"krate":0,"index":4152},{"krate":0,"index":4150},{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":4935},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058}],"decl_id":null,"docs":" Graph algorithms.","sig":null,"attributes":[{"value":"/ Graph algorithms.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":84279,"byte_end":84300,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":84301,"byte_end":84304,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It is a goal to gradually migrate the algorithms to be based on graph traits","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":84305,"byte_end":84385,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ so that they are generally applicable. For now, some of these still require","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":84386,"byte_end":84465,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ the `Graph` type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":84466,"byte_end":84487,"line_start":5,"line_end":5,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":903},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dominators","qualname":"::algo::dominators","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":4859},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":4084},{"krate":0,"index":4091},{"krate":0,"index":4088},{"krate":0,"index":915},{"krate":0,"index":921},{"krate":0,"index":926},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":944}],"decl_id":null,"docs":" Compute dominators of a control-flow graph.","sig":null,"attributes":[{"value":"/ Compute dominators of a control-flow graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108693,"byte_end":108740,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108741,"byte_end":108744,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # The Dominance Relation","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108745,"byte_end":108773,"line_start":3,"line_end":3,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108774,"byte_end":108777,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ In a directed graph with a root node **R**, a node **A** is said to *dominate* a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108778,"byte_end":108862,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ node **B** iff every path from **R** to **B** contains **A**.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108863,"byte_end":108928,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108929,"byte_end":108932,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The node **A** is said to *strictly dominate* the node **B** iff **A** dominates","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":108933,"byte_end":109017,"line_start":8,"line_end":8,"column_start":1,"column_end":85}},{"value":"/ **B** and **A ≠ B**.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109018,"byte_end":109044,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109045,"byte_end":109048,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The node **A** is said to be the *immediate dominator* of a node **B** iff it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109049,"byte_end":109130,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ strictly dominates **B** and there does not exist any node **C** where **A**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109131,"byte_end":109211,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ dominates **C** and **C** dominates **B**.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109212,"byte_end":109258,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4084},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109515,"byte_end":109525,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"Dominators","qualname":"::algo::dominators::Dominators","value":"Dominators {  }","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087}],"decl_id":null,"docs":" The dominance relation for some graph and root.\n","sig":null,"attributes":[{"value":"/ The dominance relation for some graph and root.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109428,"byte_end":109479,"line_start":21,"line_end":21,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109746,"byte_end":109750,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"root","qualname":"<Dominators<N>>::root","value":"pub fn root(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Get the root node used to construct these dominance relations.\n","sig":null,"attributes":[{"value":"/ Get the root node used to construct these dominance relations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109668,"byte_end":109734,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109970,"byte_end":109989,"line_start":44,"line_end":44,"column_start":12,"column_end":31},"name":"immediate_dominator","qualname":"<Dominators<N>>::immediate_dominator","value":"pub fn immediate_dominator(&Self, N) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Get the immediate dominator of the given node.","sig":null,"attributes":[{"value":"/ Get the immediate dominator of the given node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109794,"byte_end":109844,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109849,"byte_end":109852,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns `None` for any node that is not reachable from the root, and for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109857,"byte_end":109933,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ the root itself.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109938,"byte_end":109958,"line_start":43,"line_end":43,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110318,"byte_end":110335,"line_start":56,"line_end":56,"column_start":12,"column_end":29},"name":"strict_dominators","qualname":"<Dominators<N>>::strict_dominators","value":"pub fn strict_dominators(&Self, N) -> Option<DominatorsIter<, N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the given node's strict dominators.","sig":null,"attributes":[{"value":"/ Iterate over the given node's strict dominators.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110155,"byte_end":110207,"line_start":52,"line_end":52,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110212,"byte_end":110215,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the given node is not reachable from the root, then `None` is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110220,"byte_end":110288,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110293,"byte_end":110306,"line_start":55,"line_end":55,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110829,"byte_end":110839,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"dominators","qualname":"<Dominators<N>>::dominators","value":"pub fn dominators(&Self, N) -> Option<DominatorsIter<, N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all of the given node's dominators (including the given\n node itself).","sig":null,"attributes":[{"value":"/ Iterate over all of the given node's dominators (including the given","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110624,"byte_end":110696,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ node itself).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110701,"byte_end":110718,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110723,"byte_end":110726,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If the given node is not reachable from the root, then `None` is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110731,"byte_end":110799,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":110804,"byte_end":110817,"line_start":71,"line_end":71,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":921},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111155,"byte_end":111169,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"DominatorsIter","qualname":"::algo::dominators::DominatorsIter","value":"DominatorsIter {  }","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925}],"decl_id":null,"docs":" Iterator for a node's dominators.\n","sig":null,"attributes":[{"value":"/ Iterator for a node's dominators.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111106,"byte_end":111143,"line_start":84,"line_end":84,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":112197,"byte_end":112208,"line_start":121,"line_end":121,"column_start":8,"column_end":19},"name":"simple_fast","qualname":"::algo::dominators::simple_fast","value":"pub fn simple_fast<G>(G, G::NodeId) -> Dominators<G::NodeId> where\nG: IntoNeighbors + Visitable, <G as GraphBase>::NodeId: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" This is an implementation of the engineered [\"Simple, Fast Dominance\n Algorithm\"][0] discovered by Cooper et al.","sig":null,"attributes":[{"value":"/ This is an implementation of the engineered [\"Simple, Fast Dominance","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111740,"byte_end":111812,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/ Algorithm\"][0] discovered by Cooper et al.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111813,"byte_end":111859,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111860,"byte_end":111863,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This algorithm is **O(|V|²)**, and therefore has slower theoretical running time","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111864,"byte_end":111949,"line_start":115,"line_end":115,"column_start":1,"column_end":85}},{"value":"/ than the Lengauer-Tarjan algorithm (which is **O(|E| log |V|)**. However,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111950,"byte_end":112027,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ Cooper et al found it to be faster in practice on control flow graphs of up","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":112028,"byte_end":112107,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ to ~30,000 vertices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":112108,"byte_end":112132,"line_start":118,"line_end":118,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":112133,"byte_end":112136,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [0]: http://www.cs.rice.edu/~keith/EMBED/dom.pdf","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":112137,"byte_end":112189,"line_start":120,"line_end":120,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":981},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86283,"byte_end":86303,"line_start":70,"line_end":70,"column_start":8,"column_end":28},"name":"connected_components","qualname":"::algo::connected_components","value":"pub fn connected_components<G>(G) -> usize where G: NodeCompactIndexable +\nIntoEdgeReferences","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Return the number of connected components of the graph.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Return the number of connected components of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85226,"byte_end":85297,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85298,"byte_end":85301,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ For a directed graph, this is the *weakly* connected components.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85302,"byte_end":85370,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85371,"byte_end":85384,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85385,"byte_end":85396,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85397,"byte_end":85421,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"/ use petgraph::algo::connected_components;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85422,"byte_end":85467,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85468,"byte_end":85497,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85498,"byte_end":85501,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut graph : Graph<(),(),Directed>= Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85502,"byte_end":85558,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/ let a = graph.add_node(()); // node with no weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85559,"byte_end":85613,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ let b = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85614,"byte_end":85645,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/ let c = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85646,"byte_end":85677,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ let d = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85678,"byte_end":85709,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ let e = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85710,"byte_end":85741,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ let f = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85742,"byte_end":85773,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ let g = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85774,"byte_end":85805,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/ let h = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85806,"byte_end":85837,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85838,"byte_end":85841,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ graph.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85842,"byte_end":85872,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/     (a, b),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85873,"byte_end":85888,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/     (b, c),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85889,"byte_end":85904,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     (c, d),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85905,"byte_end":85920,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     (d, a),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85921,"byte_end":85936,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/     (e, f),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85937,"byte_end":85952,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     (f, g),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85953,"byte_end":85968,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/     (g, h),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85969,"byte_end":85984,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/     (h, e)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":85985,"byte_end":85999,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86000,"byte_end":86007,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ // a ----> b       e ----> f","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86008,"byte_end":86040,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ // ^       |       ^       |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86041,"byte_end":86073,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ // |       v       |       v","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86074,"byte_end":86106,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ // d <---- c       h <---- g","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86107,"byte_end":86139,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86140,"byte_end":86143,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(connected_components(&graph),2);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86144,"byte_end":86191,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ graph.add_edge(b,e,());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86192,"byte_end":86219,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(connected_components(&graph),1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86220,"byte_end":86267,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86268,"byte_end":86275,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":983},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86878,"byte_end":86898,"line_start":90,"line_end":90,"column_start":8,"column_end":28},"name":"is_cyclic_undirected","qualname":"::algo::is_cyclic_undirected","value":"pub fn is_cyclic_undirected<G>(G) -> bool where G: NodeIndexable +\nIntoEdgeReferences","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Return `true` if the input graph contains a cycle.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Return `true` if the input graph contains a cycle.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86748,"byte_end":86814,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86815,"byte_end":86818,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Always treats the input graph as if undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":86819,"byte_end":86870,"line_start":89,"line_end":89,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":985},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87865,"byte_end":87873,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"toposort","qualname":"::algo::toposort","value":"pub fn toposort<G>(G, Option<&mut DfsSpace<G::NodeId, G::Map>>)\n-> Result<Vec<G::NodeId>, Cycle<G::NodeId>> where G: IntoNeighborsDirected +\nIntoNodeIdentifiers + Visitable","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Perform a topological sort of a directed graph.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Perform a topological sort of a directed graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87342,"byte_end":87405,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87406,"byte_end":87409,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ If the graph was acyclic, return a vector of nodes in topological order:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87410,"byte_end":87486,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ each node is ordered before its successors.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87487,"byte_end":87534,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ Otherwise, it will return a `Cycle` error. Self loops are also cycles.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87535,"byte_end":87609,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87610,"byte_end":87613,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ To handle graphs with cycles, use the scc algorithms or `DfsPostOrder`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87614,"byte_end":87688,"line_start":113,"line_end":113,"column_start":1,"column_end":75}},{"value":"/ instead of this function.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87689,"byte_end":87718,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87719,"byte_end":87722,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ If `space` is not `None`, it is used instead of creating a new workspace for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87723,"byte_end":87803,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ graph traversal. The implementation is iterative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":87804,"byte_end":87857,"line_start":117,"line_end":117,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":988},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":89793,"byte_end":89811,"line_start":179,"line_end":179,"column_start":8,"column_end":26},"name":"is_cyclic_directed","qualname":"::algo::is_cyclic_directed","value":"pub fn is_cyclic_directed<G>(G) -> bool where G: IntoNodeIdentifiers +\nIntoNeighbors + Visitable","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Return `true` if the input directed graph contains a cycle.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Return `true` if the input directed graph contains a cycle.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":89620,"byte_end":89695,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":89696,"byte_end":89699,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This implementation is recursive; use `toposort` if an alternative is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":89700,"byte_end":89773,"line_start":177,"line_end":177,"column_start":1,"column_end":74}},{"value":"/ needed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":89774,"byte_end":89785,"line_start":178,"line_end":178,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4095},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90263,"byte_end":90271,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"DfsSpace","qualname":"::algo::DfsSpace","value":"DfsSpace {  }","parent":null,"children":[{"krate":0,"index":4098}],"decl_id":null,"docs":" Workspace for a graph traversal.\n","sig":null,"attributes":[{"value":"/ Workspace for a graph traversal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90191,"byte_end":90227,"line_start":194,"line_end":194,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90398,"byte_end":90401,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsSpace<N, VM>>::new","value":"pub fn new<G>(G) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91444,"byte_end":91463,"line_start":249,"line_end":249,"column_start":8,"column_end":27},"name":"has_path_connecting","qualname":"::algo::has_path_connecting","value":"pub fn has_path_connecting<G>(G, G::NodeId, G::NodeId,\n                              Option<&mut DfsSpace<G::NodeId, G::Map>>)\n-> bool where G: IntoNeighbors + Visitable","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Check if there exists a path starting at `from` and reaching `to`.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Check if there exists a path starting at `from` and reaching `to`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91182,"byte_end":91264,"line_start":243,"line_end":243,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91265,"byte_end":91268,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ If `from` and `to` are equal, this function returns true.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91269,"byte_end":91330,"line_start":245,"line_end":245,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91331,"byte_end":91334,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ If `space` is not `None`, it is used instead of creating a new workspace for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91335,"byte_end":91415,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ graph traversal.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91416,"byte_end":91436,"line_start":248,"line_end":248,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91836,"byte_end":91839,"line_start":267,"line_end":267,"column_start":8,"column_end":11},"name":"scc","qualname":"::algo::scc","value":"pub fn scc<G>(G) -> Vec<Vec<G::NodeId>> where G: IntoNeighborsDirected +\nVisitable + IntoNodeIdentifiers","parent":null,"children":[],"decl_id":null,"docs":" Renamed to `kosaraju_scc`.\n","sig":null,"attributes":[{"value":"/ Renamed to `kosaraju_scc`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91750,"byte_end":91780,"line_start":265,"line_end":265,"column_start":1,"column_end":31}},{"value":"deprecated(note = \"renamed to kosaraju_scc\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91781,"byte_end":91828,"line_start":266,"line_end":266,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92506,"byte_end":92518,"line_start":285,"line_end":285,"column_start":8,"column_end":20},"name":"kosaraju_scc","qualname":"::algo::kosaraju_scc","value":"pub fn kosaraju_scc<G>(G) -> Vec<Vec<G::NodeId>> where\nG: IntoNeighborsDirected + Visitable + IntoNodeIdentifiers","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Compute the *strongly connected components* using [Kosaraju's algorithm][1].","sig":null,"attributes":[{"value":"/ \\[Generic\\] Compute the *strongly connected components* using [Kosaraju's algorithm][1].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":91967,"byte_end":92059,"line_start":274,"line_end":274,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92060,"byte_end":92063,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Kosaraju%27s_algorithm","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92064,"byte_end":92125,"line_start":276,"line_end":276,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92126,"byte_end":92129,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ Return a vector where each element is a strongly connected component (scc).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92130,"byte_end":92209,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ The order of node ids within each scc is arbitrary, but the order of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92210,"byte_end":92282,"line_start":279,"line_end":279,"column_start":1,"column_end":73}},{"value":"/ the sccs is their postorder (reverse topological sort).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92283,"byte_end":92342,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92343,"byte_end":92346,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ For an undirected graph, the sccs are simply the connected components.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92347,"byte_end":92421,"line_start":282,"line_end":282,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92422,"byte_end":92425,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ This implementation is iterative and does two passes over the nodes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":92426,"byte_end":92498,"line_start":284,"line_end":284,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":94155,"byte_end":94165,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"tarjan_scc","qualname":"::algo::tarjan_scc","value":"pub fn tarjan_scc<G>(G) -> Vec<Vec<G::NodeId>> where G: IntoNodeIdentifiers +\nIntoNeighbors + NodeIndexable","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Compute the *strongly connected components* using [Tarjan's algorithm][1].","sig":null,"attributes":[{"value":"/ \\[Generic\\] Compute the *strongly connected components* using [Tarjan's algorithm][1].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93592,"byte_end":93682,"line_start":326,"line_end":326,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93683,"byte_end":93686,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93687,"byte_end":93776,"line_start":328,"line_end":328,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93777,"byte_end":93780,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Return a vector where each element is a strongly connected component (scc).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93781,"byte_end":93860,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ The order of node ids within each scc is arbitrary, but the order of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93861,"byte_end":93933,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"/ the sccs is their postorder (reverse topological sort).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93934,"byte_end":93993,"line_start":332,"line_end":332,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93994,"byte_end":93997,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ For an undirected graph, the sccs are simply the connected components.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":93998,"byte_end":94072,"line_start":334,"line_end":334,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":94073,"byte_end":94076,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ This implementation is recursive and does one pass over the nodes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":94077,"byte_end":94147,"line_start":336,"line_end":336,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99311,"byte_end":99323,"line_start":520,"line_end":520,"column_start":8,"column_end":20},"name":"condensation","qualname":"::algo::condensation","value":"pub fn condensation<N, E, Ty, Ix>(Graph<N, E, Ty, Ix>, bool)\n-> Graph<Vec<N>, E, Ty, Ix> where Ty: EdgeType, Ix: IndexType","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Condense every strongly connected component into a single node and return the result.","sig":null,"attributes":[{"value":"/ [Graph] Condense every strongly connected component into a single node and return the result.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":96832,"byte_end":96929,"line_start":440,"line_end":440,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":96930,"byte_end":96933,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ If `make_acyclic` is true, self-loops and multi edges are ignored, guaranteeing that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":96934,"byte_end":97022,"line_start":442,"line_end":442,"column_start":1,"column_end":89}},{"value":"/ the output is acyclic.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97023,"byte_end":97049,"line_start":443,"line_end":443,"column_start":1,"column_end":27}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97050,"byte_end":97063,"line_start":444,"line_end":444,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97064,"byte_end":97075,"line_start":445,"line_end":445,"column_start":1,"column_end":12}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97076,"byte_end":97100,"line_start":446,"line_end":446,"column_start":1,"column_end":25}},{"value":"/ use petgraph::algo::condensation;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97101,"byte_end":97138,"line_start":447,"line_end":447,"column_start":1,"column_end":38}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97139,"byte_end":97168,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97169,"byte_end":97172,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ let mut graph : Graph<(),(),Directed> = Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97173,"byte_end":97230,"line_start":450,"line_end":450,"column_start":1,"column_end":58}},{"value":"/ let a = graph.add_node(()); // node with no weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97231,"byte_end":97285,"line_start":451,"line_end":451,"column_start":1,"column_end":55}},{"value":"/ let b = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97286,"byte_end":97317,"line_start":452,"line_end":452,"column_start":1,"column_end":32}},{"value":"/ let c = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97318,"byte_end":97349,"line_start":453,"line_end":453,"column_start":1,"column_end":32}},{"value":"/ let d = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97350,"byte_end":97381,"line_start":454,"line_end":454,"column_start":1,"column_end":32}},{"value":"/ let e = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97382,"byte_end":97413,"line_start":455,"line_end":455,"column_start":1,"column_end":32}},{"value":"/ let f = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97414,"byte_end":97445,"line_start":456,"line_end":456,"column_start":1,"column_end":32}},{"value":"/ let g = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97446,"byte_end":97477,"line_start":457,"line_end":457,"column_start":1,"column_end":32}},{"value":"/ let h = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97478,"byte_end":97509,"line_start":458,"line_end":458,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97510,"byte_end":97513,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ graph.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97514,"byte_end":97544,"line_start":460,"line_end":460,"column_start":1,"column_end":31}},{"value":"/     (a, b),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97545,"byte_end":97560,"line_start":461,"line_end":461,"column_start":1,"column_end":16}},{"value":"/     (b, c),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97561,"byte_end":97576,"line_start":462,"line_end":462,"column_start":1,"column_end":16}},{"value":"/     (c, d),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97577,"byte_end":97592,"line_start":463,"line_end":463,"column_start":1,"column_end":16}},{"value":"/     (d, a),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97593,"byte_end":97608,"line_start":464,"line_end":464,"column_start":1,"column_end":16}},{"value":"/     (b, e),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97609,"byte_end":97624,"line_start":465,"line_end":465,"column_start":1,"column_end":16}},{"value":"/     (e, f),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97625,"byte_end":97640,"line_start":466,"line_end":466,"column_start":1,"column_end":16}},{"value":"/     (f, g),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97641,"byte_end":97656,"line_start":467,"line_end":467,"column_start":1,"column_end":16}},{"value":"/     (g, h),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97657,"byte_end":97672,"line_start":468,"line_end":468,"column_start":1,"column_end":16}},{"value":"/     (h, e)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97673,"byte_end":97687,"line_start":469,"line_end":469,"column_start":1,"column_end":15}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97688,"byte_end":97695,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97696,"byte_end":97699,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ // a ----> b ----> e ----> f","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97700,"byte_end":97732,"line_start":472,"line_end":472,"column_start":1,"column_end":33}},{"value":"/ // ^       |       ^       |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97733,"byte_end":97765,"line_start":473,"line_end":473,"column_start":1,"column_end":33}},{"value":"/ // |       v       |       v","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97766,"byte_end":97798,"line_start":474,"line_end":474,"column_start":1,"column_end":33}},{"value":"/ // d <---- c       h <---- g","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97799,"byte_end":97831,"line_start":475,"line_end":475,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97832,"byte_end":97835,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ let condensed_graph = condensation(graph,false);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97836,"byte_end":97888,"line_start":477,"line_end":477,"column_start":1,"column_end":53}},{"value":"/ let A = NodeIndex::new(0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97889,"byte_end":97919,"line_start":478,"line_end":478,"column_start":1,"column_end":31}},{"value":"/ let B = NodeIndex::new(1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97920,"byte_end":97950,"line_start":479,"line_end":479,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(condensed_graph.node_count(), 2);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":97951,"byte_end":97999,"line_start":480,"line_end":480,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(condensed_graph.edge_count(), 9);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98000,"byte_end":98048,"line_start":481,"line_end":481,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(condensed_graph.neighbors(A).collect::<Vec<_>>(), vec![A, A, A, A]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98049,"byte_end":98132,"line_start":482,"line_end":482,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(condensed_graph.neighbors(B).collect::<Vec<_>>(), vec![A, B, B, B, B]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98133,"byte_end":98219,"line_start":483,"line_end":483,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98220,"byte_end":98227,"line_start":484,"line_end":484,"column_start":1,"column_end":8}},{"value":"/ If `make_acyclic` is true, self-loops and multi edges are ignored:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98228,"byte_end":98298,"line_start":485,"line_end":485,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98299,"byte_end":98302,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98303,"byte_end":98314,"line_start":487,"line_end":487,"column_start":1,"column_end":12}},{"value":"/ # use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98315,"byte_end":98341,"line_start":488,"line_end":488,"column_start":1,"column_end":27}},{"value":"/ # use petgraph::algo::condensation;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98342,"byte_end":98381,"line_start":489,"line_end":489,"column_start":1,"column_end":40}},{"value":"/ # use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98382,"byte_end":98413,"line_start":490,"line_end":490,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98414,"byte_end":98419,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/ # let mut graph : Graph<(),(),Directed> = Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98420,"byte_end":98479,"line_start":492,"line_end":492,"column_start":1,"column_end":60}},{"value":"/ # let a = graph.add_node(()); // node with no weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98480,"byte_end":98536,"line_start":493,"line_end":493,"column_start":1,"column_end":57}},{"value":"/ # let b = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98537,"byte_end":98570,"line_start":494,"line_end":494,"column_start":1,"column_end":34}},{"value":"/ # let c = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98571,"byte_end":98604,"line_start":495,"line_end":495,"column_start":1,"column_end":34}},{"value":"/ # let d = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98605,"byte_end":98638,"line_start":496,"line_end":496,"column_start":1,"column_end":34}},{"value":"/ # let e = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98639,"byte_end":98672,"line_start":497,"line_end":497,"column_start":1,"column_end":34}},{"value":"/ # let f = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98673,"byte_end":98706,"line_start":498,"line_end":498,"column_start":1,"column_end":34}},{"value":"/ # let g = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98707,"byte_end":98740,"line_start":499,"line_end":499,"column_start":1,"column_end":34}},{"value":"/ # let h = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98741,"byte_end":98774,"line_start":500,"line_end":500,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98775,"byte_end":98780,"line_start":501,"line_end":501,"column_start":1,"column_end":6}},{"value":"/ # graph.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98781,"byte_end":98813,"line_start":502,"line_end":502,"column_start":1,"column_end":33}},{"value":"/ #    (a, b),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98814,"byte_end":98830,"line_start":503,"line_end":503,"column_start":1,"column_end":17}},{"value":"/ #    (b, c),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98831,"byte_end":98847,"line_start":504,"line_end":504,"column_start":1,"column_end":17}},{"value":"/ #    (c, d),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98848,"byte_end":98864,"line_start":505,"line_end":505,"column_start":1,"column_end":17}},{"value":"/ #    (d, a),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98865,"byte_end":98881,"line_start":506,"line_end":506,"column_start":1,"column_end":17}},{"value":"/ #    (b, e),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98882,"byte_end":98898,"line_start":507,"line_end":507,"column_start":1,"column_end":17}},{"value":"/ #    (e, f),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98899,"byte_end":98915,"line_start":508,"line_end":508,"column_start":1,"column_end":17}},{"value":"/ #    (f, g),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98916,"byte_end":98932,"line_start":509,"line_end":509,"column_start":1,"column_end":17}},{"value":"/ #    (g, h),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98933,"byte_end":98949,"line_start":510,"line_end":510,"column_start":1,"column_end":17}},{"value":"/ #    (h, e)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98950,"byte_end":98965,"line_start":511,"line_end":511,"column_start":1,"column_end":16}},{"value":"/ # ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98966,"byte_end":98975,"line_start":512,"line_end":512,"column_start":1,"column_end":10}},{"value":"/ let acyclic_condensed_graph = condensation(graph, true);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":98976,"byte_end":99036,"line_start":513,"line_end":513,"column_start":1,"column_end":61}},{"value":"/ let A = NodeIndex::new(0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99037,"byte_end":99067,"line_start":514,"line_end":514,"column_start":1,"column_end":31}},{"value":"/ let B = NodeIndex::new(1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99068,"byte_end":99098,"line_start":515,"line_end":515,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(acyclic_condensed_graph.node_count(), 2);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99099,"byte_end":99155,"line_start":516,"line_end":516,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(acyclic_condensed_graph.edge_count(), 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99156,"byte_end":99212,"line_start":517,"line_end":517,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(acyclic_condensed_graph.neighbors(B).collect::<Vec<_>>(), vec![A]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99213,"byte_end":99295,"line_start":518,"line_end":518,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":99296,"byte_end":99303,"line_start":519,"line_end":519,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":101078,"byte_end":101095,"line_start":571,"line_end":571,"column_start":8,"column_end":25},"name":"min_spanning_tree","qualname":"::algo::min_spanning_tree","value":"pub fn min_spanning_tree<G>(G) -> MinSpanningTree<G> where\nG::NodeWeight: Clone, G::EdgeWeight: Clone + PartialOrd,\nG: IntoNodeReferences + IntoEdgeReferences + NodeIndexable","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Compute a *minimum spanning tree* of a graph.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Compute a *minimum spanning tree* of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100504,"byte_end":100565,"line_start":559,"line_end":559,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100566,"byte_end":100569,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ The input graph is treated as if undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100570,"byte_end":100618,"line_start":561,"line_end":561,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100619,"byte_end":100622,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ Using Kruskal's algorithm with runtime **O(|E| log |E|)**. We actually","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100623,"byte_end":100697,"line_start":563,"line_end":563,"column_start":1,"column_end":75}},{"value":"/ return a minimum spanning forest, i.e. a minimum spanning tree for each connected","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100698,"byte_end":100783,"line_start":564,"line_end":564,"column_start":1,"column_end":86}},{"value":"/ component of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100784,"byte_end":100811,"line_start":565,"line_end":565,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100812,"byte_end":100815,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ The resulting graph has all the vertices of the input graph (with identical node indices),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100816,"byte_end":100910,"line_start":567,"line_end":567,"column_start":1,"column_end":95}},{"value":"/ and **|V| - c** edges, where **c** is the number of connected components in `g`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100911,"byte_end":100995,"line_start":568,"line_end":568,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":100996,"byte_end":100999,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ Use `from_elements` to create a graph from the resulting iterator.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":101000,"byte_end":101070,"line_start":570,"line_end":570,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":101989,"byte_end":102004,"line_start":601,"line_end":601,"column_start":12,"column_end":27},"name":"MinSpanningTree","qualname":"::algo::MinSpanningTree","value":"MinSpanningTree {  }","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036}],"decl_id":null,"docs":" An iterator producing a minimum spanning forest of a graph.\n","sig":null,"attributes":[{"value":"/ An iterator producing a minimum spanning forest of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":101914,"byte_end":101977,"line_start":600,"line_end":600,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4127},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104155,"byte_end":104160,"line_start":665,"line_end":665,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::algo::Cycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle was found in the graph.\n","sig":null,"attributes":[{"value":"/ An algorithm error: a cycle was found in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104053,"byte_end":104108,"line_start":663,"line_end":663,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104255,"byte_end":104262,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"node_id","qualname":"<Cycle<N>>::node_id","value":"pub fn node_id(&Self) -> N where N: Copy","parent":null,"children":[],"decl_id":null,"docs":" Return a node id that participates in the cycle\n","sig":null,"attributes":[{"value":"/ Return a node id that participates in the cycle","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104192,"byte_end":104243,"line_start":668,"line_end":668,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104453,"byte_end":104466,"line_start":678,"line_end":678,"column_start":12,"column_end":25},"name":"NegativeCycle","qualname":"::algo::NegativeCycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle of negative weights was found in the graph.\n","sig":null,"attributes":[{"value":"/ An algorithm error: a cycle of negative weights was found in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104331,"byte_end":104406,"line_start":676,"line_end":676,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106575,"byte_end":106587,"line_start":745,"line_end":745,"column_start":8,"column_end":20},"name":"bellman_ford","qualname":"::algo::bellman_ford","value":"pub fn bellman_ford<G>(G, G::NodeId)\n-> Result<(Vec<G::EdgeWeight>, Vec<Option<G::NodeId>>), NegativeCycle> where\nG: NodeCount + IntoNodeIdentifiers + IntoEdges + NodeIndexable,\nG::EdgeWeight: FloatMeasure","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Compute shortest paths from node `source` to all other.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Compute shortest paths from node `source` to all other.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104473,"byte_end":104544,"line_start":680,"line_end":680,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104545,"byte_end":104548,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ Using the [Bellman–Ford algorithm][bf]; negative edge costs are","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104549,"byte_end":104618,"line_start":682,"line_end":682,"column_start":1,"column_end":68}},{"value":"/ permitted, but the graph must not have a cycle of negative weights","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104619,"byte_end":104689,"line_start":683,"line_end":683,"column_start":1,"column_end":71}},{"value":"/ (in that case it will return an error).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104690,"byte_end":104733,"line_start":684,"line_end":684,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104734,"byte_end":104737,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ On success, return one vec with path costs, and another one which points","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104738,"byte_end":104814,"line_start":686,"line_end":686,"column_start":1,"column_end":77}},{"value":"/ out the predecessor of a node along a shortest path. The vectors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104815,"byte_end":104883,"line_start":687,"line_end":687,"column_start":1,"column_end":69}},{"value":"/ are indexed by the graph's node indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104884,"byte_end":104928,"line_start":688,"line_end":688,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104929,"byte_end":104932,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ [bf]: https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104933,"byte_end":105003,"line_start":690,"line_end":690,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105004,"byte_end":105007,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105008,"byte_end":105021,"line_start":692,"line_end":692,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105022,"byte_end":105033,"line_start":693,"line_end":693,"column_start":1,"column_end":12}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105034,"byte_end":105058,"line_start":694,"line_end":694,"column_start":1,"column_end":25}},{"value":"/ use petgraph::algo::bellman_ford;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105059,"byte_end":105096,"line_start":695,"line_end":695,"column_start":1,"column_end":38}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105097,"byte_end":105126,"line_start":696,"line_end":696,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105127,"byte_end":105130,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ let mut g = Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105131,"byte_end":105160,"line_start":698,"line_end":698,"column_start":1,"column_end":30}},{"value":"/ let a = g.add_node(()); // node with no weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105161,"byte_end":105211,"line_start":699,"line_end":699,"column_start":1,"column_end":51}},{"value":"/ let b = g.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105212,"byte_end":105239,"line_start":700,"line_end":700,"column_start":1,"column_end":28}},{"value":"/ let c = g.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105240,"byte_end":105267,"line_start":701,"line_end":701,"column_start":1,"column_end":28}},{"value":"/ let d = g.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105268,"byte_end":105295,"line_start":702,"line_end":702,"column_start":1,"column_end":28}},{"value":"/ let e = g.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105296,"byte_end":105323,"line_start":703,"line_end":703,"column_start":1,"column_end":28}},{"value":"/ let f = g.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105324,"byte_end":105351,"line_start":704,"line_end":704,"column_start":1,"column_end":28}},{"value":"/ g.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105352,"byte_end":105378,"line_start":705,"line_end":705,"column_start":1,"column_end":27}},{"value":"/     (0, 1, 2.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105379,"byte_end":105399,"line_start":706,"line_end":706,"column_start":1,"column_end":21}},{"value":"/     (0, 3, 4.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105400,"byte_end":105420,"line_start":707,"line_end":707,"column_start":1,"column_end":21}},{"value":"/     (1, 2, 1.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105421,"byte_end":105441,"line_start":708,"line_end":708,"column_start":1,"column_end":21}},{"value":"/     (1, 5, 7.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105442,"byte_end":105462,"line_start":709,"line_end":709,"column_start":1,"column_end":21}},{"value":"/     (2, 4, 5.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105463,"byte_end":105483,"line_start":710,"line_end":710,"column_start":1,"column_end":21}},{"value":"/     (4, 5, 1.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105484,"byte_end":105504,"line_start":711,"line_end":711,"column_start":1,"column_end":21}},{"value":"/     (3, 4, 1.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105505,"byte_end":105525,"line_start":712,"line_end":712,"column_start":1,"column_end":21}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105526,"byte_end":105533,"line_start":713,"line_end":713,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105534,"byte_end":105537,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ // Graph represented with the weight of each edge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105538,"byte_end":105591,"line_start":715,"line_end":715,"column_start":1,"column_end":54}},{"value":"/ //","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105592,"byte_end":105598,"line_start":716,"line_end":716,"column_start":1,"column_end":7}},{"value":"/ //     2       1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105599,"byte_end":105619,"line_start":717,"line_end":717,"column_start":1,"column_end":21}},{"value":"/ // a ----- b ----- c","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105620,"byte_end":105644,"line_start":718,"line_end":718,"column_start":1,"column_end":25}},{"value":"/ // | 4     | 7     |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105645,"byte_end":105669,"line_start":719,"line_end":719,"column_start":1,"column_end":25}},{"value":"/ // d       f       | 5","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105670,"byte_end":105696,"line_start":720,"line_end":720,"column_start":1,"column_end":27}},{"value":"/ // | 1     | 1     |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105697,"byte_end":105721,"line_start":721,"line_end":721,"column_start":1,"column_end":25}},{"value":"/ // \\------ e ------/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105722,"byte_end":105746,"line_start":722,"line_end":722,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105747,"byte_end":105750,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ let path = bellman_ford(&g, a);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105751,"byte_end":105786,"line_start":724,"line_end":724,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(path, Ok((vec![0.0 ,     2.0,    3.0,    4.0,     5.0,     6.0],","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105787,"byte_end":105866,"line_start":725,"line_end":725,"column_start":1,"column_end":80}},{"value":"/                      vec![None, Some(a),Some(b),Some(a), Some(d), Some(e)]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105867,"byte_end":105945,"line_start":726,"line_end":726,"column_start":1,"column_end":79}},{"value":"/                    ))","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105946,"byte_end":105971,"line_start":727,"line_end":727,"column_start":1,"column_end":26}},{"value":"/           );","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105972,"byte_end":105988,"line_start":728,"line_end":728,"column_start":1,"column_end":17}},{"value":"/ // Node f (indice 5) can be reach from a with a path costing 6.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":105989,"byte_end":106056,"line_start":729,"line_end":729,"column_start":1,"column_end":68}},{"value":"/ // Predecessor of f is Some(e) which predecessor is Some(d) which predecessor is Some(a).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106057,"byte_end":106150,"line_start":730,"line_end":730,"column_start":1,"column_end":94}},{"value":"/ // Thus the path from a to f is a <-> d <-> e <-> f","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106151,"byte_end":106206,"line_start":731,"line_end":731,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106207,"byte_end":106210,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ let graph_with_neg_cycle = Graph::<(), f32, Undirected>::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106211,"byte_end":106285,"line_start":733,"line_end":733,"column_start":1,"column_end":75}},{"value":"/         (0, 1, -2.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106286,"byte_end":106311,"line_start":734,"line_end":734,"column_start":1,"column_end":26}},{"value":"/         (0, 3, -4.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106312,"byte_end":106337,"line_start":735,"line_end":735,"column_start":1,"column_end":26}},{"value":"/         (1, 2, -1.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106338,"byte_end":106363,"line_start":736,"line_end":736,"column_start":1,"column_end":26}},{"value":"/         (1, 5, -25.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106364,"byte_end":106390,"line_start":737,"line_end":737,"column_start":1,"column_end":27}},{"value":"/         (2, 4, -5.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106391,"byte_end":106416,"line_start":738,"line_end":738,"column_start":1,"column_end":26}},{"value":"/         (4, 5, -25.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106417,"byte_end":106443,"line_start":739,"line_end":739,"column_start":1,"column_end":27}},{"value":"/         (3, 4, -1.0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106444,"byte_end":106469,"line_start":740,"line_end":740,"column_start":1,"column_end":26}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106470,"byte_end":106477,"line_start":741,"line_end":741,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106478,"byte_end":106481,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ assert!(bellman_ford(&graph_with_neg_cycle, NodeIndex::new(0)).is_err());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106482,"byte_end":106559,"line_start":743,"line_end":743,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":106560,"byte_end":106567,"line_start":744,"line_end":744,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108155,"byte_end":108162,"line_start":798,"line_end":798,"column_start":11,"column_end":18},"name":"Measure","qualname":"::algo::Measure","value":"Measure: Debug + PartialOrd + Add<Self, Output = Self> + Default + Clone","parent":null,"children":[],"decl_id":null,"docs":" Associated data that can be used for measures (such as length).\n","sig":null,"attributes":[{"value":"/ Associated data that can be used for measures (such as length).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108077,"byte_end":108144,"line_start":797,"line_end":797,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108365,"byte_end":108377,"line_start":803,"line_end":803,"column_start":11,"column_end":23},"name":"FloatMeasure","qualname":"::algo::FloatMeasure","value":"FloatMeasure: Measure + Copy","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" A floating-point measure.\n","sig":null,"attributes":[{"value":"/ A floating-point measure.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108325,"byte_end":108354,"line_start":802,"line_end":802,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108403,"byte_end":108407,"line_start":804,"line_end":804,"column_start":8,"column_end":12},"name":"zero","qualname":"::algo::FloatMeasure::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108426,"byte_end":108434,"line_start":805,"line_end":805,"column_start":8,"column_end":16},"name":"infinite","qualname":"::algo::FloatMeasure::infinite","value":"pub fn infinite() -> Self","parent":{"krate":0,"index":1052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119378,"byte_end":119383,"line_start":66,"line_end":66,"column_start":8,"column_end":13},"name":"astar","qualname":"::astar::astar","value":"pub fn astar<G, F, H, K, IsGoal>(G, G::NodeId, IsGoal, F, H)\n-> Option<(K, Vec<G::NodeId>)> where G: IntoEdges + Visitable,\nIsGoal: FnMut(G::NodeId) -> bool, G::NodeId: Eq + Hash, F: FnMut(G::EdgeRef)\n-> K, H: FnMut(G::NodeId) -> K, K: Measure + Copy","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] A* shortest path algorithm.","sig":null,"attributes":[{"value":"/ \\[Generic\\] A* shortest path algorithm.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117589,"byte_end":117632,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117633,"byte_end":117636,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Computes the shortest path from `start` to `finish`, including the total path cost.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117637,"byte_end":117724,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117725,"byte_end":117728,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `finish` is implicitly given via the `is_goal` callback, which should return `true` if the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117729,"byte_end":117823,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ given node is the finish node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117824,"byte_end":117858,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117859,"byte_end":117862,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The function `edge_cost` should return the cost for a particular edge. Edge costs must be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117863,"byte_end":117956,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ non-negative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117957,"byte_end":117974,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117975,"byte_end":117978,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The function `estimate_cost` should return the estimated cost to the finish for a particular","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":117979,"byte_end":118075,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/ node. For the algorithm to find the actual shortest path, it should be admissible, meaning that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118076,"byte_end":118175,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ it should never overestimate the actual cost to get to the nearest goal node. Estimate costs","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118176,"byte_end":118272,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ must also be non-negative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118273,"byte_end":118303,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118304,"byte_end":118307,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The graph should be `Visitable` and implement `IntoEdges`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118308,"byte_end":118370,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118371,"byte_end":118374,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118375,"byte_end":118388,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118389,"byte_end":118396,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118397,"byte_end":118421,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ use petgraph::algo::astar;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118422,"byte_end":118452,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118453,"byte_end":118456,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut g = Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118457,"byte_end":118486,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ let a = g.add_node((0., 0.));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118487,"byte_end":118520,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ let b = g.add_node((2., 0.));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118521,"byte_end":118554,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ let c = g.add_node((1., 1.));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118555,"byte_end":118588,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ let d = g.add_node((0., 2.));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118589,"byte_end":118622,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ let e = g.add_node((3., 3.));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118623,"byte_end":118656,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let f = g.add_node((4., 2.));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118657,"byte_end":118690,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ g.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118691,"byte_end":118717,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/     (a, b, 2),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118718,"byte_end":118736,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/     (a, d, 4),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118737,"byte_end":118755,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/     (b, c, 1),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118756,"byte_end":118774,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/     (b, f, 7),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118775,"byte_end":118793,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/     (c, e, 5),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118794,"byte_end":118812,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/     (e, f, 1),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118813,"byte_end":118831,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     (d, e, 1),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118832,"byte_end":118850,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118851,"byte_end":118858,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118859,"byte_end":118862,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Graph represented with the weight of each edge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118863,"byte_end":118916,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ // Edges with '*' are part of the optimal path.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118917,"byte_end":118968,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ //","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118969,"byte_end":118975,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/ //     2       1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118976,"byte_end":118996,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/ // a ----- b ----- c","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":118997,"byte_end":119021,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ // | 4*    | 7     |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119022,"byte_end":119046,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ // d       f       | 5","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119047,"byte_end":119073,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/ // | 1*    | 1*    |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119074,"byte_end":119098,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/ // \\------ e ------/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119099,"byte_end":119123,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119124,"byte_end":119127,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let path = astar(&g, a, |finish| finish == f, |e| *e.weight(), |_| 0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119128,"byte_end":119202,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(path, Some((6, vec![a, d, e, f])));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119203,"byte_end":119253,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119254,"byte_end":119261,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119262,"byte_end":119265,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Returns the total cost + the path of subsequent `NodeId` from start to finish, if one was","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119266,"byte_end":119359,"line_start":64,"line_end":64,"column_start":1,"column_end":94}},{"value":"/ found.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":119360,"byte_end":119370,"line_start":65,"line_end":65,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"csr","qualname":"::csr","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":4969},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":4154},{"krate":0,"index":4165},{"krate":0,"index":1129},{"krate":0,"index":1135},{"krate":0,"index":1141},{"krate":0,"index":4171},{"krate":0,"index":4175},{"krate":0,"index":4173},{"krate":0,"index":1149},{"krate":0,"index":1157},{"krate":0,"index":4177},{"krate":0,"index":4192},{"krate":0,"index":4186},{"krate":0,"index":4198},{"krate":0,"index":4208},{"krate":0,"index":1178},{"krate":0,"index":1184},{"krate":0,"index":1189},{"krate":0,"index":1195},{"krate":0,"index":1207},{"krate":0,"index":1215},{"krate":0,"index":1222},{"krate":0,"index":1231},{"krate":0,"index":1243},{"krate":0,"index":1250},{"krate":0,"index":1258},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1274},{"krate":0,"index":4214},{"krate":0,"index":4222},{"krate":0,"index":4218},{"krate":0,"index":1275},{"krate":0,"index":1281},{"krate":0,"index":1289},{"krate":0,"index":1297},{"krate":0,"index":1302},{"krate":0,"index":1309},{"krate":0,"index":1315},{"krate":0,"index":1319},{"krate":0,"index":1324},{"krate":0,"index":1332},{"krate":0,"index":1338}],"decl_id":null,"docs":" Compressed Sparse Row (CSR) is a sparse adjacency matrix graph.\n","sig":null,"attributes":[{"value":"/ Compressed Sparse Row (CSR) is a sparse adjacency matrix graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":122412,"byte_end":122479,"line_start":1,"line_end":1,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123044,"byte_end":123053,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"NodeIndex","qualname":"::csr::NodeIndex","value":"Ix","parent":null,"children":[],"decl_id":null,"docs":" Csr node index type, a plain integer.\n","sig":null,"attributes":[{"value":"/ Csr node index type, a plain integer.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":122993,"byte_end":123034,"line_start":20,"line_end":20,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123127,"byte_end":123136,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"EdgeIndex","qualname":"::csr::EdgeIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Csr edge index type, a plain integer.\n","sig":null,"attributes":[{"value":"/ Csr edge index type, a plain integer.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123076,"byte_end":123117,"line_start":22,"line_end":22,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123874,"byte_end":123877,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"Csr","qualname":"::csr::Csr","value":"Csr {  }","parent":null,"children":[{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164}],"decl_id":null,"docs":" Compressed Sparse Row ([`CSR`]) is a sparse adjacency matrix graph.","sig":null,"attributes":[{"value":"/ Compressed Sparse Row ([`CSR`]) is a sparse adjacency matrix graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123188,"byte_end":123259,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123260,"byte_end":123263,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `CSR` is parameterized over:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123264,"byte_end":123296,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123297,"byte_end":123300,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123301,"byte_end":123373,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123374,"byte_end":123425,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123426,"byte_end":123514,"line_start":33,"line_end":33,"column_start":1,"column_end":89}},{"value":"/ - Index type `Ix`, which determines the maximum size of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123515,"byte_end":123585,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123586,"byte_end":123589,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123590,"byte_end":123593,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Using **O(|E| + |V|)** space.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123594,"byte_end":123627,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123628,"byte_end":123631,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Self loops are allowed, no parallel edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123632,"byte_end":123678,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123679,"byte_end":123682,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Fast iteration of the outgoing edges of a vertex.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123683,"byte_end":123736,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123737,"byte_end":123740,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`CSR`]: https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_(CSR,_CRS_or_Yale_format)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":123741,"byte_end":123845,"line_start":43,"line_end":43,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124907,"byte_end":124910,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Csr<N, E, Ty, Ix>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Csr`.\n","sig":null,"attributes":[{"value":"/ Create an empty `Csr`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124869,"byte_end":124895,"line_start":86,"line_end":86,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125706,"byte_end":125716,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"with_nodes","qualname":"<Csr<N, E, Ty, Ix>>::with_nodes","value":"pub fn with_nodes(usize) -> Self where N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Csr`] with `n` nodes. `N` must implement [`Default`] for the weight of each node.","sig":null,"attributes":[{"value":"/ Create a new [`Csr`] with `n` nodes. `N` must implement [`Default`] for the weight of each node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125132,"byte_end":125232,"line_start":98,"line_end":98,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125237,"byte_end":125240,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`Default`]: https://doc.rust-lang.org/nightly/core/default/trait.Default.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125245,"byte_end":125327,"line_start":100,"line_end":100,"column_start":5,"column_end":87}},{"value":"/ [`Csr`]: #struct.Csr.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125332,"byte_end":125361,"line_start":101,"line_end":101,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125366,"byte_end":125369,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125374,"byte_end":125387,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125392,"byte_end":125403,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ use petgraph::csr::Csr;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125408,"byte_end":125435,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125440,"byte_end":125469,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125474,"byte_end":125477,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let graph = Csr::<u8,()>::with_nodes(5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125482,"byte_end":125526,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(graph.node_count(),5);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125531,"byte_end":125568,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(graph.edge_count(),0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125573,"byte_end":125610,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125615,"byte_end":125618,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(graph[0],0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125623,"byte_end":125650,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(graph[4],0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125655,"byte_end":125682,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":125687,"byte_end":125694,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126113,"byte_end":126127,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"EdgesNotSorted","qualname":"::csr::EdgesNotSorted","value":"EdgesNotSorted {  }","parent":null,"children":[{"krate":0,"index":4172}],"decl_id":null,"docs":" Csr creation error: edges were not in sorted order.\n","sig":null,"attributes":[{"value":"/ Csr creation error: edges were not in sorted order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126022,"byte_end":126077,"line_start":130,"line_end":130,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126861,"byte_end":126878,"line_start":158,"line_end":158,"column_start":12,"column_end":29},"name":"from_sorted_edges","qualname":"<Csr<N, E, Directed, Ix>>::from_sorted_edges","value":"pub fn from_sorted_edges<Edge>(&[Edge]) -> Result<Self, EdgesNotSorted> where\nEdge: Clone + IntoWeightedEdge<E, NodeId = NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Csr` from a sorted sequence of edges","sig":null,"attributes":[{"value":"/ Create a new `Csr` from a sorted sequence of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126236,"byte_end":126290,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126295,"byte_end":126298,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Edges **must** be sorted and unique, where the sort order is the default","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126303,"byte_end":126379,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ order for the pair *(u, v)* in Rust (*u* has priority).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126384,"byte_end":126443,"line_start":143,"line_end":143,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126448,"byte_end":126451,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(|E| + |V|)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126456,"byte_end":126494,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126499,"byte_end":126512,"line_start":146,"line_end":146,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126517,"byte_end":126528,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ use petgraph::csr::Csr;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126533,"byte_end":126560,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126565,"byte_end":126594,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126599,"byte_end":126602,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let graph = Csr::<(),()>::from_sorted_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126607,"byte_end":126657,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"/                     (0, 1), (0, 2),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126662,"byte_end":126701,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/                     (1, 0), (1, 2), (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126706,"byte_end":126753,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/                     (2, 0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126758,"byte_end":126789,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/                     (3, 1),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126794,"byte_end":126825,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126830,"byte_end":126837,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126842,"byte_end":126849,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":129891,"byte_end":129901,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Csr<N, E, Ty, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":129965,"byte_end":129975,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Csr<N, E, Ty, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130129,"byte_end":130140,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Csr<N, E, Ty, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130227,"byte_end":130238,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Csr<N, E, Ty, Ix>>::clear_edges","value":"pub fn clear_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[{"value":"/ Remove all edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130195,"byte_end":130215,"line_start":255,"line_end":255,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130553,"byte_end":130561,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Csr<N, E, Ty, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new node with the given weight, returning the corresponding node index.\n","sig":null,"attributes":[{"value":"/ Adds a new node with the given weight, returning the corresponding node index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130459,"byte_end":130541,"line_start":267,"line_end":267,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":131001,"byte_end":131009,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Csr<N, E, Ty, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> bool where\nE: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge was added","sig":null,"attributes":[{"value":"/ Return `true` if the edge was added","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130761,"byte_end":130800,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130805,"byte_end":130808,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If you add all edges in row-major order, the time complexity","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130813,"byte_end":130877,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ is **O(|V|·|E|)** for the whole operation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130882,"byte_end":130929,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130934,"byte_end":130937,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":130942,"byte_end":130989,"line_start":280,"line_end":280,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":132849,"byte_end":132862,"line_start":337,"line_end":337,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Csr<N, E, Ty, Ix>>::contains_edge","value":"pub fn contains_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(log |V|)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(log |V|)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":132742,"byte_end":132778,"line_start":334,"line_end":334,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":132783,"byte_end":132786,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":132791,"byte_end":132837,"line_start":336,"line_end":336,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133495,"byte_end":133505,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"out_degree","qualname":"<Csr<N, E, Ty, Ix>>::out_degree","value":"pub fn out_degree(&Self, NodeIndex<Ix>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133394,"byte_end":133424,"line_start":356,"line_end":356,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133429,"byte_end":133432,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133437,"byte_end":133483,"line_start":358,"line_end":358,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133719,"byte_end":133734,"line_start":367,"line_end":367,"column_start":12,"column_end":27},"name":"neighbors_slice","qualname":"<Csr<N, E, Ty, Ix>>::neighbors_slice","value":"pub fn neighbors_slice(&Self, NodeIndex<Ix>) -> &[NodeIndex<Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133618,"byte_end":133648,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133653,"byte_end":133656,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133661,"byte_end":133707,"line_start":366,"line_end":366,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133925,"byte_end":133936,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"edges_slice","qualname":"<Csr<N, E, Ty, Ix>>::edges_slice","value":"pub fn edges_slice(&Self, NodeIndex<Ix>) -> &[E]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133824,"byte_end":133854,"line_start":371,"line_end":371,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133859,"byte_end":133862,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":133867,"byte_end":133913,"line_start":373,"line_end":373,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134314,"byte_end":134319,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"edges","qualname":"<Csr<N, E, Ty, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134028,"byte_end":134071,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134076,"byte_end":134079,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134084,"byte_end":134126,"line_start":380,"line_end":380,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134131,"byte_end":134178,"line_start":381,"line_end":381,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134183,"byte_end":134186,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134191,"byte_end":134241,"line_start":383,"line_end":383,"column_start":5,"column_end":55}},{"value":"/ Iterator element type is `EdgeReference<E, Ty, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134246,"byte_end":134302,"line_start":384,"line_end":384,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4177},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134618,"byte_end":134623,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"Edges","qualname":"::csr::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4198},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":134836,"byte_end":134849,"line_start":405,"line_end":405,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::csr::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135448,"byte_end":135454,"line_start":429,"line_end":429,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"pub fn weight(&Self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[{"value":"/ Access the edge’s weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135277,"byte_end":135308,"line_start":425,"line_end":425,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135313,"byte_end":135316,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ **NOTE** that this method offers a longer lifetime","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135321,"byte_end":135375,"line_start":427,"line_end":427,"column_start":5,"column_end":59}},{"value":"/ than the trait (unfortunately they don't match yet).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135380,"byte_end":135436,"line_start":428,"line_end":428,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":137167,"byte_end":137181,"line_start":507,"line_end":507,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::csr::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":139223,"byte_end":139232,"line_start":588,"line_end":588,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::csr::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":4217}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141080,"byte_end":141095,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::csr::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150716,"byte_end":150724,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"dijkstra","qualname":"::dijkstra::dijkstra","value":"pub fn dijkstra<G, F, K>(G, G::NodeId, Option<G::NodeId>, F)\n-> HashMap<G::NodeId, K> where G: IntoEdges + Visitable, G::NodeId: Eq + Hash,\nF: FnMut(G::EdgeRef) -> K, K: Measure + Copy","parent":null,"children":[],"decl_id":null,"docs":" \\[Generic\\] Dijkstra's shortest path algorithm.","sig":null,"attributes":[{"value":"/ \\[Generic\\] Dijkstra's shortest path algorithm.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":148909,"byte_end":148960,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":148961,"byte_end":148964,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Compute the length of the shortest path from `start` to every reachable","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":148965,"byte_end":149040,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149041,"byte_end":149050,"line_start":13,"line_end":13,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149051,"byte_end":149054,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The graph should be `Visitable` and implement `IntoEdges`. The function","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149055,"byte_end":149130,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ `edge_cost` should return the cost for a particular edge, which is used","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149131,"byte_end":149206,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ to compute path costs. Edge costs must be non-negative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149207,"byte_end":149266,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149267,"byte_end":149270,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If `goal` is not `None`, then the algorithm terminates once the `goal` node's","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149271,"byte_end":149352,"line_start":19,"line_end":19,"column_start":1,"column_end":82}},{"value":"/ cost is calculated.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149353,"byte_end":149376,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149377,"byte_end":149380,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Returns a `HashMap` that maps `NodeId` to path cost.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149381,"byte_end":149437,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/ # Example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149438,"byte_end":149451,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149452,"byte_end":149463,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149464,"byte_end":149488,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ use petgraph::algo::dijkstra;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149489,"byte_end":149522,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149523,"byte_end":149552,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149553,"byte_end":149587,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149588,"byte_end":149591,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut graph : Graph<(),(),Directed>= Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149592,"byte_end":149648,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/ let a = graph.add_node(()); // node with no weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149649,"byte_end":149703,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/ let b = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149704,"byte_end":149735,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ let c = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149736,"byte_end":149767,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ let d = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149768,"byte_end":149799,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/ let e = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149800,"byte_end":149831,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ let f = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149832,"byte_end":149863,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/ let g = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149864,"byte_end":149895,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ let h = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149896,"byte_end":149927,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ // z will be in another connected component","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149928,"byte_end":149975,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ let z = graph.add_node(());","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":149976,"byte_end":150007,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150008,"byte_end":150011,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ graph.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150012,"byte_end":150042,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     (a, b),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150043,"byte_end":150058,"line_start":43,"line_end":43,"column_start":1,"column_end":16}},{"value":"/     (b, c),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150059,"byte_end":150074,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     (c, d),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150075,"byte_end":150090,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/     (d, a),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150091,"byte_end":150106,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/     (e, f),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150107,"byte_end":150122,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/     (b, e),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150123,"byte_end":150138,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/     (f, g),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150139,"byte_end":150154,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/     (g, h),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150155,"byte_end":150170,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"/     (h, e)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150171,"byte_end":150185,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150186,"byte_end":150193,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ // a ----> b ----> e ----> f","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150194,"byte_end":150226,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/ // ^       |       ^       |","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150227,"byte_end":150259,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/ // |       v       |       v","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150260,"byte_end":150292,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/ // d <---- c       h <---- g","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150293,"byte_end":150325,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150326,"byte_end":150329,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let expected_res: HashMap<NodeIndex, usize> = [","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150330,"byte_end":150381,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/      (a, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150382,"byte_end":150398,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/      (b, 0),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150399,"byte_end":150415,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/      (c, 1),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150416,"byte_end":150432,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/      (d, 2),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150433,"byte_end":150449,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/      (e, 1),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150450,"byte_end":150466,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/      (f, 2),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150467,"byte_end":150483,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/      (g, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150484,"byte_end":150500,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/      (h, 4)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150501,"byte_end":150516,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/     ].iter().cloned().collect();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150517,"byte_end":150553,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ let res = dijkstra(&graph,b,None, |_| 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150554,"byte_end":150599,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(res, expected_res);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150600,"byte_end":150634,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/ // z is not inside res because there is not path from b to z.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150635,"byte_end":150700,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dijkstra.rs","byte_start":150701,"byte_end":150708,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dot","qualname":"::dot","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":4226},{"krate":0,"index":4245},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1403},{"krate":0,"index":1409},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1434}],"decl_id":null,"docs":" Simple graphviz dot file format output.\n","sig":null,"attributes":[{"value":"/ Simple graphviz dot file format output.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152353,"byte_end":152396,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153486,"byte_end":153489,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Dot","qualname":"::dot::Dot","value":"Dot {  }","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"decl_id":null,"docs":" `Dot` implements output to graphviz .dot format for a graph.","sig":null,"attributes":[{"value":"/ `Dot` implements output to graphviz .dot format for a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152466,"byte_end":152530,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152531,"byte_end":152534,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Formatting and options are rather simple, this is mostly intended","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152535,"byte_end":152604,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ for debugging. Exact output may change.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152605,"byte_end":152648,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152649,"byte_end":152652,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152653,"byte_end":152667,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152668,"byte_end":152671,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152672,"byte_end":152679,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152680,"byte_end":152704,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/ use petgraph::dot::{Dot, Config};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152705,"byte_end":152742,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152743,"byte_end":152746,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut graph = Graph::<_, ()>::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152747,"byte_end":152789,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ graph.add_node(\"A\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152790,"byte_end":152814,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ graph.add_node(\"B\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152815,"byte_end":152839,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/ graph.add_node(\"C\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152840,"byte_end":152864,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/ graph.add_node(\"D\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152865,"byte_end":152889,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/ graph.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152890,"byte_end":152920,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152921,"byte_end":152952,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152953,"byte_end":152976,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/     (2, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152977,"byte_end":152992,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":152993,"byte_end":153000,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153001,"byte_end":153004,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ println!(\"{:?}\", Dot::with_config(&graph, &[Config::EdgeNoLabel]));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153005,"byte_end":153076,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153077,"byte_end":153080,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // In this case the output looks like this:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153081,"byte_end":153128,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ //","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153129,"byte_end":153135,"line_start":32,"line_end":32,"column_start":1,"column_end":7}},{"value":"/ // digraph {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153136,"byte_end":153152,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ //     0 [label=\"\\\"A\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153153,"byte_end":153181,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ //     1 [label=\"\\\"B\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153182,"byte_end":153210,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ //     2 [label=\"\\\"C\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153211,"byte_end":153239,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ //     3 [label=\"\\\"D\\\"\"]","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153240,"byte_end":153268,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ //     0 -> 1","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153269,"byte_end":153286,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ //     0 -> 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153287,"byte_end":153304,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/ //     0 -> 3","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153305,"byte_end":153322,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ //     1 -> 2","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153323,"byte_end":153340,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ //     1 -> 3","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153341,"byte_end":153358,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ //     2 -> 3","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153359,"byte_end":153376,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ // }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153377,"byte_end":153385,"line_start":44,"line_end":44,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153386,"byte_end":153389,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // If you need multiple config options, just list them all in the slice.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153390,"byte_end":153466,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153467,"byte_end":153474,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153788,"byte_end":153791,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<Dot>::new","value":"pub fn new(G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with default configuration.\n","sig":null,"attributes":[{"value":"/ Create a `Dot` formatting wrapper with default configuration.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153711,"byte_end":153776,"line_start":61,"line_end":61,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153937,"byte_end":153948,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Dot>::with_config","value":"pub fn with_config(G, &'a [Config]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with custom configuration.\n","sig":null,"attributes":[{"value":"/ Create a `Dot` formatting wrapper with custom configuration.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153861,"byte_end":153925,"line_start":66,"line_end":66,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4227},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154222,"byte_end":154236,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"NodeIndexLabel","qualname":"::dot::Config::NodeIndexLabel","value":"Config::NodeIndexLabel","parent":{"krate":0,"index":4226},"children":[],"decl_id":null,"docs":" Use indices for node labels.\n","sig":null,"attributes":[{"value":"/ Use indices for node labels.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154185,"byte_end":154217,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154279,"byte_end":154293,"line_start":80,"line_end":80,"column_start":5,"column_end":19},"name":"EdgeIndexLabel","qualname":"::dot::Config::EdgeIndexLabel","value":"Config::EdgeIndexLabel","parent":{"krate":0,"index":4226},"children":[],"decl_id":null,"docs":" Use indices for edge labels.\n","sig":null,"attributes":[{"value":"/ Use indices for edge labels.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154242,"byte_end":154274,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4231},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154327,"byte_end":154338,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"EdgeNoLabel","qualname":"::dot::Config::EdgeNoLabel","value":"Config::EdgeNoLabel","parent":{"krate":0,"index":4226},"children":[],"decl_id":null,"docs":" Use no edge labels.\n","sig":null,"attributes":[{"value":"/ Use no edge labels.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154299,"byte_end":154322,"line_start":81,"line_end":81,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4233},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154391,"byte_end":154407,"line_start":84,"line_end":84,"column_start":5,"column_end":21},"name":"GraphContentOnly","qualname":"::dot::Config::GraphContentOnly","value":"Config::GraphContentOnly","parent":{"krate":0,"index":4226},"children":[],"decl_id":null,"docs":" Do not print the graph/digraph string.\n","sig":null,"attributes":[{"value":"/ Do not print the graph/digraph string.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154344,"byte_end":154386,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154432,"byte_end":154443,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"name":"_Incomplete","qualname":"::dot::Config::_Incomplete","value":"Config::_Incomplete(())","parent":{"krate":0,"index":4226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4226},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154172,"byte_end":154178,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Config","qualname":"::dot::Config","value":"pub enum Config {\n\n    /// Use indices for node labels.\n    NodeIndexLabel,\n\n    /// Use indices for edge labels.\n    EdgeIndexLabel,\n\n    /// Use no edge labels.\n    EdgeNoLabel,\n\n    /// Do not print the graph/digraph string.\n    GraphContentOnly,\n\n    #[doc(hidden)]\n    _Incomplete(()),\n}","parent":null,"children":[{"krate":0,"index":4227},{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4233},{"krate":0,"index":4235}],"decl_id":null,"docs":" `Dot` configuration.","sig":null,"attributes":[{"value":"/ `Dot` configuration.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154030,"byte_end":154054,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154055,"byte_end":154058,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This enum does not have an exhaustive definition (will be expanded)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154059,"byte_end":154130,"line_start":74,"line_end":74,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159371,"byte_end":159380,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"DefaultIx","qualname":"::graph_impl::DefaultIx","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The default integer type for graph indices.\n `u32` is the default to reduce the size of the graph's data and improve\n performance in the common case.","sig":null,"attributes":[{"value":"/ The default integer type for graph indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159097,"byte_end":159144,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/ `u32` is the default to reduce the size of the graph's data and improve","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159145,"byte_end":159220,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ performance in the common case.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159221,"byte_end":159256,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159257,"byte_end":159260,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Used for node and edge indices in `Graph` and `StableGraph`, used","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159261,"byte_end":159330,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ for node indices in `Csr`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159331,"byte_end":159361,"line_start":26,"line_end":26,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159576,"byte_end":159585,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"name":"IndexType","qualname":"::graph_impl::IndexType","value":"IndexType: Copy + Default + Hash + Ord + fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"decl_id":null,"docs":" Trait for the unsigned integer type used for node and edge indices.","sig":null,"attributes":[{"value":"/ Trait for the unsigned integer type used for node and edge indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159389,"byte_end":159460,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159461,"byte_end":159464,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Marked `unsafe` because: the trait must faithfully preserve","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159465,"byte_end":159528,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ and convert index values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159529,"byte_end":159558,"line_start":32,"line_end":32,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159647,"byte_end":159650,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"new","qualname":"::graph_impl::IndexType::new","value":"pub fn new(usize) -> Self","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159677,"byte_end":159682,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::IndexType::index","value":"pub fn index(&Self) -> usize","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159707,"byte_end":159710,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"max","qualname":"::graph_impl::IndexType::max","value":"pub fn max() -> Self","parent":{"krate":0,"index":1468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":160883,"byte_end":160892,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"NodeIndex","qualname":"::graph_impl::NodeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Node identifier.\n","sig":null,"attributes":[{"value":"/ Node identifier.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":160781,"byte_end":160801,"line_start":99,"line_end":99,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":160976,"byte_end":160979,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<NodeIndex<Ix>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":160955,"byte_end":160964,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161069,"byte_end":161074,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"index","qualname":"<NodeIndex<Ix>>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161048,"byte_end":161057,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161147,"byte_end":161150,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"end","qualname":"<NodeIndex<Ix>>::end","value":"pub fn end() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161126,"byte_end":161135,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161604,"byte_end":161614,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"node_index","qualname":"::graph_impl::node_index","value":"pub fn node_index<Ix: IndexType>(usize) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `NodeIndex::new`\n","sig":null,"attributes":[{"value":"/ Short version of `NodeIndex::new`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161559,"byte_end":161596,"line_start":136,"line_end":136,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161737,"byte_end":161747,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"edge_index","qualname":"::graph_impl::edge_index","value":"pub fn edge_index<Ix: IndexType>(usize) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `EdgeIndex::new`\n","sig":null,"attributes":[{"value":"/ Short version of `EdgeIndex::new`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161692,"byte_end":161729,"line_start":141,"line_end":141,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4284},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161927,"byte_end":161936,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"EdgeIndex","qualname":"::graph_impl::EdgeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Edge identifier.\n","sig":null,"attributes":[{"value":"/ Edge identifier.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161825,"byte_end":161845,"line_start":146,"line_end":146,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162020,"byte_end":162023,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<EdgeIndex<Ix>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161999,"byte_end":162008,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162113,"byte_end":162118,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"index","qualname":"<EdgeIndex<Ix>>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162092,"byte_end":162101,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162303,"byte_end":162306,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"end","qualname":"<EdgeIndex<Ix>>::end","value":"pub fn end() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An invalid `EdgeIndex` used to denote absence of an edge, for example\n to end an adjacency list.\n","sig":null,"attributes":[{"value":"/ An invalid `EdgeIndex` used to denote absence of an edge, for example","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162170,"byte_end":162243,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ to end an adjacency list.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162248,"byte_end":162277,"line_start":162,"line_end":162,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162282,"byte_end":162291,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163237,"byte_end":163241,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"Node","qualname":"::graph_impl::Node","value":"Node { weight }","parent":null,"children":[{"krate":0,"index":4324},{"krate":0,"index":4325}],"decl_id":null,"docs":" The graph's node type.\n","sig":null,"attributes":[{"value":"/ The graph's node type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163182,"byte_end":163208,"line_start":202,"line_end":202,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163301,"byte_end":163307,"line_start":206,"line_end":206,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Node::weight","value":"N","parent":{"krate":0,"index":4321},"children":[],"decl_id":null,"docs":" Associated node data.\n","sig":null,"attributes":[{"value":"/ Associated node data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163267,"byte_end":163292,"line_start":205,"line_end":205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163647,"byte_end":163656,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Node<N, Ix>>::next_edge","value":"pub fn next_edge(&Self, Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the first edge in the given direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163554,"byte_end":163635,"line_start":220,"line_end":220,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163794,"byte_end":163798,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"name":"Edge","qualname":"::graph_impl::Edge","value":"Edge { weight }","parent":null,"children":[{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4338}],"decl_id":null,"docs":" The graph's edge type.\n","sig":null,"attributes":[{"value":"/ The graph's edge type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163739,"byte_end":163765,"line_start":226,"line_end":226,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163858,"byte_end":163864,"line_start":230,"line_end":230,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Edge::weight","value":"E","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":" Associated edge data.\n","sig":null,"attributes":[{"value":"/ Associated edge data.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163824,"byte_end":163849,"line_start":229,"line_end":229,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164273,"byte_end":164282,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Edge<E, Ix>>::next_edge","value":"pub fn next_edge(&Self, Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the next edge for the given direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164180,"byte_end":164261,"line_start":246,"line_end":246,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164412,"byte_end":164418,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"source","qualname":"<Edge<E, Ix>>::source","value":"pub fn source(&Self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the source node index.\n","sig":null,"attributes":[{"value":"/ Return the source node index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164367,"byte_end":164400,"line_start":251,"line_end":251,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164522,"byte_end":164528,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"target","qualname":"<Edge<E, Ix>>::target","value":"pub fn target(&Self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the target node index.\n","sig":null,"attributes":[{"value":"/ Return the target node index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164477,"byte_end":164510,"line_start":256,"line_end":256,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167556,"byte_end":167561,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"Graph","qualname":"::graph_impl::Graph","value":"Graph {  }","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","sig":null,"attributes":[{"value":"/ `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164585,"byte_end":164675,"line_start":262,"line_end":262,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164676,"byte_end":164679,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ `Graph` is parameterized over:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164680,"byte_end":164714,"line_start":264,"line_end":264,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164715,"byte_end":164718,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164719,"byte_end":164791,"line_start":266,"line_end":266,"column_start":1,"column_end":73}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164792,"byte_end":164843,"line_start":267,"line_end":267,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164844,"byte_end":164932,"line_start":268,"line_end":268,"column_start":1,"column_end":89}},{"value":"/ - Index type `Ix`, which determines the maximum size of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164933,"byte_end":165003,"line_start":269,"line_end":269,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165004,"byte_end":165007,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ The `Graph` is a regular Rust collection and is `Send` and `Sync` (as long","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165008,"byte_end":165086,"line_start":271,"line_end":271,"column_start":1,"column_end":79}},{"value":"/ as associated data `N` and `E` are).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165087,"byte_end":165127,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165128,"byte_end":165131,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ The graph uses **O(|V| + |E|)** space, and allows fast node and edge insert,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165132,"byte_end":165212,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/ efficient graph search and graph algorithms.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165213,"byte_end":165261,"line_start":275,"line_end":275,"column_start":1,"column_end":49}},{"value":"/ It implements **O(e')** edge lookup and edge and node removals, where **e'**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165262,"byte_end":165342,"line_start":276,"line_end":276,"column_start":1,"column_end":81}},{"value":"/ is some local measure of edge count.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165343,"byte_end":165383,"line_start":277,"line_end":277,"column_start":1,"column_end":41}},{"value":"/ Based on the graph datastructure used in rustc.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165384,"byte_end":165435,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165436,"byte_end":165439,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ Here's an example of building a graph with directed edges, and below","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165440,"byte_end":165512,"line_start":280,"line_end":280,"column_start":1,"column_end":73}},{"value":"/ an illustration of how it could be rendered with graphviz (see","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165513,"byte_end":165579,"line_start":281,"line_end":281,"column_start":1,"column_end":67}},{"value":"/ [`Dot`](../dot/struct.Dot.html)):","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165580,"byte_end":165617,"line_start":282,"line_end":282,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165618,"byte_end":165621,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165622,"byte_end":165629,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165630,"byte_end":165654,"line_start":285,"line_end":285,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165655,"byte_end":165658,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ let mut deps = Graph::<&str, &str>::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165659,"byte_end":165705,"line_start":287,"line_end":287,"column_start":1,"column_end":47}},{"value":"/ let pg = deps.add_node(\"petgraph\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165706,"byte_end":165745,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ let fb = deps.add_node(\"fixedbitset\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165746,"byte_end":165788,"line_start":289,"line_end":289,"column_start":1,"column_end":43}},{"value":"/ let qc = deps.add_node(\"quickcheck\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165789,"byte_end":165830,"line_start":290,"line_end":290,"column_start":1,"column_end":42}},{"value":"/ let rand = deps.add_node(\"rand\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165831,"byte_end":165868,"line_start":291,"line_end":291,"column_start":1,"column_end":38}},{"value":"/ let libc = deps.add_node(\"libc\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165869,"byte_end":165906,"line_start":292,"line_end":292,"column_start":1,"column_end":38}},{"value":"/ deps.extend_with_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165907,"byte_end":165936,"line_start":293,"line_end":293,"column_start":1,"column_end":30}},{"value":"/     (pg, fb), (pg, qc),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165937,"byte_end":165964,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"/     (qc, rand), (rand, libc), (qc, libc),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":165965,"byte_end":166010,"line_start":295,"line_end":295,"column_start":1,"column_end":46}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166011,"byte_end":166018,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166019,"byte_end":166026,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166027,"byte_end":166030,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ![graph-example](https://bluss.github.io/ndarray/images/graph-example.svg)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166031,"byte_end":166109,"line_start":299,"line_end":299,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166110,"byte_end":166113,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ ### Graph Indices","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166114,"byte_end":166135,"line_start":301,"line_end":301,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166136,"byte_end":166139,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ The graph maintains indices for nodes and edges, and node and edge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166140,"byte_end":166210,"line_start":303,"line_end":303,"column_start":1,"column_end":71}},{"value":"/ weights may be accessed mutably. Indices range in a compact interval, for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166211,"byte_end":166288,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ example for *n* nodes indices are 0 to *n* - 1 inclusive.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166289,"byte_end":166350,"line_start":305,"line_end":305,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166351,"byte_end":166354,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ `NodeIndex` and `EdgeIndex` are types that act as references to nodes and edges,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166355,"byte_end":166439,"line_start":307,"line_end":307,"column_start":1,"column_end":85}},{"value":"/ but these are only stable across certain operations:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166440,"byte_end":166496,"line_start":308,"line_end":308,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166497,"byte_end":166500,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ * **Removing nodes or edges may shift other indices.** Removing a node will","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166501,"byte_end":166580,"line_start":310,"line_end":310,"column_start":1,"column_end":80}},{"value":"/ force the last node to shift its index to take its place. Similarly,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166581,"byte_end":166653,"line_start":311,"line_end":311,"column_start":1,"column_end":73}},{"value":"/ removing an edge shifts the index of the last edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166654,"byte_end":166709,"line_start":312,"line_end":312,"column_start":1,"column_end":56}},{"value":"/ * Adding nodes or edges keeps indices stable.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166710,"byte_end":166759,"line_start":313,"line_end":313,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166760,"byte_end":166763,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ The `Ix` parameter is `u32` by default. The goal is that you can ignore this parameter","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166764,"byte_end":166854,"line_start":315,"line_end":315,"column_start":1,"column_end":91}},{"value":"/ completely unless you need a very big graph -- then you can use `usize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166855,"byte_end":166931,"line_start":316,"line_end":316,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166932,"byte_end":166935,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ * The fact that the node and edge indices in the graph each are numbered in compact","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":166936,"byte_end":167023,"line_start":318,"line_end":318,"column_start":1,"column_end":88}},{"value":"/ intervals (from 0 to *n* - 1 for *n* nodes) simplifies some graph algorithms.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167024,"byte_end":167105,"line_start":319,"line_end":319,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167106,"byte_end":167109,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ * You can select graph index integer type after the size of the graph. A smaller","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167110,"byte_end":167194,"line_start":321,"line_end":321,"column_start":1,"column_end":85}},{"value":"/ size may have better performance.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167195,"byte_end":167232,"line_start":322,"line_end":322,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167233,"byte_end":167236,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ * Using indices allows mutation while traversing the graph, see `Dfs`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167237,"byte_end":167311,"line_start":324,"line_end":324,"column_start":1,"column_end":75}},{"value":"/ and `.neighbors(a).detach()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167312,"byte_end":167345,"line_start":325,"line_end":325,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167346,"byte_end":167349,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ * You can create several graphs using the equal node indices but with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167350,"byte_end":167423,"line_start":327,"line_end":327,"column_start":1,"column_end":74}},{"value":"/ differing weights or differing edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167424,"byte_end":167465,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167466,"byte_end":167469,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ * Indices don't allow as much compile time checking as references.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167470,"byte_end":167540,"line_start":330,"line_end":330,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167541,"byte_end":167544,"line_start":331,"line_end":331,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167822,"byte_end":167829,"line_start":342,"line_end":342,"column_start":10,"column_end":17},"name":"DiGraph","qualname":"::graph_impl::DiGraph","value":"Graph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with directed edges.","sig":null,"attributes":[{"value":"/ A `Graph` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167687,"byte_end":167721,"line_start":338,"line_end":338,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167722,"byte_end":167725,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ For example, an edge from *1* to *2* is distinct from an edge from *2* to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167726,"byte_end":167803,"line_start":340,"line_end":340,"column_start":1,"column_end":78}},{"value":"/ *1*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167804,"byte_end":167812,"line_start":341,"line_end":341,"column_start":1,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":168027,"byte_end":168034,"line_start":348,"line_end":348,"column_start":10,"column_end":17},"name":"UnGraph","qualname":"::graph_impl::UnGraph","value":"Graph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with undirected edges.","sig":null,"attributes":[{"value":"/ A `Graph` with undirected edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167882,"byte_end":167918,"line_start":344,"line_end":344,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167919,"byte_end":167922,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ For example, an edge between *1* and *2* is equivalent to an edge between","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":167923,"byte_end":168000,"line_start":346,"line_end":346,"column_start":1,"column_end":78}},{"value":"/ *2* and *1*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":168001,"byte_end":168017,"line_start":347,"line_end":347,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170745,"byte_end":170748,"line_start":444,"line_end":444,"column_start":12,"column_end":15},"name":"new","qualname":"<Graph<N, E, Directed>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with directed edges.","sig":null,"attributes":[{"value":"/ Create a new `Graph` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170514,"byte_end":170559,"line_start":440,"line_end":440,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170564,"byte_end":170567,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. Use `Graph::with_capacity` or `Graph::default` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170572,"byte_end":170656,"line_start":442,"line_end":442,"column_start":5,"column_end":89}},{"value":"/ a constructor that is generic in all the type parameters of `Graph`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170661,"byte_end":170733,"line_start":443,"line_end":443,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171161,"byte_end":171175,"line_start":458,"line_end":458,"column_start":12,"column_end":26},"name":"new_undirected","qualname":"<Graph<N, E, Undirected>>::new_undirected","value":"pub fn new_undirected() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with undirected edges.","sig":null,"attributes":[{"value":"/ Create a new `Graph` with undirected edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170928,"byte_end":170975,"line_start":454,"line_end":454,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170980,"byte_end":170983,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. Use `Graph::with_capacity` or `Graph::default` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170988,"byte_end":171072,"line_start":456,"line_end":456,"column_start":5,"column_end":89}},{"value":"/ a constructor that is generic in all the type parameters of `Graph`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171077,"byte_end":171149,"line_start":457,"line_end":457,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171463,"byte_end":171476,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Graph<N, E, Ty, Ix>>::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with estimated capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `Graph` with estimated capacity.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171402,"byte_end":171451,"line_start":472,"line_end":472,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171783,"byte_end":171793,"line_start":484,"line_end":484,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Graph<N, E, Ty, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[{"value":"/ Return the number of nodes (vertices) in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171673,"byte_end":171728,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171733,"byte_end":171736,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171741,"byte_end":171771,"line_start":483,"line_end":483,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171947,"byte_end":171957,"line_start":491,"line_end":491,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Graph<N, E, Ty, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171848,"byte_end":171892,"line_start":488,"line_end":488,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171897,"byte_end":171900,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171905,"byte_end":171935,"line_start":490,"line_end":490,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172086,"byte_end":172097,"line_start":497,"line_end":497,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Graph<N, E, Ty, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"/ Whether the graph has directed edges or not.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172012,"byte_end":172060,"line_start":495,"line_end":495,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172065,"byte_end":172074,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172453,"byte_end":172461,"line_start":509,"line_end":509,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Graph<N, E, Ty, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[{"value":"/ Add a node (also called vertex) with associated data `weight` to the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172152,"byte_end":172231,"line_start":501,"line_end":501,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172236,"byte_end":172239,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172244,"byte_end":172274,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172279,"byte_end":172282,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172287,"byte_end":172324,"line_start":505,"line_end":505,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172329,"byte_end":172332,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the Graph is at the maximum number of nodes for its index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172337,"byte_end":172412,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ type (N/A if usize).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172417,"byte_end":172441,"line_start":508,"line_end":508,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172992,"byte_end":173003,"line_start":524,"line_end":524,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<Graph<N, E, Ty, Ix>>::node_weight","value":"pub fn node_weight(&Self, NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172879,"byte_end":172914,"line_start":521,"line_end":521,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172919,"byte_end":172922,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":172927,"byte_end":172980,"line_start":523,"line_end":523,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173235,"byte_end":173250,"line_start":531,"line_end":531,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`, mutably.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173109,"byte_end":173153,"line_start":528,"line_end":528,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173158,"byte_end":173161,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173166,"byte_end":173223,"line_start":530,"line_end":530,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173920,"byte_end":173928,"line_start":548,"line_end":548,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Graph<N, E, Ty, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[{"value":"/ Add an edge from `a` to `b` to the graph, with its associated","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173372,"byte_end":173437,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/ data `weight`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173442,"byte_end":173460,"line_start":536,"line_end":536,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173465,"byte_end":173468,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173473,"byte_end":173510,"line_start":538,"line_end":538,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173515,"byte_end":173518,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173523,"byte_end":173553,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173558,"byte_end":173561,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173566,"byte_end":173617,"line_start":542,"line_end":542,"column_start":5,"column_end":56}},{"value":"/ **Panics** if the Graph is at the maximum number of edges for its index","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173622,"byte_end":173697,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ type (N/A if usize).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173702,"byte_end":173726,"line_start":544,"line_end":544,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173731,"byte_end":173734,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ **Note:** `Graph` allows adding parallel (“duplicate”) edges. If you want","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173739,"byte_end":173820,"line_start":546,"line_end":546,"column_start":5,"column_end":82}},{"value":"/ to avoid this, use [`.update_edge(a, b, weight)`](#method.update_edge) instead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":173825,"byte_end":173908,"line_start":547,"line_end":547,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175267,"byte_end":175278,"line_start":583,"line_end":583,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<Graph<N, E, Ty, Ix>>::update_edge","value":"pub fn update_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E)\n-> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[{"value":"/ Add or update an edge from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":174888,"byte_end":174930,"line_start":574,"line_end":574,"column_start":5,"column_end":47}},{"value":"/ If the edge already exists, its weight is updated.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":174935,"byte_end":174989,"line_start":575,"line_end":575,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":174994,"byte_end":174997,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Return the index of the affected edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175002,"byte_end":175044,"line_start":577,"line_end":577,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175049,"byte_end":175052,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175057,"byte_end":175124,"line_start":579,"line_end":579,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175129,"byte_end":175195,"line_start":580,"line_end":580,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175200,"byte_end":175203,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175208,"byte_end":175255,"line_start":582,"line_end":582,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175703,"byte_end":175714,"line_start":596,"line_end":596,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight","value":"pub fn edge_weight(&Self, EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175590,"byte_end":175625,"line_start":593,"line_end":593,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175630,"byte_end":175633,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[e]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175638,"byte_end":175691,"line_start":595,"line_end":595,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175948,"byte_end":175963,"line_start":603,"line_end":603,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`, mutably.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175822,"byte_end":175866,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175871,"byte_end":175874,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[e]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":175879,"byte_end":175936,"line_start":602,"line_end":602,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176146,"byte_end":176160,"line_start":608,"line_end":608,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<Graph<N, E, Ty, Ix>>::edge_endpoints","value":"pub fn edge_endpoints(&Self, EdgeIndex<Ix>)\n-> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[{"value":"/ Access the source and target nodes for `e`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176087,"byte_end":176134,"line_start":607,"line_end":607,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":177008,"byte_end":177019,"line_start":626,"line_end":626,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<Graph<N, E, Ty, Ix>>::remove_node","value":"pub fn remove_node(&mut Self, NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[{"value":"/ Remove `a` from the graph if it exists, and return its weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176338,"byte_end":176404,"line_start":614,"line_end":614,"column_start":5,"column_end":71}},{"value":"/ If it doesn't exist in the graph, return `None`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176409,"byte_end":176461,"line_start":615,"line_end":615,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176466,"byte_end":176469,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Apart from `a`, this invalidates the last node index in the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176474,"byte_end":176543,"line_start":617,"line_end":617,"column_start":5,"column_end":74}},{"value":"/ (that node will adopt the removed node index). Edge indices are","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176548,"byte_end":176615,"line_start":618,"line_end":618,"column_start":5,"column_end":72}},{"value":"/ invalidated as they would be following the removal of each edge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176620,"byte_end":176687,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/ with an endpoint in `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176692,"byte_end":176720,"line_start":620,"line_end":620,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176725,"byte_end":176728,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of affected","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176733,"byte_end":176803,"line_start":622,"line_end":622,"column_start":5,"column_end":75}},{"value":"/ edges, including *n* calls to `.remove_edge()` where *n* is the number","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176808,"byte_end":176882,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ of edges with an endpoint in `a`, and including the edges with an","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176887,"byte_end":176956,"line_start":624,"line_end":624,"column_start":5,"column_end":74}},{"value":"/ endpoint in the displaced node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":176961,"byte_end":176996,"line_start":625,"line_end":625,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180345,"byte_end":180356,"line_start":715,"line_end":715,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<Graph<N, E, Ty, Ix>>::remove_edge","value":"pub fn remove_edge(&mut Self, EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[{"value":"/ Remove an edge and return its edge weight, or `None` if it didn't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":179945,"byte_end":180021,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180026,"byte_end":180029,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ Apart from `e`, this invalidates the last edge index in the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180034,"byte_end":180103,"line_start":710,"line_end":710,"column_start":5,"column_end":74}},{"value":"/ (that edge will adopt the removed edge index).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180108,"byte_end":180158,"line_start":711,"line_end":711,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180163,"byte_end":180166,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the size of four particular edge lists, for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180171,"byte_end":180262,"line_start":713,"line_end":713,"column_start":5,"column_end":96}},{"value":"/ the vertices of `e` and the vertices of another affected edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":180267,"byte_end":180333,"line_start":714,"line_end":714,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182124,"byte_end":182133,"line_start":759,"line_end":759,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<Graph<N, E, Ty, Ix>>::neighbors","value":"pub fn neighbors(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181639,"byte_end":181706,"line_start":747,"line_end":747,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181711,"byte_end":181714,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181719,"byte_end":181761,"line_start":749,"line_end":749,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181766,"byte_end":181811,"line_start":750,"line_end":750,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181816,"byte_end":181819,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181824,"byte_end":181885,"line_start":752,"line_end":752,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181890,"byte_end":181935,"line_start":753,"line_end":753,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181940,"byte_end":181943,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":181948,"byte_end":182020,"line_start":755,"line_end":755,"column_start":5,"column_end":77}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182025,"byte_end":182055,"line_start":756,"line_end":756,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182060,"byte_end":182063,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182068,"byte_end":182112,"line_start":758,"line_end":758,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183162,"byte_end":183180,"line_start":782,"line_end":782,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, NodeIndex<Ix>, Direction)\n-> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182237,"byte_end":182311,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ `a`, in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182316,"byte_end":182352,"line_start":764,"line_end":764,"column_start":5,"column_end":41}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182357,"byte_end":182436,"line_start":765,"line_end":765,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182441,"byte_end":182444,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182449,"byte_end":182498,"line_start":767,"line_end":767,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182503,"byte_end":182550,"line_start":768,"line_end":768,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182555,"byte_end":182600,"line_start":769,"line_end":769,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182605,"byte_end":182608,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182613,"byte_end":182674,"line_start":771,"line_end":771,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182679,"byte_end":182724,"line_start":772,"line_end":772,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182729,"byte_end":182732,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ For a `Directed` graph, neighbors are listed in reverse order of their","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182737,"byte_end":182811,"line_start":774,"line_end":774,"column_start":5,"column_end":79}},{"value":"/ addition to the graph, so the most recently added edge's neighbor is","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182816,"byte_end":182888,"line_start":775,"line_end":775,"column_start":5,"column_end":77}},{"value":"/ listed first. The order in an `Undirected` graph is arbitrary.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182893,"byte_end":182959,"line_start":776,"line_end":776,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182964,"byte_end":182967,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_directed(a, dir).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":182972,"byte_end":183058,"line_start":778,"line_end":778,"column_start":5,"column_end":91}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183063,"byte_end":183093,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183098,"byte_end":183101,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183106,"byte_end":183150,"line_start":781,"line_end":781,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184090,"byte_end":184110,"line_start":806,"line_end":806,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_undirected","value":"pub fn neighbors_undirected(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183493,"byte_end":183567,"line_start":792,"line_end":792,"column_start":5,"column_end":79}},{"value":"/ `a`, in either direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183572,"byte_end":183601,"line_start":793,"line_end":793,"column_start":5,"column_end":34}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183606,"byte_end":183685,"line_start":794,"line_end":794,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183690,"byte_end":183693,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ - `Directed` and `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183698,"byte_end":183758,"line_start":796,"line_end":796,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183763,"byte_end":183766,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183771,"byte_end":183832,"line_start":798,"line_end":798,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183837,"byte_end":183882,"line_start":799,"line_end":799,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183887,"byte_end":183890,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_undirected(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183895,"byte_end":183978,"line_start":801,"line_end":801,"column_start":5,"column_end":88}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":183983,"byte_end":184013,"line_start":802,"line_end":802,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184018,"byte_end":184021,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184026,"byte_end":184070,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184075,"byte_end":184078,"line_start":805,"line_end":805,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184715,"byte_end":184720,"line_start":824,"line_end":824,"column_start":12,"column_end":17},"name":"edges","qualname":"<Graph<N, E, Ty, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184422,"byte_end":184465,"line_start":817,"line_end":817,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184470,"byte_end":184473,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184478,"byte_end":184520,"line_start":819,"line_end":819,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184525,"byte_end":184572,"line_start":820,"line_end":820,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184577,"byte_end":184580,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184585,"byte_end":184646,"line_start":822,"line_end":822,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184651,"byte_end":184703,"line_start":823,"line_end":823,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185380,"byte_end":185394,"line_start":839,"line_end":839,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<Graph<N, E, Ty, Ix>>::edges_directed","value":"pub fn edges_directed(&Self, NodeIndex<Ix>, Direction) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`, in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184820,"byte_end":184891,"line_start":828,"line_end":828,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184896,"byte_end":184899,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184904,"byte_end":184953,"line_start":830,"line_end":830,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":184958,"byte_end":185005,"line_start":831,"line_end":831,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`, `Outgoing`: All edges connected to `a`, with `a` being the source of each","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185010,"byte_end":185103,"line_start":832,"line_end":832,"column_start":5,"column_end":98}},{"value":"/   edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185108,"byte_end":185119,"line_start":833,"line_end":833,"column_start":5,"column_end":16}},{"value":"/ - `Undirected`, `Incoming`: All edges connected to `a`, with `a` being the target of each","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185124,"byte_end":185217,"line_start":834,"line_end":834,"column_start":5,"column_end":98}},{"value":"/   edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185222,"byte_end":185233,"line_start":835,"line_end":835,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185238,"byte_end":185241,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node `a` doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185246,"byte_end":185311,"line_start":837,"line_end":837,"column_start":5,"column_end":70}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185316,"byte_end":185368,"line_start":838,"line_end":838,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186024,"byte_end":186040,"line_start":858,"line_end":858,"column_start":12,"column_end":28},"name":"edges_connecting","qualname":"<Graph<N, E, Ty, Ix>>::edges_connecting","value":"pub fn edges_connecting(&Self, NodeIndex<Ix>, NodeIndex<Ix>)\n-> EdgesConnecting<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all the edges connecting `a` and `b`.","sig":null,"attributes":[{"value":"/ Return an iterator over all the edges connecting `a` and `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185775,"byte_end":185840,"line_start":852,"line_end":852,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185845,"byte_end":185848,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185853,"byte_end":185895,"line_start":854,"line_end":854,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185900,"byte_end":185947,"line_start":855,"line_end":855,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185952,"byte_end":185955,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":185960,"byte_end":186012,"line_start":857,"line_end":857,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186525,"byte_end":186538,"line_start":874,"line_end":874,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Graph<N, E, Ty, Ix>>::contains_edge","value":"pub fn contains_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lookup if there is an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup if there is an edge from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186315,"byte_end":186362,"line_start":870,"line_end":870,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186367,"byte_end":186370,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186375,"byte_end":186442,"line_start":872,"line_end":872,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186447,"byte_end":186513,"line_start":873,"line_end":873,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186840,"byte_end":186849,"line_start":882,"line_end":882,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<Graph<N, E, Ty, Ix>>::find_edge","value":"pub fn find_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup an edge from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186642,"byte_end":186677,"line_start":878,"line_end":878,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186682,"byte_end":186685,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186690,"byte_end":186757,"line_start":880,"line_end":880,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":186762,"byte_end":186828,"line_start":881,"line_end":881,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187945,"byte_end":187965,"line_start":915,"line_end":915,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<Graph<N, E, Ty, Ix>>::find_edge_undirected","value":"pub fn find_edge_undirected(&Self, NodeIndex<Ix>, NodeIndex<Ix>)\n-> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[{"value":"/ Lookup an edge between `a` and `b`, in either direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187602,"byte_end":187662,"line_start":908,"line_end":908,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187667,"byte_end":187670,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ If the graph is undirected, then this is equivalent to `.find_edge()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187675,"byte_end":187749,"line_start":910,"line_end":910,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187754,"byte_end":187757,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Return the edge index and its directionality, with `Outgoing` meaning","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187762,"byte_end":187835,"line_start":912,"line_end":912,"column_start":5,"column_end":78}},{"value":"/ from `a` to `b` and `Incoming` the reverse,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187840,"byte_end":187887,"line_start":913,"line_end":913,"column_start":5,"column_end":52}},{"value":"/ or `None` if the edge does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":187892,"byte_end":187933,"line_start":914,"line_end":914,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189267,"byte_end":189276,"line_start":955,"line_end":955,"column_start":12,"column_end":21},"name":"externals","qualname":"<Graph<N, E, Ty, Ix>>::externals","value":"pub fn externals(&Self, Direction) -> Externals<, N, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over either the nodes without edges to them\n (`Incoming`) or from them (`Outgoing`).","sig":null,"attributes":[{"value":"/ Return an iterator over either the nodes without edges to them","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":188751,"byte_end":188817,"line_start":944,"line_end":944,"column_start":5,"column_end":71}},{"value":"/ (`Incoming`) or from them (`Outgoing`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":188822,"byte_end":188865,"line_start":945,"line_end":945,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":188870,"byte_end":188873,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ An *internal* node has both incoming and outgoing edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":188878,"byte_end":188938,"line_start":947,"line_end":947,"column_start":5,"column_end":65}},{"value":"/ The nodes in `.externals(Incoming)` are the source nodes and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":188943,"byte_end":189007,"line_start":948,"line_end":948,"column_start":5,"column_end":69}},{"value":"/ `.externals(Outgoing)` are the sinks of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189012,"byte_end":189066,"line_start":949,"line_end":949,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189071,"byte_end":189074,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ For a graph with undirected edges, both the sinks and the sources are","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189079,"byte_end":189152,"line_start":951,"line_end":951,"column_start":5,"column_end":78}},{"value":"/ just the nodes without edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189157,"byte_end":189190,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189195,"byte_end":189198,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ The whole iteration computes in **O(|V|)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189203,"byte_end":189255,"line_start":954,"line_end":954,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189928,"byte_end":189940,"line_start":975,"line_end":975,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<Graph<N, E, Ty, Ix>>::node_indices","value":"pub fn node_indices(&Self) -> NodeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph.","sig":null,"attributes":[{"value":"/ Return an iterator over the node indices of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189462,"byte_end":189520,"line_start":963,"line_end":963,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189525,"byte_end":189528,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ For example, in a rare case where a graph algorithm were not applicable,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189533,"byte_end":189609,"line_start":965,"line_end":965,"column_start":5,"column_end":81}},{"value":"/ the following code will iterate through all nodes to find a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189614,"byte_end":189677,"line_start":966,"line_end":966,"column_start":5,"column_end":68}},{"value":"/ specific index:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189682,"byte_end":189701,"line_start":967,"line_end":967,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189706,"byte_end":189709,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189714,"byte_end":189721,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189726,"byte_end":189752,"line_start":970,"line_end":970,"column_start":5,"column_end":31}},{"value":"/ # let mut g = Graph::<&str, i32>::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189757,"byte_end":189801,"line_start":971,"line_end":971,"column_start":5,"column_end":49}},{"value":"/ # g.add_node(\"book\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189806,"byte_end":189831,"line_start":972,"line_end":972,"column_start":5,"column_end":30}},{"value":"/ let index = g.node_indices().find(|i| g[*i] == \"book\").unwrap();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189836,"byte_end":189904,"line_start":973,"line_end":973,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":189909,"byte_end":189916,"line_start":974,"line_end":974,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190261,"byte_end":190277,"line_start":986,"line_end":986,"column_start":12,"column_end":28},"name":"node_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weights_mut","value":"pub fn node_weights_mut(&mut Self) -> NodeWeightsMut<, N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all node weights.","sig":null,"attributes":[{"value":"/ Return an iterator yielding mutable access to all node weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190078,"byte_end":190145,"line_start":982,"line_end":982,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190150,"byte_end":190153,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ The order in which weights are yielded matches the order of their","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190158,"byte_end":190227,"line_start":984,"line_end":984,"column_start":5,"column_end":74}},{"value":"/ node indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190232,"byte_end":190249,"line_start":985,"line_end":985,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190473,"byte_end":190485,"line_start":993,"line_end":993,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<Graph<N, E, Ty, Ix>>::edge_indices","value":"pub fn edge_indices(&Self) -> EdgeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the edge indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the edge indices of the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190404,"byte_end":190461,"line_start":992,"line_end":992,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190756,"byte_end":190771,"line_start":1003,"line_end":1003,"column_start":12,"column_end":27},"name":"edge_references","qualname":"<Graph<N, E, Ty, Ix>>::edge_references","value":"pub fn edge_references(&Self) -> EdgeReferences<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over all edges, in indexed order.","sig":null,"attributes":[{"value":"/ Create an iterator over all edges, in indexed order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190623,"byte_end":190679,"line_start":1000,"line_end":1000,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190684,"byte_end":190687,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190692,"byte_end":190744,"line_start":1002,"line_end":1002,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191084,"byte_end":191100,"line_start":1013,"line_end":1013,"column_start":12,"column_end":28},"name":"edge_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weights_mut","value":"pub fn edge_weights_mut(&mut Self) -> EdgeWeightsMut<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all edge weights.","sig":null,"attributes":[{"value":"/ Return an iterator yielding mutable access to all edge weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190901,"byte_end":190968,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190973,"byte_end":190976,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ The order in which weights are yielded matches the order of their","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":190981,"byte_end":191050,"line_start":1011,"line_end":1011,"column_start":5,"column_end":74}},{"value":"/ edge indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191055,"byte_end":191072,"line_start":1012,"line_end":1012,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191393,"byte_end":191402,"line_start":1023,"line_end":1023,"column_start":12,"column_end":21},"name":"raw_nodes","qualname":"<Graph<N, E, Ty, Ix>>::raw_nodes","value":"pub fn raw_nodes(&Self) -> &[Node<N, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal node array.\n","sig":null,"attributes":[{"value":"/ Access the internal node array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191346,"byte_end":191381,"line_start":1022,"line_end":1022,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191508,"byte_end":191517,"line_start":1028,"line_end":1028,"column_start":12,"column_end":21},"name":"raw_edges","qualname":"<Graph<N, E, Ty, Ix>>::raw_edges","value":"pub fn raw_edges(&Self) -> &[Edge<E, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal edge array.\n","sig":null,"attributes":[{"value":"/ Access the internal edge array.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191461,"byte_end":191496,"line_start":1027,"line_end":1027,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191654,"byte_end":191670,"line_start":1033,"line_end":1033,"column_start":12,"column_end":28},"name":"into_nodes_edges","qualname":"<Graph<N, E, Ty, Ix>>::into_nodes_edges","value":"pub fn into_nodes_edges(Self) -> (Vec<Node<N, Ix>>, Vec<Edge<E, Ix>>)","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into a vector of Nodes and a vector of Edges\n","sig":null,"attributes":[{"value":"/ Convert the graph into a vector of Nodes and a vector of Edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191576,"byte_end":191642,"line_start":1032,"line_end":1032,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191856,"byte_end":191866,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"first_edge","qualname":"<Graph<N, E, Ty, Ix>>::first_edge","value":"pub fn first_edge(&Self, NodeIndex<Ix>, Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the first edge in the given direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":191763,"byte_end":191844,"line_start":1037,"line_end":1037,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192355,"byte_end":192364,"line_start":1053,"line_end":1053,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Graph<N, E, Ty, Ix>>::next_edge","value":"pub fn next_edge(&Self, EdgeIndex<Ix>, Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the next edge for the given direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192262,"byte_end":192343,"line_start":1052,"line_end":1052,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193894,"byte_end":193909,"line_start":1100,"line_end":1100,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Graph<N, E, Ty, Ix>>::index_twice_mut","value":"pub fn index_twice_mut<T, U>(&mut Self, T, U)\n-> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output) where\nSelf: IndexMut<T> + IndexMut<U>, T: GraphIndex, U: GraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[{"value":"/ Index the `Graph` by two indices, any combination of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192760,"byte_end":192816,"line_start":1067,"line_end":1067,"column_start":5,"column_end":61}},{"value":"/ node or edge indices is fine.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192821,"byte_end":192854,"line_start":1068,"line_end":1068,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192859,"byte_end":192862,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the indices are equal or if they are out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192867,"byte_end":192936,"line_start":1070,"line_end":1070,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192941,"byte_end":192944,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192949,"byte_end":192956,"line_start":1072,"line_end":1072,"column_start":5,"column_end":12}},{"value":"/ use petgraph::{Graph, Incoming};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":192961,"byte_end":192997,"line_start":1073,"line_end":1073,"column_start":5,"column_end":41}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193002,"byte_end":193031,"line_start":1074,"line_end":1074,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193036,"byte_end":193039,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ let mut gr = Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193044,"byte_end":193074,"line_start":1076,"line_end":1076,"column_start":5,"column_end":35}},{"value":"/ let a = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193079,"byte_end":193107,"line_start":1077,"line_end":1077,"column_start":5,"column_end":33}},{"value":"/ let b = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193112,"byte_end":193140,"line_start":1078,"line_end":1078,"column_start":5,"column_end":33}},{"value":"/ let c = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193145,"byte_end":193173,"line_start":1079,"line_end":1079,"column_start":5,"column_end":33}},{"value":"/ gr.add_edge(a, b, 3.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193178,"byte_end":193204,"line_start":1080,"line_end":1080,"column_start":5,"column_end":31}},{"value":"/ gr.add_edge(b, c, 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193209,"byte_end":193235,"line_start":1081,"line_end":1081,"column_start":5,"column_end":31}},{"value":"/ gr.add_edge(c, b, 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193240,"byte_end":193266,"line_start":1082,"line_end":1082,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193271,"byte_end":193274,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ // walk the graph and sum incoming edges into the node weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193279,"byte_end":193344,"line_start":1084,"line_end":1084,"column_start":5,"column_end":70}},{"value":"/ let mut dfs = Dfs::new(&gr, a);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193349,"byte_end":193384,"line_start":1085,"line_end":1085,"column_start":5,"column_end":40}},{"value":"/ while let Some(node) = dfs.next(&gr) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193389,"byte_end":193431,"line_start":1086,"line_end":1086,"column_start":5,"column_end":47}},{"value":"/     // use a walker -- a detached neighbors iterator","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193436,"byte_end":193492,"line_start":1087,"line_end":1087,"column_start":5,"column_end":61}},{"value":"/     let mut edges = gr.neighbors_directed(node, Incoming).detach();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193497,"byte_end":193568,"line_start":1088,"line_end":1088,"column_start":5,"column_end":76}},{"value":"/     while let Some(edge) = edges.next_edge(&gr) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193573,"byte_end":193626,"line_start":1089,"line_end":1089,"column_start":5,"column_end":58}},{"value":"/         let (nw, ew) = gr.index_twice_mut(node, edge);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193631,"byte_end":193689,"line_start":1090,"line_end":1090,"column_start":5,"column_end":63}},{"value":"/         *nw += *ew;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193694,"byte_end":193717,"line_start":1091,"line_end":1091,"column_start":5,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193722,"byte_end":193731,"line_start":1092,"line_end":1092,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193736,"byte_end":193741,"line_start":1093,"line_end":1093,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193746,"byte_end":193749,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ // check the result","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193754,"byte_end":193777,"line_start":1095,"line_end":1095,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(gr[a], 0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193782,"byte_end":193808,"line_start":1096,"line_end":1096,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(gr[b], 4.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193813,"byte_end":193839,"line_start":1097,"line_end":1097,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(gr[c], 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193844,"byte_end":193870,"line_start":1098,"line_end":1098,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":193875,"byte_end":193882,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":194618,"byte_end":194625,"line_start":1126,"line_end":1126,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Graph<N, E, Ty, Ix>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the direction of all edges\n","sig":null,"attributes":[{"value":"/ Reverse the direction of all edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":194568,"byte_end":194606,"line_start":1125,"line_end":1125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195007,"byte_end":195012,"line_start":1140,"line_end":1140,"column_start":12,"column_end":17},"name":"clear","qualname":"<Graph<N, E, Ty, Ix>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":194965,"byte_end":194995,"line_start":1139,"line_end":1139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195125,"byte_end":195136,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Graph<N, E, Ty, Ix>>::clear_edges","value":"pub fn clear_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[{"value":"/ Remove all edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195093,"byte_end":195113,"line_start":1145,"line_end":1145,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195370,"byte_end":195378,"line_start":1154,"line_end":1154,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Graph<N, E, Ty, Ix>>::capacity","value":"pub fn capacity(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[{"value":"/ Return the current node and edge capacity of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195299,"byte_end":195358,"line_start":1153,"line_end":1153,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195707,"byte_end":195720,"line_start":1162,"line_end":1162,"column_start":12,"column_end":25},"name":"reserve_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_nodes","value":"pub fn reserve_nodes(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more nodes to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more nodes to be inserted in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195472,"byte_end":195548,"line_start":1158,"line_end":1158,"column_start":5,"column_end":81}},{"value":"/ the graph. Graph may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195553,"byte_end":195629,"line_start":1159,"line_end":1159,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195634,"byte_end":195637,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195642,"byte_end":195695,"line_start":1161,"line_end":1161,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196039,"byte_end":196052,"line_start":1170,"line_end":1170,"column_start":12,"column_end":25},"name":"reserve_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_edges","value":"pub fn reserve_edges(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more edges to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more edges to be inserted in","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195804,"byte_end":195880,"line_start":1166,"line_end":1166,"column_start":5,"column_end":81}},{"value":"/ the graph. Graph may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195885,"byte_end":195961,"line_start":1167,"line_end":1167,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195966,"byte_end":195969,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":195974,"byte_end":196027,"line_start":1169,"line_end":1169,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196454,"byte_end":196473,"line_start":1181,"line_end":1181,"column_start":12,"column_end":31},"name":"reserve_exact_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_nodes","value":"pub fn reserve_exact_nodes(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more nodes to be\n inserted in the graph. Does nothing if the capacity is already\n sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more nodes to be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196136,"byte_end":196211,"line_start":1174,"line_end":1174,"column_start":5,"column_end":80}},{"value":"/ inserted in the graph. Does nothing if the capacity is already","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196216,"byte_end":196282,"line_start":1175,"line_end":1175,"column_start":5,"column_end":71}},{"value":"/ sufficient.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196287,"byte_end":196302,"line_start":1176,"line_end":1176,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196307,"byte_end":196310,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ Prefer `reserve_nodes` if future insertions are expected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196315,"byte_end":196376,"line_start":1178,"line_end":1178,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196381,"byte_end":196384,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196389,"byte_end":196442,"line_start":1180,"line_end":1180,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196881,"byte_end":196900,"line_start":1192,"line_end":1192,"column_start":12,"column_end":31},"name":"reserve_exact_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_edges","value":"pub fn reserve_exact_edges(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more edges to be\n inserted in the graph.\n Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more edges to be","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196563,"byte_end":196638,"line_start":1185,"line_end":1185,"column_start":5,"column_end":80}},{"value":"/ inserted in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196643,"byte_end":196669,"line_start":1186,"line_end":1186,"column_start":5,"column_end":31}},{"value":"/ Does nothing if the capacity is already sufficient.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196674,"byte_end":196729,"line_start":1187,"line_end":1187,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196734,"byte_end":196737,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Prefer `reserve_edges` if future insertions are expected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196742,"byte_end":196803,"line_start":1189,"line_end":1189,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196808,"byte_end":196811,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196816,"byte_end":196869,"line_start":1191,"line_end":1191,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197082,"byte_end":197101,"line_start":1197,"line_end":1197,"column_start":12,"column_end":31},"name":"shrink_to_fit_nodes","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_nodes","value":"pub fn shrink_to_fit_nodes(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying nodes collection as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the underlying nodes collection as much as possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":196990,"byte_end":197070,"line_start":1196,"line_end":1196,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197254,"byte_end":197273,"line_start":1202,"line_end":1202,"column_start":12,"column_end":31},"name":"shrink_to_fit_edges","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_edges","value":"pub fn shrink_to_fit_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying edges collection as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the underlying edges collection as much as possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197162,"byte_end":197242,"line_start":1201,"line_end":1201,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197404,"byte_end":197417,"line_start":1207,"line_end":1207,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the graph as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the graph as much as possible.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197334,"byte_end":197392,"line_start":1206,"line_end":1206,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197816,"byte_end":197828,"line_start":1219,"line_end":1219,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<Graph<N, E, Ty, Ix>>::retain_nodes","value":"pub fn retain_nodes<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all nodes that return `true` from the `visit` closure,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197514,"byte_end":197577,"line_start":1212,"line_end":1212,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197582,"byte_end":197604,"line_start":1213,"line_end":1213,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197609,"byte_end":197612,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197617,"byte_end":197680,"line_start":1215,"line_end":1215,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197685,"byte_end":197742,"line_start":1216,"line_end":1216,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197747,"byte_end":197750,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ The order nodes are visited is not specified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":197755,"byte_end":197804,"line_start":1218,"line_end":1218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198485,"byte_end":198497,"line_start":1239,"line_end":1239,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<Graph<N, E, Ty, Ix>>::retain_edges","value":"pub fn retain_edges<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, EdgeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all edges that return `true` from the `visit` closure,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198183,"byte_end":198246,"line_start":1232,"line_end":1232,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198251,"byte_end":198273,"line_start":1233,"line_end":1233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198278,"byte_end":198281,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198286,"byte_end":198349,"line_start":1235,"line_end":1235,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198354,"byte_end":198411,"line_start":1236,"line_end":1236,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198416,"byte_end":198419,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ The order edges are visited is not specified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198424,"byte_end":198473,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199368,"byte_end":199378,"line_start":1269,"line_end":1269,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<Graph<N, E, Ty, Ix>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `Graph` from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198852,"byte_end":198903,"line_start":1252,"line_end":1252,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198908,"byte_end":198911,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198916,"byte_end":198963,"line_start":1254,"line_end":1254,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":198968,"byte_end":199025,"line_start":1255,"line_end":1255,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199030,"byte_end":199073,"line_start":1256,"line_end":1256,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199078,"byte_end":199081,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199086,"byte_end":199142,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199147,"byte_end":199150,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199155,"byte_end":199162,"line_start":1260,"line_end":1260,"column_start":5,"column_end":12}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199167,"byte_end":199191,"line_start":1261,"line_end":1261,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199196,"byte_end":199199,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ let gr = Graph::<(), i32>::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199204,"byte_end":199248,"line_start":1263,"line_end":1263,"column_start":5,"column_end":49}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199253,"byte_end":199284,"line_start":1264,"line_end":1264,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199289,"byte_end":199312,"line_start":1265,"line_end":1265,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199317,"byte_end":199332,"line_start":1266,"line_end":1266,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199337,"byte_end":199344,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199349,"byte_end":199356,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199978,"byte_end":199995,"line_start":1288,"line_end":1288,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<Graph<N, E, Ty, Ix>>::extend_with_edges","value":"pub fn extend_with_edges<I>(&mut Self, I) where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[{"value":"/ Extend the graph from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199680,"byte_end":199727,"line_start":1281,"line_end":1281,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199732,"byte_end":199735,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199740,"byte_end":199787,"line_start":1283,"line_end":1283,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199792,"byte_end":199849,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199854,"byte_end":199897,"line_start":1285,"line_end":1285,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199902,"byte_end":199905,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":199910,"byte_end":199966,"line_start":1287,"line_end":1287,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":200898,"byte_end":200901,"line_start":1315,"line_end":1315,"column_start":12,"column_end":15},"name":"map","qualname":"<Graph<N, E, Ty, Ix>>::map","value":"pub fn map<'a, F, G, N2, E2>(&'a Self, F, G) -> Graph<N2, E2, Ty, Ix> where\nF: FnMut(NodeIndex<Ix>, &'a N) -> N2, G: FnMut(EdgeIndex<Ix>, &'a E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[{"value":"/ Create a new `Graph` by mapping node and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":200701,"byte_end":200745,"line_start":1310,"line_end":1310,"column_start":5,"column_end":49}},{"value":"/ edge weights to new values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":200750,"byte_end":200781,"line_start":1311,"line_end":1311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":200786,"byte_end":200789,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the same structure and the same","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":200794,"byte_end":200853,"line_start":1313,"line_end":1313,"column_start":5,"column_end":64}},{"value":"/ graph indices as `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":200858,"byte_end":200886,"line_start":1314,"line_end":1314,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":202207,"byte_end":202217,"line_start":1349,"line_end":1349,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Graph<N, E, Ty, Ix>>::filter_map","value":"pub fn filter_map<'a, F, G, N2, E2>(&'a Self, F, G) -> Graph<N2, E2, Ty, Ix>\nwhere F: FnMut(NodeIndex<Ix>, &'a N) -> Option<N2>,\nG: FnMut(EdgeIndex<Ix>, &'a E) -> Option<E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[{"value":"/ Create a new `Graph` by mapping nodes and edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201606,"byte_end":201658,"line_start":1337,"line_end":1337,"column_start":5,"column_end":57}},{"value":"/ A node or edge may be mapped to `None` to exclude it from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201663,"byte_end":201724,"line_start":1338,"line_end":1338,"column_start":5,"column_end":66}},{"value":"/ the resulting graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201729,"byte_end":201753,"line_start":1339,"line_end":1339,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201758,"byte_end":201761,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ Nodes are mapped first with the `node_map` closure, then","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201766,"byte_end":201826,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/ `edge_map` is called for the edges that have not had any endpoint","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201831,"byte_end":201900,"line_start":1342,"line_end":1342,"column_start":5,"column_end":74}},{"value":"/ removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201905,"byte_end":201917,"line_start":1343,"line_end":1343,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201922,"byte_end":201925,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the structure of a subgraph of the original graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":201930,"byte_end":202008,"line_start":1345,"line_end":1345,"column_start":5,"column_end":83}},{"value":"/ If no nodes are removed, the resulting graph has compatible node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":202013,"byte_end":202081,"line_start":1346,"line_end":1346,"column_start":5,"column_end":73}},{"value":"/ indices; if neither nodes nor edges are removed, the result has","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":202086,"byte_end":202153,"line_start":1347,"line_end":1347,"column_start":5,"column_end":72}},{"value":"/ the same graph indices as `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":202158,"byte_end":202195,"line_start":1348,"line_end":1348,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":203576,"byte_end":203590,"line_start":1383,"line_end":1383,"column_start":12,"column_end":26},"name":"into_edge_type","qualname":"<Graph<N, E, Ty, Ix>>::into_edge_type","value":"pub fn into_edge_type<NewTy>(Self) -> Graph<N, E, NewTy, Ix> where\nNewTy: EdgeType","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into either undirected or directed. No edge adjustments\n are done, so you may want to go over the result to remove or add edges.","sig":null,"attributes":[{"value":"/ Convert the graph into either undirected or directed. No edge adjustments","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":203364,"byte_end":203441,"line_start":1379,"line_end":1379,"column_start":5,"column_end":82}},{"value":"/ are done, so you may want to go over the result to remove or add edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":203446,"byte_end":203521,"line_start":1380,"line_end":1380,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":203526,"byte_end":203529,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":203534,"byte_end":203564,"line_start":1382,"line_end":1382,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":204878,"byte_end":204887,"line_start":1424,"line_end":1424,"column_start":12,"column_end":21},"name":"Externals","qualname":"::graph_impl::Externals","value":"Externals {  }","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687}],"decl_id":null,"docs":" An iterator over either the nodes without edges to them or from them.\n","sig":null,"attributes":[{"value":"/ An iterator over either the nodes without edges to them or from them.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":204793,"byte_end":204866,"line_start":1423,"line_end":1423,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":206120,"byte_end":206129,"line_start":1465,"line_end":1465,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[{"value":"/ Iterator over the neighbors of a node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205750,"byte_end":205792,"line_start":1455,"line_end":1455,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205793,"byte_end":205796,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205797,"byte_end":205842,"line_start":1457,"line_end":1457,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205843,"byte_end":205846,"line_start":1458,"line_end":1458,"column_start":1,"column_end":4}},{"value":"/ Created with [`.neighbors()`][1], [`.neighbors_directed()`][2] or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205847,"byte_end":205916,"line_start":1459,"line_end":1459,"column_start":1,"column_end":70}},{"value":"/ [`.neighbors_undirected()`][3].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205917,"byte_end":205952,"line_start":1460,"line_end":1460,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205953,"byte_end":205956,"line_start":1461,"line_end":1461,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.Graph.html#method.neighbors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205957,"byte_end":206000,"line_start":1462,"line_end":1462,"column_start":1,"column_end":44}},{"value":"/ [2]: struct.Graph.html#method.neighbors_directed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":206001,"byte_end":206053,"line_start":1463,"line_end":1463,"column_start":1,"column_end":53}},{"value":"/ [3]: struct.Graph.html#method.neighbors_undirected","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":206054,"byte_end":206108,"line_start":1464,"line_end":1464,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207653,"byte_end":207659,"line_start":1517,"line_end":1517,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"pub fn detach(&Self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[{"value":"/ Return a “walker” object that can be used to step through the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207377,"byte_end":207446,"line_start":1512,"line_end":1512,"column_start":5,"column_end":70}},{"value":"/ neighbors and edges from the origin node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207451,"byte_end":207496,"line_start":1513,"line_end":1513,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207501,"byte_end":207504,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ Note: The walker does not borrow from the graph, this is to allow mixing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207509,"byte_end":207585,"line_start":1515,"line_end":1515,"column_start":5,"column_end":81}},{"value":"/ edge walking with mutating the graph's weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207590,"byte_end":207641,"line_start":1516,"line_end":1516,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1751},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":209260,"byte_end":209265,"line_start":1586,"line_end":1586,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1761}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[{"value":"/ Iterator over the edges of from or to a node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":209200,"byte_end":209248,"line_start":1585,"line_end":1585,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":212044,"byte_end":212059,"line_start":1670,"line_end":1670,"column_start":12,"column_end":27},"name":"EdgesConnecting","qualname":"::graph_impl::EdgesConnecting","value":"EdgesConnecting {  }","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776}],"decl_id":null,"docs":" Iterator over the multiple directed edges connecting a source node to a target node\n","sig":null,"attributes":[{"value":"/ Iterator over the multiple directed edges connecting a source node to a target node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":211945,"byte_end":212032,"line_start":1669,"line_end":1669,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213094,"byte_end":213108,"line_start":1720,"line_end":1720,"column_start":12,"column_end":26},"name":"NodeWeightsMut","qualname":"::graph_impl::NodeWeightsMut","value":"NodeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1798}],"decl_id":null,"docs":" Iterator yielding mutable access to all node weights.\n","sig":null,"attributes":[{"value":"/ Iterator yielding mutable access to all node weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213025,"byte_end":213082,"line_start":1719,"line_end":1719,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213582,"byte_end":213596,"line_start":1740,"line_end":1740,"column_start":12,"column_end":26},"name":"EdgeWeightsMut","qualname":"::graph_impl::EdgeWeightsMut","value":"EdgeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1811}],"decl_id":null,"docs":" Iterator yielding mutable access to all edge weights.\n","sig":null,"attributes":[{"value":"/ Iterator yielding mutable access to all edge weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213513,"byte_end":213570,"line_start":1739,"line_end":1739,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215602,"byte_end":215612,"line_start":1825,"line_end":1825,"column_start":11,"column_end":21},"name":"GraphIndex","qualname":"::graph_impl::GraphIndex","value":"GraphIndex: Copy","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854}],"decl_id":null,"docs":" A  `GraphIndex` is a node or edge index.\n","sig":null,"attributes":[{"value":"/ A  `GraphIndex` is a node or edge index.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215547,"byte_end":215591,"line_start":1824,"line_end":1824,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215647,"byte_end":215652,"line_start":1827,"line_end":1827,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::GraphIndex::index","value":"pub fn index(&Self) -> usize","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215696,"byte_end":215709,"line_start":1829,"line_end":1829,"column_start":8,"column_end":21},"name":"is_node_index","qualname":"::graph_impl::GraphIndex::is_node_index","value":"pub fn is_node_index() -> bool","parent":{"krate":0,"index":1852},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217253,"byte_end":217266,"line_start":1889,"line_end":1889,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[{"value":"/ A “walker” object that can be used to step through the edge list of a node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216131,"byte_end":216214,"line_start":1854,"line_end":1854,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216215,"byte_end":216218,"line_start":1855,"line_end":1855,"column_start":1,"column_end":4}},{"value":"/ Created with [`.detach()`](struct.Neighbors.html#method.detach).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216219,"byte_end":216287,"line_start":1856,"line_end":1856,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216288,"byte_end":216291,"line_start":1857,"line_end":1857,"column_start":1,"column_end":4}},{"value":"/ The walker does not borrow from the graph, so it lets you step through","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216292,"byte_end":216366,"line_start":1858,"line_end":1858,"column_start":1,"column_end":75}},{"value":"/ neighbors or incident edges while also mutating graph weights, as","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216367,"byte_end":216436,"line_start":1859,"line_end":1859,"column_start":1,"column_end":70}},{"value":"/ in the following example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216437,"byte_end":216466,"line_start":1860,"line_end":1860,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216467,"byte_end":216470,"line_start":1861,"line_end":1861,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216471,"byte_end":216478,"line_start":1862,"line_end":1862,"column_start":1,"column_end":8}},{"value":"/ use petgraph::{Graph, Incoming};","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216479,"byte_end":216515,"line_start":1863,"line_end":1863,"column_start":1,"column_end":37}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216516,"byte_end":216545,"line_start":1864,"line_end":1864,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216546,"byte_end":216549,"line_start":1865,"line_end":1865,"column_start":1,"column_end":4}},{"value":"/ let mut gr = Graph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216550,"byte_end":216580,"line_start":1866,"line_end":1866,"column_start":1,"column_end":31}},{"value":"/ let a = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216581,"byte_end":216609,"line_start":1867,"line_end":1867,"column_start":1,"column_end":29}},{"value":"/ let b = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216610,"byte_end":216638,"line_start":1868,"line_end":1868,"column_start":1,"column_end":29}},{"value":"/ let c = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216639,"byte_end":216667,"line_start":1869,"line_end":1869,"column_start":1,"column_end":29}},{"value":"/ gr.add_edge(a, b, 3.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216668,"byte_end":216694,"line_start":1870,"line_end":1870,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(b, c, 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216695,"byte_end":216721,"line_start":1871,"line_end":1871,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(c, b, 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216722,"byte_end":216748,"line_start":1872,"line_end":1872,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216749,"byte_end":216752,"line_start":1873,"line_end":1873,"column_start":1,"column_end":4}},{"value":"/ // step through the graph and sum incoming edges into the node weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216753,"byte_end":216826,"line_start":1874,"line_end":1874,"column_start":1,"column_end":74}},{"value":"/ let mut dfs = Dfs::new(&gr, a);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216827,"byte_end":216862,"line_start":1875,"line_end":1875,"column_start":1,"column_end":36}},{"value":"/ while let Some(node) = dfs.next(&gr) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216863,"byte_end":216905,"line_start":1876,"line_end":1876,"column_start":1,"column_end":43}},{"value":"/     // use a detached neighbors walker","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216906,"byte_end":216948,"line_start":1877,"line_end":1877,"column_start":1,"column_end":43}},{"value":"/     let mut edges = gr.neighbors_directed(node, Incoming).detach();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":216949,"byte_end":217020,"line_start":1878,"line_end":1878,"column_start":1,"column_end":72}},{"value":"/     while let Some(edge) = edges.next_edge(&gr) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217021,"byte_end":217074,"line_start":1879,"line_end":1879,"column_start":1,"column_end":54}},{"value":"/         gr[node] += gr[edge];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217075,"byte_end":217108,"line_start":1880,"line_end":1880,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217109,"byte_end":217118,"line_start":1881,"line_end":1881,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217119,"byte_end":217124,"line_start":1882,"line_end":1882,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217125,"byte_end":217128,"line_start":1883,"line_end":1883,"column_start":1,"column_end":4}},{"value":"/ // check the result","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217129,"byte_end":217152,"line_start":1884,"line_end":1884,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(gr[a], 0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217153,"byte_end":217179,"line_start":1885,"line_end":1885,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[b], 4.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217180,"byte_end":217206,"line_start":1886,"line_end":1886,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[c], 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217207,"byte_end":217233,"line_start":1887,"line_end":1887,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217234,"byte_end":217241,"line_start":1888,"line_end":1888,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217923,"byte_end":217927,"line_start":1913,"line_end":1913,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"pub fn next<N, E, Ty: EdgeType>(&mut Self, &Graph<N, E, Ty, Ix>)\n-> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[{"value":"/ Step to the next edge and its endpoint node in the walk for graph `g`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217588,"byte_end":217662,"line_start":1907,"line_end":1907,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217667,"byte_end":217670,"line_start":1908,"line_end":1908,"column_start":5,"column_end":8}},{"value":"/ The next node indices are always the others than the starting point","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217675,"byte_end":217746,"line_start":1909,"line_end":1909,"column_start":5,"column_end":76}},{"value":"/ where the `WalkNeighbors` value was created.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217751,"byte_end":217799,"line_start":1910,"line_end":1910,"column_start":5,"column_end":53}},{"value":"/ For an `Outgoing` walk, the target nodes,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217804,"byte_end":217849,"line_start":1911,"line_end":1911,"column_start":5,"column_end":50}},{"value":"/ for an `Incoming` walk, the source nodes of the edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217854,"byte_end":217911,"line_start":1912,"line_end":1912,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":218865,"byte_end":218874,"line_start":1940,"line_end":1940,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"pub fn next_node<N, E, Ty: EdgeType>(&mut Self, &Graph<N, E, Ty, Ix>)\n-> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219033,"byte_end":219042,"line_start":1947,"line_end":1947,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"pub fn next_edge<N, E, Ty: EdgeType>(&mut Self, &Graph<N, E, Ty, Ix>)\n-> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4346},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219274,"byte_end":219285,"line_start":1957,"line_end":1957,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the node indices of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219192,"byte_end":219238,"line_start":1955,"line_end":1955,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219934,"byte_end":219945,"line_start":1984,"line_end":1984,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":4358},{"krate":0,"index":4359}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the edge indices of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219852,"byte_end":219898,"line_start":1982,"line_end":1982,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220573,"byte_end":220586,"line_start":2011,"line_end":2011,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4373}],"decl_id":null,"docs":" Reference to a `Graph` edge.\n","sig":null,"attributes":[{"value":"/ Reference to a `Graph` edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220512,"byte_end":220544,"line_start":2009,"line_end":2009,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":221487,"byte_end":221501,"line_start":2049,"line_end":2049,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":1934}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all nodes of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":221436,"byte_end":221475,"line_start":2048,"line_end":2048,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222556,"byte_end":222562,"line_start":2091,"line_end":2091,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"pub fn weight(&Self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[{"value":"/ Access the edge’s weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222385,"byte_end":222416,"line_start":2087,"line_end":2087,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222421,"byte_end":222424,"line_start":2088,"line_end":2088,"column_start":5,"column_end":8}},{"value":"/ **NOTE** that this method offers a longer lifetime","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222429,"byte_end":222483,"line_start":2089,"line_end":2089,"column_start":5,"column_end":59}},{"value":"/ than the trait (unfortunately they don't match yet).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222488,"byte_end":222544,"line_start":2090,"line_end":2090,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223079,"byte_end":223093,"line_start":2119,"line_end":2119,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":1973}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all edges of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223028,"byte_end":223067,"line_start":2118,"line_end":2118,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225190,"byte_end":225193,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frozen>::new","value":"pub fn new(&'a mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Frozen` from a mutable reference to a graph.\n","sig":null,"attributes":[{"value":"/ Create a new `Frozen` from a mutable reference to a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225116,"byte_end":225178,"line_start":15,"line_end":15,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":226100,"byte_end":226115,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Frozen>::index_twice_mut","value":"pub fn index_twice_mut<T, U>(&mut Self, T, U)\n->\n    (&mut <Graph<N, E, Ty, Ix> as Index<T>>::Output,\n     &mut <Graph<N, E, Ty, Ix> as Index<U>>::Output) where\nGraph<N, E, Ty, Ix>: IndexMut<T> + IndexMut<U>, T: GraphIndex, U: GraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[{"value":"/ Index the `Graph` by two indices, any combination of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225912,"byte_end":225968,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/ node or edge indices is fine.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225973,"byte_end":226006,"line_start":55,"line_end":55,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":226011,"byte_end":226014,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the indices are equal or if they are out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":226019,"byte_end":226088,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stable_graph","qualname":"::graph_impl::stable_graph","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":5171},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":5191},{"krate":0,"index":2072},{"krate":0,"index":5193},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":5197},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":5201},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":5209},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2113},{"krate":0,"index":2117},{"krate":0,"index":2121},{"krate":0,"index":2138},{"krate":0,"index":2142},{"krate":0,"index":2217},{"krate":0,"index":2224},{"krate":0,"index":2231},{"krate":0,"index":2237},{"krate":0,"index":2244},{"krate":0,"index":2250},{"krate":0,"index":2256},{"krate":0,"index":2264},{"krate":0,"index":2270},{"krate":0,"index":2279},{"krate":0,"index":2284},{"krate":0,"index":2293},{"krate":0,"index":4467},{"krate":0,"index":4475},{"krate":0,"index":2300},{"krate":0,"index":2305},{"krate":0,"index":2309},{"krate":0,"index":2314},{"krate":0,"index":2319},{"krate":0,"index":2330},{"krate":0,"index":2338},{"krate":0,"index":2346},{"krate":0,"index":2357},{"krate":0,"index":2364},{"krate":0,"index":2368},{"krate":0,"index":2377},{"krate":0,"index":2382},{"krate":0,"index":2390},{"krate":0,"index":2397},{"krate":0,"index":2405},{"krate":0,"index":2412},{"krate":0,"index":2420},{"krate":0,"index":2425},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2452},{"krate":0,"index":2457},{"krate":0,"index":2465},{"krate":0,"index":2471},{"krate":0,"index":2480},{"krate":0,"index":2485},{"krate":0,"index":2493}],"decl_id":null,"docs":" `StableGraph` keeps indices stable across removals.","sig":null,"attributes":[{"value":"cfg(feature = \"stable_graph\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224053,"byte_end":224085,"line_start":2158,"line_end":2158,"column_start":1,"column_end":33}},{"value":"/ `StableGraph` keeps indices stable across removals.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":227739,"byte_end":227794,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":227795,"byte_end":227798,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Depends on `feature = \"stable_graph\"`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":227799,"byte_end":227841,"line_start":3,"line_end":3,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":227842,"byte_end":227845,"line_start":4,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230240,"byte_end":230251,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"StableGraph","qualname":"::graph_impl::stable_graph::StableGraph","value":"StableGraph {  }","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112}],"decl_id":null,"docs":" `StableGraph<N, E, Ty, Ix>` is a graph datastructure using an adjacency\n list representation.","sig":null,"attributes":[{"value":"/ `StableGraph<N, E, Ty, Ix>` is a graph datastructure using an adjacency","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228673,"byte_end":228748,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ list representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228749,"byte_end":228773,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228774,"byte_end":228777,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The graph **does not invalidate** any unrelated node or edge indices when","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228778,"byte_end":228855,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ items are removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228856,"byte_end":228878,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228879,"byte_end":228882,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ `StableGraph` is parameterized over:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228883,"byte_end":228923,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228924,"byte_end":228927,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, also called *weights*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":228928,"byte_end":229005,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229006,"byte_end":229057,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229058,"byte_end":229146,"line_start":47,"line_end":47,"column_start":1,"column_end":89}},{"value":"/ - Index type `Ix`, which determines the maximum size of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229147,"byte_end":229217,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229218,"byte_end":229221,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The graph uses **O(|V| + |E|)** space, and allows fast node and edge insert","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229222,"byte_end":229301,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ and efficient graph search.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229302,"byte_end":229333,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229334,"byte_end":229337,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ It implements **O(e')** edge lookup and edge and node removals, where **e'**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229338,"byte_end":229418,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ is some local measure of edge count.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229419,"byte_end":229459,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229460,"byte_end":229463,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ - Nodes and edges are each numbered in an interval from *0* to some number","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229464,"byte_end":229542,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ *m*, but *not all* indices in the range are valid, since gaps are formed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229543,"byte_end":229619,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ by deletions.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229620,"byte_end":229637,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229638,"byte_end":229641,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - You can select graph index integer type after the size of the graph. A smaller","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229642,"byte_end":229726,"line_start":60,"line_end":60,"column_start":1,"column_end":85}},{"value":"/ size may have better performance.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229727,"byte_end":229764,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229765,"byte_end":229768,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ - Using indices allows mutation while traversing the graph, see `Dfs`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229769,"byte_end":229843,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229844,"byte_end":229847,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ - The `StableGraph` is a regular rust collection and is `Send` and `Sync`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229848,"byte_end":229925,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ (as long as associated data `N` and `E` are).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229926,"byte_end":229975,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229976,"byte_end":229979,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - Indices don't allow as much compile time checking as references.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":229980,"byte_end":230050,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230051,"byte_end":230054,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Depends on crate feature `stable_graph` (default). *Stable Graph is still","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230055,"byte_end":230132,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ missing a few methods compared to Graph. You can contribute to help it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230133,"byte_end":230207,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ achieve parity.*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230208,"byte_end":230228,"line_start":72,"line_end":72,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230961,"byte_end":230974,"line_start":93,"line_end":93,"column_start":10,"column_end":23},"name":"StableDiGraph","qualname":"::graph_impl::stable_graph::StableDiGraph","value":"StableGraph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `StableGraph` with directed edges.","sig":null,"attributes":[{"value":"/ A `StableGraph` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230820,"byte_end":230860,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230861,"byte_end":230864,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ For example, an edge from *1* to *2* is distinct from an edge from *2* to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230865,"byte_end":230942,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/ *1*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":230943,"byte_end":230951,"line_start":92,"line_end":92,"column_start":1,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231184,"byte_end":231197,"line_start":99,"line_end":99,"column_start":10,"column_end":23},"name":"StableUnGraph","qualname":"::graph_impl::stable_graph::StableUnGraph","value":"StableGraph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `StableGraph` with undirected edges.","sig":null,"attributes":[{"value":"/ A `StableGraph` with undirected edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231033,"byte_end":231075,"line_start":95,"line_end":95,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231076,"byte_end":231079,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For example, an edge between *1* and *2* is equivalent to an edge between","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231080,"byte_end":231157,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ *2* and *1*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231158,"byte_end":231174,"line_start":98,"line_end":98,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233545,"byte_end":233548,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<StableGraph<N, E, Directed>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` with directed edges.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233282,"byte_end":233333,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233338,"byte_end":233341,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. See `StableGraph::with_capacity`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233346,"byte_end":233412,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ or `StableGraph::default` for a constructor that is generic in all the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233417,"byte_end":233491,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ type parameters of `StableGraph`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233496,"byte_end":233533,"line_start":168,"line_end":168,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233765,"byte_end":233778,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StableGraph<N, E, Ty, Ix>>::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` with estimated capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` with estimated capacity.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233698,"byte_end":233753,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234118,"byte_end":234126,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StableGraph<N, E, Ty, Ix>>::capacity","value":"pub fn capacity(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[{"value":"/ Return the current node and edge capacity of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234047,"byte_end":234106,"line_start":190,"line_end":190,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234233,"byte_end":234238,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"clear","qualname":"<StableGraph<N, E, Ty, Ix>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234191,"byte_end":234221,"line_start":195,"line_end":195,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234463,"byte_end":234474,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::clear_edges","value":"pub fn clear_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[{"value":"/ Remove all edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234431,"byte_end":234451,"line_start":204,"line_end":204,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234934,"byte_end":234944,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"node_count","qualname":"<StableGraph<N, E, Ty, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[{"value":"/ Return the number of nodes (vertices) in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234824,"byte_end":234879,"line_start":217,"line_end":217,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234884,"byte_end":234887,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234892,"byte_end":234922,"line_start":219,"line_end":219,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235097,"byte_end":235107,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":234998,"byte_end":235042,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235047,"byte_end":235050,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235055,"byte_end":235085,"line_start":226,"line_end":226,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235235,"byte_end":235246,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"/ Whether the graph has directed edges or not.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235161,"byte_end":235209,"line_start":231,"line_end":231,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235214,"byte_end":235223,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235595,"byte_end":235603,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"add_node","qualname":"<StableGraph<N, E, Ty, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[{"value":"/ Add a node (also called vertex) with associated data `weight` to the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235301,"byte_end":235380,"line_start":237,"line_end":237,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235385,"byte_end":235388,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235393,"byte_end":235423,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235428,"byte_end":235431,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235436,"byte_end":235473,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235478,"byte_end":235481,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the `StableGraph` is at the maximum number of nodes for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235486,"byte_end":235559,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ its index type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":235564,"byte_end":235583,"line_start":244,"line_end":244,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":237065,"byte_end":237076,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<StableGraph<N, E, Ty, Ix>>::remove_node","value":"pub fn remove_node(&mut Self, NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[{"value":"/ Remove `a` from the graph if it exists, and return its weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236537,"byte_end":236603,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/ If it doesn't exist in the graph, return `None`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236608,"byte_end":236660,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236665,"byte_end":236668,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The node index `a` is invalidated, but none other.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236673,"byte_end":236727,"line_start":273,"line_end":273,"column_start":5,"column_end":59}},{"value":"/ Edge indices are invalidated as they would be following the removal of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236732,"byte_end":236806,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ each edge with an endpoint in `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236811,"byte_end":236849,"line_start":275,"line_end":275,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236854,"byte_end":236857,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of affected","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236862,"byte_end":236932,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ edges, including *n* calls to `.remove_edge()` where *n* is the number","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":236937,"byte_end":237011,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ of edges with an endpoint in `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":237016,"byte_end":237053,"line_start":279,"line_end":279,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238048,"byte_end":238061,"line_start":307,"line_end":307,"column_start":12,"column_end":25},"name":"contains_node","qualname":"<StableGraph<N, E, Ty, Ix>>::contains_node","value":"pub fn contains_node(&Self, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238865,"byte_end":238873,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[{"value":"/ Add an edge from `a` to `b` to the graph, with its associated","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238418,"byte_end":238483,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/ data `weight`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238488,"byte_end":238506,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238511,"byte_end":238514,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238519,"byte_end":238556,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238561,"byte_end":238564,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238569,"byte_end":238599,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238604,"byte_end":238607,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238612,"byte_end":238663,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ **Panics** if the `StableGraph` is at the maximum number of edges for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238668,"byte_end":238741,"line_start":327,"line_end":327,"column_start":5,"column_end":78}},{"value":"/ its index type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238746,"byte_end":238765,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238770,"byte_end":238773,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ **Note:** `StableGraph` allows adding parallel (“duplicate”) edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":238778,"byte_end":238853,"line_start":330,"line_end":330,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242150,"byte_end":242161,"line_start":418,"line_end":418,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::update_edge","value":"pub fn update_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E)\n-> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[{"value":"/ Add or update an edge from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":241771,"byte_end":241813,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/ If the edge already exists, its weight is updated.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":241818,"byte_end":241872,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":241877,"byte_end":241880,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Return the index of the affected edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":241885,"byte_end":241927,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":241932,"byte_end":241935,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":241940,"byte_end":242007,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242012,"byte_end":242078,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242083,"byte_end":242086,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242091,"byte_end":242138,"line_start":417,"line_end":417,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242676,"byte_end":242687,"line_start":432,"line_end":432,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::remove_edge","value":"pub fn remove_edge(&mut Self, EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[{"value":"/ Remove an edge and return its edge weight, or `None` if it didn't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242399,"byte_end":242475,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242480,"byte_end":242483,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Invalidates the edge index `e` but no other.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242488,"byte_end":242536,"line_start":428,"line_end":428,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242541,"byte_end":242544,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242549,"byte_end":242616,"line_start":430,"line_end":430,"column_start":5,"column_end":72}},{"value":"/ connected to the same endpoints as `e`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":242621,"byte_end":242664,"line_start":431,"line_end":431,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243695,"byte_end":243706,"line_start":460,"line_end":460,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<StableGraph<N, E, Ty, Ix>>::node_weight","value":"pub fn node_weight(&Self, NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243582,"byte_end":243617,"line_start":457,"line_end":457,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243622,"byte_end":243625,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243630,"byte_end":243683,"line_start":459,"line_end":459,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244009,"byte_end":244024,"line_start":470,"line_end":470,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`, mutably.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243883,"byte_end":243927,"line_start":467,"line_end":467,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243932,"byte_end":243935,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":243940,"byte_end":243997,"line_start":469,"line_end":469,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244282,"byte_end":244294,"line_start":478,"line_end":478,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<StableGraph<N, E, Ty, Ix>>::node_indices","value":"pub fn node_indices(&Self) -> NodeIndices<, N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the node indices of the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244213,"byte_end":244270,"line_start":477,"line_end":477,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244529,"byte_end":244540,"line_start":487,"line_end":487,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_weight","value":"pub fn edge_weight(&Self, EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244416,"byte_end":244451,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244456,"byte_end":244459,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[e]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244464,"byte_end":244517,"line_start":486,"line_end":486,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244842,"byte_end":244857,"line_start":497,"line_end":497,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`, mutably","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244717,"byte_end":244760,"line_start":494,"line_end":494,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244765,"byte_end":244768,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[e]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":244773,"byte_end":244830,"line_start":496,"line_end":496,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245105,"byte_end":245119,"line_start":505,"line_end":505,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_endpoints","value":"pub fn edge_endpoints(&Self, EdgeIndex<Ix>)\n-> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[{"value":"/ Access the source and target nodes for `e`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245046,"byte_end":245093,"line_start":504,"line_end":504,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245436,"byte_end":245448,"line_start":513,"line_end":513,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_indices","value":"pub fn edge_indices(&Self) -> EdgeIndices<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the node indices of the graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245367,"byte_end":245424,"line_start":512,"line_end":512,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245780,"byte_end":245793,"line_start":523,"line_end":523,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::contains_edge","value":"pub fn contains_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lookup if there is an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup if there is an edge from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245570,"byte_end":245617,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245622,"byte_end":245625,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245630,"byte_end":245697,"line_start":521,"line_end":521,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245702,"byte_end":245768,"line_start":522,"line_end":522,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246095,"byte_end":246104,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::find_edge","value":"pub fn find_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup an edge from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245897,"byte_end":245932,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245937,"byte_end":245940,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":245945,"byte_end":246012,"line_start":529,"line_end":529,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246017,"byte_end":246083,"line_start":530,"line_end":530,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246808,"byte_end":246828,"line_start":549,"line_end":549,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<StableGraph<N, E, Ty, Ix>>::find_edge_undirected","value":"pub fn find_edge_undirected(&Self, NodeIndex<Ix>, NodeIndex<Ix>)\n-> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[{"value":"/ Lookup an edge between `a` and `b`, in either direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246465,"byte_end":246525,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246530,"byte_end":246533,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ If the graph is undirected, then this is equivalent to `.find_edge()`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246538,"byte_end":246612,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246617,"byte_end":246620,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Return the edge index and its directionality, with `Outgoing` meaning","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246625,"byte_end":246698,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/ from `a` to `b` and `Incoming` the reverse,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246703,"byte_end":246750,"line_start":547,"line_end":547,"column_start":5,"column_end":52}},{"value":"/ or `None` if the edge does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":246755,"byte_end":246796,"line_start":548,"line_end":548,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247584,"byte_end":247593,"line_start":572,"line_end":572,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors","value":"pub fn neighbors(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247097,"byte_end":247164,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247169,"byte_end":247172,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247177,"byte_end":247219,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247224,"byte_end":247271,"line_start":563,"line_end":563,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247276,"byte_end":247279,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247284,"byte_end":247345,"line_start":565,"line_end":565,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247350,"byte_end":247395,"line_start":566,"line_end":566,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247400,"byte_end":247403,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247408,"byte_end":247480,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247485,"byte_end":247515,"line_start":569,"line_end":569,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247520,"byte_end":247523,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247528,"byte_end":247572,"line_start":571,"line_end":571,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248389,"byte_end":248407,"line_start":591,"line_end":591,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, NodeIndex<Ix>, Direction)\n-> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and `a`,\n in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and `a`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247697,"byte_end":247776,"line_start":576,"line_end":576,"column_start":5,"column_end":84}},{"value":"/ in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247781,"byte_end":247812,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247817,"byte_end":247896,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247901,"byte_end":247904,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247909,"byte_end":247958,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":247963,"byte_end":248010,"line_start":581,"line_end":581,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248015,"byte_end":248062,"line_start":582,"line_end":582,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248067,"byte_end":248070,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248075,"byte_end":248136,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248141,"byte_end":248186,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248191,"byte_end":248194,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_directed(a, dir).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248199,"byte_end":248285,"line_start":587,"line_end":587,"column_start":5,"column_end":91}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248290,"byte_end":248320,"line_start":588,"line_end":588,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248325,"byte_end":248328,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248333,"byte_end":248377,"line_start":590,"line_end":590,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249311,"byte_end":249331,"line_start":614,"line_end":614,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors_undirected","value":"pub fn neighbors_undirected(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and `a`,\n in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and `a`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248720,"byte_end":248799,"line_start":601,"line_end":601,"column_start":5,"column_end":84}},{"value":"/ in either direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248804,"byte_end":248828,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248833,"byte_end":248912,"line_start":603,"line_end":603,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248917,"byte_end":248920,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ - `Directed` and `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248925,"byte_end":248987,"line_start":605,"line_end":605,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":248992,"byte_end":248995,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249000,"byte_end":249061,"line_start":607,"line_end":607,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249066,"byte_end":249111,"line_start":608,"line_end":608,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249116,"byte_end":249119,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_undirected(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249124,"byte_end":249207,"line_start":610,"line_end":610,"column_start":5,"column_end":88}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249212,"byte_end":249242,"line_start":611,"line_end":611,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249247,"byte_end":249250,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249255,"byte_end":249299,"line_start":613,"line_end":613,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249929,"byte_end":249934,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"edges","qualname":"<StableGraph<N, E, Ty, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249636,"byte_end":249679,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249684,"byte_end":249687,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249692,"byte_end":249734,"line_start":627,"line_end":627,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249739,"byte_end":249786,"line_start":628,"line_end":628,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249791,"byte_end":249794,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249799,"byte_end":249860,"line_start":630,"line_end":630,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":249865,"byte_end":249917,"line_start":631,"line_end":631,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250594,"byte_end":250608,"line_start":647,"line_end":647,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::edges_directed","value":"pub fn edges_directed(&Self, NodeIndex<Ix>, Direction) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`, in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250034,"byte_end":250105,"line_start":636,"line_end":636,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250110,"byte_end":250113,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250118,"byte_end":250167,"line_start":638,"line_end":638,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250172,"byte_end":250219,"line_start":639,"line_end":639,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`, `Outgoing`: All edges connected to `a`, with `a` being the source of each","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250224,"byte_end":250317,"line_start":640,"line_end":640,"column_start":5,"column_end":98}},{"value":"/   edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250322,"byte_end":250333,"line_start":641,"line_end":641,"column_start":5,"column_end":16}},{"value":"/ - `Undirected`, `Incoming`: All edges connected to `a`, with `a` being the target of each","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250338,"byte_end":250431,"line_start":642,"line_end":642,"column_start":5,"column_end":98}},{"value":"/   edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250436,"byte_end":250447,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250452,"byte_end":250455,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node `a` doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250460,"byte_end":250525,"line_start":645,"line_end":645,"column_start":5,"column_end":70}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250530,"byte_end":250582,"line_start":646,"line_end":646,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251498,"byte_end":251507,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"externals","qualname":"<StableGraph<N, E, Ty, Ix>>::externals","value":"pub fn externals(&Self, Direction) -> Externals<, N, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over either the nodes without edges to them\n (`Incoming`) or from them (`Outgoing`).","sig":null,"attributes":[{"value":"/ Return an iterator over either the nodes without edges to them","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":250982,"byte_end":251048,"line_start":660,"line_end":660,"column_start":5,"column_end":71}},{"value":"/ (`Incoming`) or from them (`Outgoing`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251053,"byte_end":251096,"line_start":661,"line_end":661,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251101,"byte_end":251104,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ An *internal* node has both incoming and outgoing edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251109,"byte_end":251169,"line_start":663,"line_end":663,"column_start":5,"column_end":65}},{"value":"/ The nodes in `.externals(Incoming)` are the source nodes and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251174,"byte_end":251238,"line_start":664,"line_end":664,"column_start":5,"column_end":69}},{"value":"/ `.externals(Outgoing)` are the sinks of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251243,"byte_end":251297,"line_start":665,"line_end":665,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251302,"byte_end":251305,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ For a graph with undirected edges, both the sinks and the sources are","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251310,"byte_end":251383,"line_start":667,"line_end":667,"column_start":5,"column_end":78}},{"value":"/ just the nodes without edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251388,"byte_end":251421,"line_start":668,"line_end":668,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251426,"byte_end":251429,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The whole iteration computes in **O(|V|)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251434,"byte_end":251486,"line_start":670,"line_end":670,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251893,"byte_end":251908,"line_start":683,"line_end":683,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::index_twice_mut","value":"pub fn index_twice_mut<T, U>(&mut Self, T, U)\n-> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output) where\nSelf: IndexMut<T> + IndexMut<U>, T: GraphIndex, U: GraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Index the `StableGraph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[{"value":"/ Index the `StableGraph` by two indices, any combination of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251699,"byte_end":251761,"line_start":679,"line_end":679,"column_start":5,"column_end":67}},{"value":"/ node or edge indices is fine.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251766,"byte_end":251799,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251804,"byte_end":251807,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the indices are equal or if they are out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":251812,"byte_end":251881,"line_start":682,"line_end":682,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253349,"byte_end":253361,"line_start":723,"line_end":723,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<StableGraph<N, E, Ty, Ix>>::retain_nodes","value":"pub fn retain_nodes<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all nodes that return `true` from the `visit` closure,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252567,"byte_end":252630,"line_start":708,"line_end":708,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252635,"byte_end":252657,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252662,"byte_end":252665,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252670,"byte_end":252733,"line_start":711,"line_end":711,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252738,"byte_end":252795,"line_start":712,"line_end":712,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252800,"byte_end":252803,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The order nodes are visited is not specified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252808,"byte_end":252857,"line_start":714,"line_end":714,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252862,"byte_end":252865,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ The node indices of the removed nodes are invalidated, but none other.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252870,"byte_end":252944,"line_start":716,"line_end":716,"column_start":5,"column_end":79}},{"value":"/ Edge indices are invalidated as they would be following the removal of","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":252949,"byte_end":253023,"line_start":717,"line_end":717,"column_start":5,"column_end":79}},{"value":"/ each edge with an endpoint in a removed node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253028,"byte_end":253077,"line_start":718,"line_end":718,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253082,"byte_end":253085,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n + e')** time, where **n** is the number of node indices and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253090,"byte_end":253171,"line_start":720,"line_end":720,"column_start":5,"column_end":86}},{"value":"/  **e'** is the number of affected edges, including *n* calls to `.remove_edge()`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253176,"byte_end":253260,"line_start":721,"line_end":721,"column_start":5,"column_end":89}},{"value":"/ where *n* is the number of edges with an endpoint in a removed node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253265,"byte_end":253337,"line_start":722,"line_end":722,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254255,"byte_end":254267,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::retain_edges","value":"pub fn retain_edges<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, EdgeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all edges that return `true` from the `visit` closure,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253711,"byte_end":253774,"line_start":736,"line_end":736,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253779,"byte_end":253801,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253806,"byte_end":253809,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253814,"byte_end":253877,"line_start":739,"line_end":739,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253882,"byte_end":253939,"line_start":740,"line_end":740,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253944,"byte_end":253947,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The order edges are visited is not specified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":253952,"byte_end":254001,"line_start":742,"line_end":742,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254006,"byte_end":254009,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ The edge indices of the removed edes are invalidated, but none other.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254014,"byte_end":254087,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254092,"byte_end":254095,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e'')** time, **e'** is the number of affected edges,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254100,"byte_end":254172,"line_start":746,"line_end":746,"column_start":5,"column_end":77}},{"value":"/ including the calls to `.remove_edge()` for each removed edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254177,"byte_end":254243,"line_start":747,"line_end":747,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255173,"byte_end":255183,"line_start":778,"line_end":778,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254625,"byte_end":254682,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254687,"byte_end":254690,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254695,"byte_end":254742,"line_start":763,"line_end":763,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254747,"byte_end":254804,"line_start":764,"line_end":764,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254809,"byte_end":254852,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254857,"byte_end":254860,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254865,"byte_end":254921,"line_start":767,"line_end":767,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254926,"byte_end":254929,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254934,"byte_end":254941,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ use petgraph::stable_graph::StableGraph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254946,"byte_end":254990,"line_start":770,"line_end":770,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":254995,"byte_end":254998,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let gr = StableGraph::<(), i32>::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255003,"byte_end":255053,"line_start":772,"line_end":772,"column_start":5,"column_end":55}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255058,"byte_end":255089,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255094,"byte_end":255117,"line_start":774,"line_end":774,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255122,"byte_end":255137,"line_start":775,"line_end":775,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255142,"byte_end":255149,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255154,"byte_end":255161,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255688,"byte_end":255691,"line_start":795,"line_end":795,"column_start":12,"column_end":15},"name":"map","qualname":"<StableGraph<N, E, Ty, Ix>>::map","value":"pub fn map<'a, F, G, N2, E2>(&'a Self, F, G) -> StableGraph<N2, E2, Ty, Ix>\nwhere F: FnMut(NodeIndex<Ix>, &'a N) -> N2, G: FnMut(EdgeIndex<Ix>, &'a E) ->\nE2","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` by mapping node and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255485,"byte_end":255535,"line_start":790,"line_end":790,"column_start":5,"column_end":55}},{"value":"/ edge weights to new values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255540,"byte_end":255571,"line_start":791,"line_end":791,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255576,"byte_end":255579,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the same structure and the same","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255584,"byte_end":255643,"line_start":793,"line_end":793,"column_start":5,"column_end":64}},{"value":"/ graph indices as `self`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":255648,"byte_end":255676,"line_start":794,"line_end":794,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256815,"byte_end":256825,"line_start":828,"line_end":828,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<StableGraph<N, E, Ty, Ix>>::filter_map","value":"pub fn filter_map<'a, F, G, N2, E2>(&'a Self, F, G)\n-> StableGraph<N2, E2, Ty, Ix> where F: FnMut(NodeIndex<Ix>, &'a N) ->\nOption<N2>, G: FnMut(EdgeIndex<Ix>, &'a E) -> Option<E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` by mapping nodes and edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256301,"byte_end":256359,"line_start":817,"line_end":817,"column_start":5,"column_end":63}},{"value":"/ A node or edge may be mapped to `None` to exclude it from","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256364,"byte_end":256425,"line_start":818,"line_end":818,"column_start":5,"column_end":66}},{"value":"/ the resulting graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256430,"byte_end":256454,"line_start":819,"line_end":819,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256459,"byte_end":256462,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Nodes are mapped first with the `node_map` closure, then","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256467,"byte_end":256527,"line_start":821,"line_end":821,"column_start":5,"column_end":65}},{"value":"/ `edge_map` is called for the edges that have not had any endpoint","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256532,"byte_end":256601,"line_start":822,"line_end":822,"column_start":5,"column_end":74}},{"value":"/ removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256606,"byte_end":256618,"line_start":823,"line_end":823,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256623,"byte_end":256626,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the structure of a subgraph of the original graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256631,"byte_end":256709,"line_start":825,"line_end":825,"column_start":5,"column_end":83}},{"value":"/ Nodes and edges that are not removed maintain their old node or edge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256714,"byte_end":256786,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/ indices.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":256791,"byte_end":256803,"line_start":827,"line_end":827,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":259054,"byte_end":259071,"line_start":888,"line_end":888,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::extend_with_edges","value":"pub fn extend_with_edges<I>(&mut Self, I) where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[{"value":"/ Extend the graph from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258756,"byte_end":258803,"line_start":881,"line_end":881,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258808,"byte_end":258811,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258816,"byte_end":258863,"line_start":883,"line_end":883,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258868,"byte_end":258925,"line_start":884,"line_end":884,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258930,"byte_end":258973,"line_start":885,"line_end":885,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258978,"byte_end":258981,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":258986,"byte_end":259042,"line_start":887,"line_end":887,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":268810,"byte_end":268824,"line_start":1199,"line_end":1199,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::stable_graph::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":2283}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all nodes of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":268759,"byte_end":268798,"line_start":1198,"line_end":1198,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4467},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269674,"byte_end":269687,"line_start":1232,"line_end":1232,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::stable_graph::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4474}],"decl_id":null,"docs":" Reference to a `StableGraph` edge.\n","sig":null,"attributes":[{"value":"/ Reference to a `StableGraph` edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269607,"byte_end":269645,"line_start":1230,"line_end":1230,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270421,"byte_end":270427,"line_start":1263,"line_end":1263,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"pub fn weight(&Self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[{"value":"/ Access the edge’s weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270250,"byte_end":270281,"line_start":1259,"line_end":1259,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270286,"byte_end":270289,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ **NOTE** that this method offers a longer lifetime","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270294,"byte_end":270348,"line_start":1261,"line_end":1261,"column_start":5,"column_end":59}},{"value":"/ than the trait (unfortunately they don't match yet).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270353,"byte_end":270409,"line_start":1262,"line_end":1262,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":271486,"byte_end":271491,"line_start":1313,"line_end":1313,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::stable_graph::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2355},{"krate":0,"index":2356}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[{"value":"/ Iterator over the edges of from or to a node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":271426,"byte_end":271474,"line_start":1312,"line_end":1312,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":274979,"byte_end":274993,"line_start":1426,"line_end":1426,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::stable_graph::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":2381}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all edges of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":274928,"byte_end":274967,"line_start":1425,"line_end":1425,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":275980,"byte_end":275989,"line_start":1463,"line_end":1463,"column_start":12,"column_end":21},"name":"Externals","qualname":"::graph_impl::stable_graph::Externals","value":"Externals {  }","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404}],"decl_id":null,"docs":" An iterator over either the nodes without edges to them or from them.\n","sig":null,"attributes":[{"value":"/ An iterator over either the nodes without edges to them or from them.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":275895,"byte_end":275968,"line_start":1462,"line_end":1462,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277009,"byte_end":277018,"line_start":1498,"line_end":1498,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::stable_graph::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[{"value":"/ Iterator over the neighbors of a node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":276909,"byte_end":276951,"line_start":1495,"line_end":1495,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":276952,"byte_end":276955,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `NodeIndex`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":276956,"byte_end":276997,"line_start":1497,"line_end":1497,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277533,"byte_end":277539,"line_start":1514,"line_end":1514,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"pub fn detach(&Self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[{"value":"/ Return a “walker” object that can be used to step through the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277257,"byte_end":277326,"line_start":1509,"line_end":1509,"column_start":5,"column_end":70}},{"value":"/ neighbors and edges from the origin node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277331,"byte_end":277376,"line_start":1510,"line_end":1510,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277381,"byte_end":277384,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ Note: The walker does not borrow from the graph, this is to allow mixing","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277389,"byte_end":277465,"line_start":1512,"line_end":1512,"column_start":5,"column_end":81}},{"value":"/ edge walking with mutating the graph's weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277470,"byte_end":277521,"line_start":1513,"line_end":1513,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279912,"byte_end":279925,"line_start":1591,"line_end":1591,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::stable_graph::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":2433}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[{"value":"/ A “walker” object that can be used to step through the edge list of a node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":278736,"byte_end":278819,"line_start":1555,"line_end":1555,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":278820,"byte_end":278823,"line_start":1556,"line_end":1556,"column_start":1,"column_end":4}},{"value":"/ See [*.detach()*](struct.Neighbors.html#method.detach) for more information.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":278824,"byte_end":278904,"line_start":1557,"line_end":1557,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":278905,"byte_end":278908,"line_start":1558,"line_end":1558,"column_start":1,"column_end":4}},{"value":"/ The walker does not borrow from the graph, so it lets you step through","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":278909,"byte_end":278983,"line_start":1559,"line_end":1559,"column_start":1,"column_end":75}},{"value":"/ neighbors or incident edges while also mutating graph weights, as","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":278984,"byte_end":279053,"line_start":1560,"line_end":1560,"column_start":1,"column_end":70}},{"value":"/ in the following example:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279054,"byte_end":279083,"line_start":1561,"line_end":1561,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279084,"byte_end":279087,"line_start":1562,"line_end":1562,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279088,"byte_end":279095,"line_start":1563,"line_end":1563,"column_start":1,"column_end":8}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279096,"byte_end":279125,"line_start":1564,"line_end":1564,"column_start":1,"column_end":30}},{"value":"/ use petgraph::Incoming;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279126,"byte_end":279153,"line_start":1565,"line_end":1565,"column_start":1,"column_end":28}},{"value":"/ use petgraph::stable_graph::StableGraph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279154,"byte_end":279198,"line_start":1566,"line_end":1566,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279199,"byte_end":279202,"line_start":1567,"line_end":1567,"column_start":1,"column_end":4}},{"value":"/ let mut gr = StableGraph::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279203,"byte_end":279239,"line_start":1568,"line_end":1568,"column_start":1,"column_end":37}},{"value":"/ let a = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279240,"byte_end":279268,"line_start":1569,"line_end":1569,"column_start":1,"column_end":29}},{"value":"/ let b = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279269,"byte_end":279297,"line_start":1570,"line_end":1570,"column_start":1,"column_end":29}},{"value":"/ let c = gr.add_node(0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279298,"byte_end":279326,"line_start":1571,"line_end":1571,"column_start":1,"column_end":29}},{"value":"/ gr.add_edge(a, b, 3.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279327,"byte_end":279353,"line_start":1572,"line_end":1572,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(b, c, 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279354,"byte_end":279380,"line_start":1573,"line_end":1573,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(c, b, 1.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279381,"byte_end":279407,"line_start":1574,"line_end":1574,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279408,"byte_end":279411,"line_start":1575,"line_end":1575,"column_start":1,"column_end":4}},{"value":"/ // step through the graph and sum incoming edges into the node weight","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279412,"byte_end":279485,"line_start":1576,"line_end":1576,"column_start":1,"column_end":74}},{"value":"/ let mut dfs = Dfs::new(&gr, a);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279486,"byte_end":279521,"line_start":1577,"line_end":1577,"column_start":1,"column_end":36}},{"value":"/ while let Some(node) = dfs.next(&gr) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279522,"byte_end":279564,"line_start":1578,"line_end":1578,"column_start":1,"column_end":43}},{"value":"/     // use a detached neighbors walker","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279565,"byte_end":279607,"line_start":1579,"line_end":1579,"column_start":1,"column_end":43}},{"value":"/     let mut edges = gr.neighbors_directed(node, Incoming).detach();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279608,"byte_end":279679,"line_start":1580,"line_end":1580,"column_start":1,"column_end":72}},{"value":"/     while let Some(edge) = edges.next_edge(&gr) {","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279680,"byte_end":279733,"line_start":1581,"line_end":1581,"column_start":1,"column_end":54}},{"value":"/         gr[node] += gr[edge];","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279734,"byte_end":279767,"line_start":1582,"line_end":1582,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279768,"byte_end":279777,"line_start":1583,"line_end":1583,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279778,"byte_end":279783,"line_start":1584,"line_end":1584,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279784,"byte_end":279787,"line_start":1585,"line_end":1585,"column_start":1,"column_end":4}},{"value":"/ // check the result","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279788,"byte_end":279811,"line_start":1586,"line_end":1586,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(gr[a], 0.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279812,"byte_end":279838,"line_start":1587,"line_end":1587,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[b], 4.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279839,"byte_end":279865,"line_start":1588,"line_end":1588,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[c], 2.);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279866,"byte_end":279892,"line_start":1589,"line_end":1589,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":279893,"byte_end":279900,"line_start":1590,"line_end":1590,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280445,"byte_end":280449,"line_start":1606,"line_end":1606,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"pub fn next<N, E, Ty: EdgeType>(&mut Self, &StableGraph<N, E, Ty, Ix>)\n-> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[{"value":"/ Step to the next edge and its endpoint node in the walk for graph `g`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280110,"byte_end":280184,"line_start":1600,"line_end":1600,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280189,"byte_end":280192,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ The next node indices are always the others than the starting point","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280197,"byte_end":280268,"line_start":1602,"line_end":1602,"column_start":5,"column_end":76}},{"value":"/ where the `WalkNeighbors` value was created.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280273,"byte_end":280321,"line_start":1603,"line_end":1603,"column_start":5,"column_end":53}},{"value":"/ For an `Outgoing` walk, the target nodes,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280326,"byte_end":280371,"line_start":1604,"line_end":1604,"column_start":5,"column_end":50}},{"value":"/ for an `Incoming` walk, the source nodes of the edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280376,"byte_end":280433,"line_start":1605,"line_end":1605,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280627,"byte_end":280636,"line_start":1613,"line_end":1613,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"pub fn next_node<N, E, Ty: EdgeType>(&mut Self, &StableGraph<N, E, Ty, Ix>)\n-> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280801,"byte_end":280810,"line_start":1620,"line_end":1620,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"pub fn next_edge<N, E, Ty: EdgeType>(&mut Self, &StableGraph<N, E, Ty, Ix>)\n-> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281024,"byte_end":281035,"line_start":1629,"line_end":1629,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::stable_graph::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":2456}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the node indices of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280966,"byte_end":281012,"line_start":1628,"line_end":1628,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":282428,"byte_end":282439,"line_start":1682,"line_end":1682,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::stable_graph::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":2484}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the edge indices of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":282370,"byte_end":282416,"line_start":1681,"line_end":1681,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224558,"byte_end":224564,"line_start":2172,"line_end":2172,"column_start":12,"column_end":18},"name":"Frozen","qualname":"::graph_impl::Frozen","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Frozen` is a graph wrapper.","sig":null,"attributes":[{"value":"/ `Frozen` is a graph wrapper.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224109,"byte_end":224141,"line_start":2161,"line_end":2161,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224142,"byte_end":224145,"line_start":2162,"line_end":2162,"column_start":1,"column_end":4}},{"value":"/ The `Frozen` only allows shared access (read-only) to the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224146,"byte_end":224207,"line_start":2163,"line_end":2163,"column_start":1,"column_end":62}},{"value":"/ underlying graph `G`, but it allows mutable access to its","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224208,"byte_end":224269,"line_start":2164,"line_end":2164,"column_start":1,"column_end":62}},{"value":"/ node and edge weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224270,"byte_end":224296,"line_start":2165,"line_end":2165,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224297,"byte_end":224300,"line_start":2166,"line_end":2166,"column_start":1,"column_end":4}},{"value":"/ This is used to ensure immutability of the graph's structure","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224301,"byte_end":224365,"line_start":2167,"line_end":2167,"column_start":1,"column_end":65}},{"value":"/ while permitting weights to be both read and written.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224366,"byte_end":224423,"line_start":2168,"line_end":2168,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224424,"byte_end":224427,"line_start":2169,"line_end":2169,"column_start":1,"column_end":4}},{"value":"/ See indexing implementations and the traits `Data` and `DataMap`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224428,"byte_end":224496,"line_start":2170,"line_end":2170,"column_start":1,"column_end":69}},{"value":"/ for read-write access to the graph's weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224497,"byte_end":224546,"line_start":2171,"line_end":2171,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphmap","qualname":"::graphmap","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":5261},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":5269},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":5285},{"krate":0,"index":2530},{"krate":0,"index":5287},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":4481},{"krate":0,"index":4488},{"krate":0,"index":2550},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":4493},{"krate":0,"index":4505},{"krate":0,"index":4503},{"krate":0,"index":4501},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2597},{"krate":0,"index":2604},{"krate":0,"index":4506},{"krate":0,"index":4510},{"krate":0,"index":2612},{"krate":0,"index":2618},{"krate":0,"index":2626},{"krate":0,"index":2634},{"krate":0,"index":2642},{"krate":0,"index":2650},{"krate":0,"index":2657},{"krate":0,"index":2665},{"krate":0,"index":2672},{"krate":0,"index":2685},{"krate":0,"index":2692},{"krate":0,"index":2699},{"krate":0,"index":2713},{"krate":0,"index":2720},{"krate":0,"index":2727},{"krate":0,"index":2733},{"krate":0,"index":2738},{"krate":0,"index":2743},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2761},{"krate":0,"index":2765},{"krate":0,"index":2769},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2782},{"krate":0,"index":2786},{"krate":0,"index":2793},{"krate":0,"index":2798},{"krate":0,"index":2806},{"krate":0,"index":2814},{"krate":0,"index":2822},{"krate":0,"index":2830},{"krate":0,"index":2838},{"krate":0,"index":2845}],"decl_id":null,"docs":" `GraphMap<N, E, Ty>` is a graph datastructure where node values are mapping\n keys.\n","sig":null,"attributes":[{"value":"cfg(feature = \"graphmap\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5702,"byte_end":5730,"line_start":144,"line_end":144,"column_start":1,"column_end":29}},{"value":"/ `GraphMap<N, E, Ty>` is a graph datastructure where node values are mapping","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":285396,"byte_end":285475,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ keys.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":285476,"byte_end":285485,"line_start":2,"line_end":2,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286312,"byte_end":286322,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"UnGraphMap","qualname":"::graphmap::UnGraphMap","value":"GraphMap<N, E, Undirected>","parent":null,"children":[],"decl_id":null,"docs":" A `GraphMap` with undirected edges.","sig":null,"attributes":[{"value":"/ A `GraphMap` with undirected edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286164,"byte_end":286203,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286204,"byte_end":286207,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For example, an edge between *1* and *2* is equivalent to an edge between","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286208,"byte_end":286285,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ *2* and *1*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286286,"byte_end":286302,"line_start":27,"line_end":27,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286497,"byte_end":286507,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"DiGraphMap","qualname":"::graphmap::DiGraphMap","value":"GraphMap<N, E, Directed>","parent":null,"children":[],"decl_id":null,"docs":" A `GraphMap` with directed edges.","sig":null,"attributes":[{"value":"/ A `GraphMap` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286359,"byte_end":286396,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286397,"byte_end":286400,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ For example, an edge from *1* to *2* is distinct from an edge from *2* to","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286401,"byte_end":286478,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ *1*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286479,"byte_end":286487,"line_start":32,"line_end":32,"column_start":1,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":4481},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287693,"byte_end":287701,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"GraphMap","qualname":"::graphmap::GraphMap","value":"GraphMap {  }","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"decl_id":null,"docs":" `GraphMap<N, E, Ty>` is a graph datastructure using an associative array\n of its node weights `N`.","sig":null,"attributes":[{"value":"/ `GraphMap<N, E, Ty>` is a graph datastructure using an associative array","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286543,"byte_end":286619,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ of its node weights `N`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286620,"byte_end":286648,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286649,"byte_end":286652,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ It uses an combined adjacency list and sparse adjacency matrix","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286653,"byte_end":286719,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ representation, using **O(|V| + |E|)** space, and allows testing for edge","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286720,"byte_end":286797,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ existence in constant time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286798,"byte_end":286829,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286830,"byte_end":286833,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `GraphMap` is parameterized over:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286834,"byte_end":286871,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286872,"byte_end":286875,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286876,"byte_end":286948,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ - The node weight `N` must implement `Copy` and will be used as node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":286949,"byte_end":287021,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ identifier, duplicated into several places in the data structure.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287022,"byte_end":287091,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ It must be suitable as a hash table key (implementing `Eq + Hash`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287092,"byte_end":287163,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ The node type must also implement `Ord` so that the implementation can","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287164,"byte_end":287238,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ order the pair (`a`, `b`) for an edge connecting any two nodes `a` and `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287239,"byte_end":287318,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ - `E` can be of arbitrary type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287319,"byte_end":287354,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287355,"byte_end":287431,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287432,"byte_end":287447,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287448,"byte_end":287451,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can use the type aliases `UnGraphMap` and `DiGraphMap` for convenience.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287452,"byte_end":287531,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287532,"byte_end":287535,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `GraphMap` does not allow parallel edges, but self loops are allowed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287536,"byte_end":287609,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287610,"byte_end":287613,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Depends on crate feature `graphmap` (default).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287614,"byte_end":287664,"line_start":58,"line_end":58,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288079,"byte_end":288088,"line_start":73,"line_end":73,"column_start":11,"column_end":20},"name":"NodeTrait","qualname":"::graphmap::NodeTrait","value":"NodeTrait: Copy + Ord + Hash","parent":null,"children":[],"decl_id":null,"docs":" A trait group for `GraphMap`'s node identifier.\n","sig":null,"attributes":[{"value":"/ A trait group for `GraphMap`'s node identifier.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288017,"byte_end":288068,"line_start":72,"line_end":72,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288790,"byte_end":288793,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphMap<N, E, Ty>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap`\n","sig":null,"attributes":[{"value":"/ Create a new `GraphMap`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288751,"byte_end":288778,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288905,"byte_end":288918,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<GraphMap<N, E, Ty>>::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap` with estimated capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `GraphMap` with estimated capacity.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288841,"byte_end":288893,"line_start":108,"line_end":108,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289199,"byte_end":289207,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"capacity","qualname":"<GraphMap<N, E, Ty>>::capacity","value":"pub fn capacity(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[{"value":"/ Return the current node and edge capacity of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289128,"byte_end":289187,"line_start":117,"line_end":117,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289605,"byte_end":289616,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<GraphMap<N, E, Ty>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges.\n","sig":null,"attributes":[{"value":"/ Whether the graph has directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289552,"byte_end":289593,"line_start":132,"line_end":132,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290320,"byte_end":290330,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<GraphMap<N, E, Ty>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E, NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `GraphMap` from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289671,"byte_end":289725,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289730,"byte_end":289733,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Node values are taken directly from the list.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289738,"byte_end":289787,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289792,"byte_end":289849,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289854,"byte_end":289897,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289902,"byte_end":289905,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289910,"byte_end":289966,"line_start":143,"line_end":143,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289971,"byte_end":289974,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289979,"byte_end":289986,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use petgraph::graphmap::UnGraphMap;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":289991,"byte_end":290030,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290035,"byte_end":290038,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ // Create a new undirected GraphMap.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290043,"byte_end":290083,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"/ // Use a type hint to have `()` be the edge weight type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290088,"byte_end":290148,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ let gr = UnGraphMap::<_, ()>::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290153,"byte_end":290200,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290205,"byte_end":290236,"line_start":151,"line_end":151,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290241,"byte_end":290264,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290269,"byte_end":290284,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290289,"byte_end":290296,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290301,"byte_end":290308,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290547,"byte_end":290557,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"node_count","qualname":"<GraphMap<N, E, Ty>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes in the graph.\n","sig":null,"attributes":[{"value":"/ Return the number of nodes in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290491,"byte_end":290535,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290668,"byte_end":290678,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<GraphMap<N, E, Ty>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.\n","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290612,"byte_end":290656,"line_start":169,"line_end":169,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290775,"byte_end":290780,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"clear","qualname":"<GraphMap<N, E, Ty>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290733,"byte_end":290763,"line_start":174,"line_end":174,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290903,"byte_end":290911,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"add_node","qualname":"<GraphMap<N, E, Ty>>::add_node","value":"pub fn add_node(&mut Self, N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Add node `n` to the graph.\n","sig":null,"attributes":[{"value":"/ Add node `n` to the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":290861,"byte_end":290891,"line_start":180,"line_end":180,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291062,"byte_end":291073,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<GraphMap<N, E, Ty>>::remove_node","value":"pub fn remove_node(&mut Self, N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if node `n` was removed.\n","sig":null,"attributes":[{"value":"/ Return `true` if node `n` was removed.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291008,"byte_end":291050,"line_start":186,"line_end":186,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291566,"byte_end":291579,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"contains_node","qualname":"<GraphMap<N, E, Ty>>::contains_node","value":"pub fn contains_node(&Self, N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the node is contained in the graph.\n","sig":null,"attributes":[{"value":"/ Return `true` if the node is contained in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291498,"byte_end":291554,"line_start":201,"line_end":201,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292484,"byte_end":292492,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<GraphMap<N, E, Ty>>::add_edge","value":"pub fn add_edge(&mut Self, N, N, E) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge connecting `a` and `b` to the graph, with associated\n data `weight`. For a directed graph, the edge is directed from `a`\n to `b`.","sig":null,"attributes":[{"value":"/ Add an edge connecting `a` and `b` to the graph, with associated","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291650,"byte_end":291718,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/ data `weight`. For a directed graph, the edge is directed from `a`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291723,"byte_end":291793,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291798,"byte_end":291809,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291814,"byte_end":291817,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Inserts nodes `a` and/or `b` if they aren't already part of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291822,"byte_end":291896,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291901,"byte_end":291904,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the edge did not previously exist, otherwise,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291909,"byte_end":291975,"line_start":212,"line_end":212,"column_start":5,"column_end":71}},{"value":"/ the associated data is updated and the old value is returned","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":291980,"byte_end":292044,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/ as `Some(old_weight)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292049,"byte_end":292075,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292080,"byte_end":292083,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292088,"byte_end":292095,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ // Create a GraphMap with directed edges, and add one edge to it","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292100,"byte_end":292168,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ use petgraph::graphmap::DiGraphMap;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292173,"byte_end":292212,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292217,"byte_end":292220,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut g = DiGraphMap::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292225,"byte_end":292259,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/ g.add_edge(\"x\", \"y\", -1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292264,"byte_end":292293,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(g.node_count(), 2);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292298,"byte_end":292332,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(g.edge_count(), 1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292337,"byte_end":292371,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ assert!(g.contains_edge(\"x\", \"y\"));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292376,"byte_end":292415,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/ assert!(!g.contains_edge(\"y\", \"x\"));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292420,"byte_end":292460,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":292465,"byte_end":292472,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294743,"byte_end":294754,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<GraphMap<N, E, Ty>>::remove_edge","value":"pub fn remove_edge(&mut Self, N, N) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove edge from `a` to `b` from the graph and return the edge weight.","sig":null,"attributes":[{"value":"/ Remove edge from `a` to `b` from the graph and return the edge weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294227,"byte_end":294301,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294306,"byte_end":294309,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the edge didn't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294314,"byte_end":294357,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294362,"byte_end":294365,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294370,"byte_end":294377,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ // Create a GraphMap with undirected edges, and add and remove an edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294382,"byte_end":294457,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ use petgraph::graphmap::UnGraphMap;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294462,"byte_end":294501,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294506,"byte_end":294509,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let mut g = UnGraphMap::new();","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294514,"byte_end":294548,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ g.add_edge(\"x\", \"y\", -1);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294553,"byte_end":294582,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294587,"byte_end":294590,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let edge_data = g.remove_edge(\"y\", \"x\");","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294595,"byte_end":294639,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(edge_data, Some(-1));","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294644,"byte_end":294680,"line_start":290,"line_end":290,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(g.edge_count(), 0);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294685,"byte_end":294719,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":294724,"byte_end":294731,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295243,"byte_end":295256,"line_start":306,"line_end":306,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<GraphMap<N, E, Ty>>::contains_edge","value":"pub fn contains_edge(&Self, N, N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge connecting `a` with `b` is contained in the graph.\n","sig":null,"attributes":[{"value":"/ Return `true` if the edge connecting `a` with `b` is contained in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295151,"byte_end":295231,"line_start":305,"line_end":305,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295461,"byte_end":295466,"line_start":313,"line_end":313,"column_start":12,"column_end":17},"name":"nodes","qualname":"<GraphMap<N, E, Ty>>::nodes","value":"pub fn nodes(&Self) -> Nodes<, N>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the nodes of the graph.","sig":null,"attributes":[{"value":"/ Return an iterator over the nodes of the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295352,"byte_end":295403,"line_start":310,"line_end":310,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295408,"byte_end":295411,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `N`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295416,"byte_end":295449,"line_start":312,"line_end":312,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295867,"byte_end":295876,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<GraphMap<N, E, Ty>>::neighbors","value":"pub fn neighbors(&Self, N) -> Neighbors<, N, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295571,"byte_end":295638,"line_start":319,"line_end":319,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295643,"byte_end":295646,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295651,"byte_end":295693,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295698,"byte_end":295743,"line_start":322,"line_end":322,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295748,"byte_end":295751,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295756,"byte_end":295817,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `N`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":295822,"byte_end":295855,"line_start":325,"line_end":325,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296605,"byte_end":296623,"line_start":346,"line_end":346,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<GraphMap<N, E, Ty>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, N, Direction) -> NeighborsDirected<, N, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296118,"byte_end":296192,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ `a`, in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296197,"byte_end":296233,"line_start":337,"line_end":337,"column_start":5,"column_end":41}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296238,"byte_end":296317,"line_start":338,"line_end":338,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296322,"byte_end":296325,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296330,"byte_end":296379,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296384,"byte_end":296431,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296436,"byte_end":296481,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296486,"byte_end":296489,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296494,"byte_end":296555,"line_start":344,"line_end":344,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `N`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296560,"byte_end":296593,"line_start":345,"line_end":345,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297297,"byte_end":297302,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"edges","qualname":"<GraphMap<N, E, Ty>>::edges","value":"pub fn edges(&Self, N) -> Edges<, N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of target nodes with an edge starting from `a`,\n paired with their respective edge weights.","sig":null,"attributes":[{"value":"/ Return an iterator of target nodes with an edge starting from `a`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":296941,"byte_end":297011,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ paired with their respective edge weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297016,"byte_end":297062,"line_start":359,"line_end":359,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297067,"byte_end":297070,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297075,"byte_end":297117,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297122,"byte_end":297167,"line_start":362,"line_end":362,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297172,"byte_end":297175,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297180,"byte_end":297241,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `(N, &E)`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297246,"byte_end":297285,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297604,"byte_end":297615,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<GraphMap<N, E, Ty>>::edge_weight","value":"pub fn edge_weight(&Self, N, N) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the edge weight connecting `a` with `b`, or\n `None` if the edge does not exist in the graph.\n","sig":null,"attributes":[{"value":"/ Return a reference to the edge weight connecting `a` with `b`, or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297467,"byte_end":297536,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/ `None` if the edge does not exist in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297541,"byte_end":297592,"line_start":375,"line_end":375,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297853,"byte_end":297868,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<GraphMap<N, E, Ty>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, N, N) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the edge weight connecting `a` with `b`, or\n `None` if the edge does not exist in the graph.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the edge weight connecting `a` with `b`, or","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297708,"byte_end":297785,"line_start":380,"line_end":380,"column_start":5,"column_end":82}},{"value":"/ `None` if the edge does not exist in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297790,"byte_end":297841,"line_start":381,"line_end":381,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298127,"byte_end":298136,"line_start":389,"line_end":389,"column_start":12,"column_end":21},"name":"all_edges","qualname":"<GraphMap<N, E, Ty>>::all_edges","value":"pub fn all_edges(&Self) -> AllEdges<, N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all edges of the graph with their weight in arbitrary order.","sig":null,"attributes":[{"value":"/ Return an iterator over all edges of the graph with their weight in arbitrary order.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":297973,"byte_end":298061,"line_start":386,"line_end":386,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298066,"byte_end":298069,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(N, N, &E)`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298074,"byte_end":298115,"line_start":388,"line_end":388,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298461,"byte_end":298474,"line_start":400,"line_end":400,"column_start":12,"column_end":25},"name":"all_edges_mut","qualname":"<GraphMap<N, E, Ty>>::all_edges_mut","value":"pub fn all_edges_mut(&mut Self) -> AllEdgesMut<, N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all edges of the graph in arbitrary order, with a mutable reference\n to their weight.","sig":null,"attributes":[{"value":"/ Return an iterator over all edges of the graph in arbitrary order, with a mutable reference","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298271,"byte_end":298366,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ to their weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298371,"byte_end":298391,"line_start":397,"line_end":397,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298396,"byte_end":298399,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(N, N, &mut E)`","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298404,"byte_end":298449,"line_start":399,"line_end":399,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":299151,"byte_end":299161,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"into_graph","qualname":"<GraphMap<N, E, Ty>>::into_graph","value":"pub fn into_graph<Ix>(Self) -> Graph<N, E, Ty, Ix> where\nIx: crate::graph::IndexType","parent":null,"children":[],"decl_id":null,"docs":" Return a `Graph` that corresponds to this `GraphMap`.","sig":null,"attributes":[{"value":"/ Return a `Graph` that corresponds to this `GraphMap`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298623,"byte_end":298680,"line_start":407,"line_end":407,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298685,"byte_end":298688,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ 1. Note that node and edge indices in the `Graph` have nothing in common","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298693,"byte_end":298769,"line_start":409,"line_end":409,"column_start":5,"column_end":81}},{"value":"/    with the `GraphMap`s node weights `N`. The node weights `N` are used as","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298774,"byte_end":298852,"line_start":410,"line_end":410,"column_start":5,"column_end":83}},{"value":"/    node weights in the resulting `Graph`, too.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298857,"byte_end":298907,"line_start":411,"line_end":411,"column_start":5,"column_end":55}},{"value":"/ 2. Note that the index type is user-chosen.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298912,"byte_end":298959,"line_start":412,"line_end":412,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298964,"byte_end":298967,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(|V| + |E|)** time (average).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":298972,"byte_end":299020,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":299025,"byte_end":299028,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of nodes or edges does not fit with","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":299033,"byte_end":299097,"line_start":416,"line_end":416,"column_start":5,"column_end":69}},{"value":"/ the resulting graph's index type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":299102,"byte_end":299139,"line_start":417,"line_end":417,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4506},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":301552,"byte_end":301557,"line_start":505,"line_end":505,"column_start":5,"column_end":10},"name":"Nodes","qualname":"::graphmap::Nodes","value":"Nodes {  }","parent":null,"children":[{"krate":0,"index":4509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":301680,"byte_end":301689,"line_start":510,"line_end":510,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graphmap::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":302236,"byte_end":302253,"line_start":536,"line_end":536,"column_start":12,"column_end":29},"name":"NeighborsDirected","qualname":"::graphmap::NeighborsDirected","value":"NeighborsDirected {  }","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":303069,"byte_end":303074,"line_start":572,"line_end":572,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graphmap::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":304063,"byte_end":304071,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"AllEdges","qualname":"::graphmap::AllEdges","value":"AllEdges {  }","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":305269,"byte_end":305280,"line_start":671,"line_end":671,"column_start":12,"column_end":23},"name":"AllEdgesMut","qualname":"::graphmap::AllEdgesMut","value":"AllEdgesMut {  }","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307958,"byte_end":307961,"line_start":781,"line_end":781,"column_start":12,"column_end":15},"name":"Ptr","qualname":"::graphmap::Ptr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference that is hashed and compared by its pointer value.","sig":null,"attributes":[{"value":"/ A reference that is hashed and compared by its pointer value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307638,"byte_end":307703,"line_start":775,"line_end":775,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307704,"byte_end":307707,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ `Ptr` is used for certain configurations of `GraphMap`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307708,"byte_end":307767,"line_start":777,"line_end":777,"column_start":1,"column_end":60}},{"value":"/ in particular in the combination where the node type for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307768,"byte_end":307828,"line_start":778,"line_end":778,"column_start":1,"column_end":61}},{"value":"/ `GraphMap` is something of type for example `Ptr(&Cell<T>)`,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307829,"byte_end":307893,"line_start":779,"line_end":779,"column_start":1,"column_end":65}},{"value":"/ with the `Cell<T>` being `TypedArena` allocated.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307894,"byte_end":307946,"line_start":780,"line_end":780,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307973,"byte_end":307982,"line_start":781,"line_end":781,"column_start":27,"column_end":36},"name":"0","qualname":"::graphmap::Ptr::0","value":"&'b T","parent":{"krate":0,"index":2743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309778,"byte_end":309793,"line_start":864,"line_end":864,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::graphmap::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":310600,"byte_end":310614,"line_start":901,"line_end":901,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graphmap::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316674,"byte_end":316687,"line_start":162,"line_end":162,"column_start":8,"column_end":21},"name":"is_isomorphic","qualname":"::isomorphism::is_isomorphic","value":"pub fn is_isomorphic<N, E, Ty, Ix>(&Graph<N, E, Ty, Ix>, &Graph<N, E, Ty, Ix>)\n-> bool where Ty: EdgeType, Ix: IndexType","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[{"value":"/ [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316296,"byte_end":316365,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316366,"byte_end":316369,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the VF2 algorithm, only matching graph syntactically (graph","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316370,"byte_end":316439,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"/ structure).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316440,"byte_end":316455,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316456,"byte_end":316459,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The graphs should not be multigraphs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316460,"byte_end":316501,"line_start":156,"line_end":156,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316502,"byte_end":316505,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ **Reference**","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316506,"byte_end":316523,"line_start":158,"line_end":158,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316524,"byte_end":316527,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ * Luigi P. Cordella, Pasquale Foggia, Carlo Sansone, Mario Vento;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316528,"byte_end":316597,"line_start":160,"line_end":160,"column_start":1,"column_end":70}},{"value":"/   *A (Sub)Graph Isomorphism Algorithm for Matching Large Graphs*","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":316598,"byte_end":316666,"line_start":161,"line_end":161,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317340,"byte_end":317362,"line_start":181,"line_end":181,"column_start":8,"column_end":30},"name":"is_isomorphic_matching","qualname":"::isomorphism::is_isomorphic_matching","value":"pub fn is_isomorphic_matching<N, E, Ty, Ix, F,\n                              G>(&Graph<N, E, Ty, Ix>, &Graph<N, E, Ty, Ix>,\n                                 F, G) -> bool where Ty: EdgeType,\nIx: IndexType, F: FnMut(&N, &N) -> bool, G: FnMut(&E, &E) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[{"value":"/ [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317070,"byte_end":317139,"line_start":175,"line_end":175,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317140,"byte_end":317143,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Using the VF2 algorithm, examining both syntactic and semantic","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317144,"byte_end":317210,"line_start":177,"line_end":177,"column_start":1,"column_end":67}},{"value":"/ graph isomorphism (graph structure and matching node and edge weights).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317211,"byte_end":317286,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317287,"byte_end":317290,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ The graphs should not be multigraphs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":317291,"byte_end":317332,"line_start":180,"line_end":180,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":2972},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"matrix_graph","qualname":"::matrix_graph","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":5331},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":5353},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3015},{"krate":0,"index":3021},{"krate":0,"index":3027},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":4583},{"krate":0,"index":4586},{"krate":0,"index":4589},{"krate":0,"index":4592},{"krate":0,"index":4595},{"krate":0,"index":4598},{"krate":0,"index":4601},{"krate":0,"index":4604},{"krate":0,"index":4607},{"krate":0,"index":4610},{"krate":0,"index":4613},{"krate":0,"index":4616},{"krate":0,"index":3049},{"krate":0,"index":4619},{"krate":0,"index":4631},{"krate":0,"index":3050},{"krate":0,"index":3055},{"krate":0,"index":3060},{"krate":0,"index":3090},{"krate":0,"index":3097},{"krate":0,"index":3102},{"krate":0,"index":3106},{"krate":0,"index":3111},{"krate":0,"index":3118},{"krate":0,"index":3123},{"krate":0,"index":3130},{"krate":0,"index":3141},{"krate":0,"index":3147},{"krate":0,"index":3154},{"krate":0,"index":3161},{"krate":0,"index":3169},{"krate":0,"index":3174},{"krate":0,"index":3186},{"krate":0,"index":3193},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":4638},{"krate":0,"index":4643},{"krate":0,"index":3215},{"krate":0,"index":3223},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3235},{"krate":0,"index":3239},{"krate":0,"index":3246},{"krate":0,"index":3250},{"krate":0,"index":3254},{"krate":0,"index":3262},{"krate":0,"index":3269},{"krate":0,"index":3276},{"krate":0,"index":3284},{"krate":0,"index":3291},{"krate":0,"index":3300},{"krate":0,"index":3309},{"krate":0,"index":3317},{"krate":0,"index":3324},{"krate":0,"index":3332},{"krate":0,"index":3341},{"krate":0,"index":3350},{"krate":0,"index":3358},{"krate":0,"index":3368},{"krate":0,"index":3378},{"krate":0,"index":3387},{"krate":0,"index":3396},{"krate":0,"index":3402}],"decl_id":null,"docs":" `MatrixGraph<N, E, Ty, NullN, NullE, Ix>` is a graph datastructure backed by an adjacency matrix.\n","sig":null,"attributes":[{"value":"cfg(feature = \"matrix_graph\")","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5799,"byte_end":5831,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/ `MatrixGraph<N, E, Ty, NullN, NullE, Ix>` is a graph datastructure backed by an adjacency matrix.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":332596,"byte_end":332697,"line_start":1,"line_end":1,"column_start":1,"column_end":102}}]},{"kind":"Type","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333574,"byte_end":333583,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"NodeIndex","qualname":"::matrix_graph::NodeIndex","value":"GraphNodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Node identifier.\n","sig":null,"attributes":[{"value":"/ Node identifier.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333544,"byte_end":333564,"line_start":32,"line_end":32,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":3010},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333651,"byte_end":333657,"line_start":36,"line_end":36,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::matrix_graph::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333983,"byte_end":333991,"line_start":46,"line_end":46,"column_start":11,"column_end":19},"name":"Nullable","qualname":"::matrix_graph::Nullable","value":"Nullable: Default + Into<Option<<Self as Nullable>::Wrapped>> + private::Sealed","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"decl_id":null,"docs":" Wrapper trait for an `Option`, allowing user-defined structs to be input as containers when\n defining a null element.","sig":null,"attributes":[{"value":"/ Wrapper trait for an `Option`, allowing user-defined structs to be input as containers when","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333745,"byte_end":333840,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/ defining a null element.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333841,"byte_end":333869,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333870,"byte_end":333873,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Note: this trait is currently *sealed* and cannot be implemented for types outside this crate.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333874,"byte_end":333972,"line_start":45,"line_end":45,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334093,"byte_end":334100,"line_start":48,"line_end":48,"column_start":10,"column_end":17},"name":"Wrapped","qualname":"::matrix_graph::Nullable::Wrapped","value":"type Wrapped;","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334129,"byte_end":334132,"line_start":51,"line_end":51,"column_start":8,"column_end":11},"name":"new","qualname":"::matrix_graph::Nullable::new","value":"pub fn new(Self::Wrapped) -> Self","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334191,"byte_end":334197,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"as_ref","qualname":"::matrix_graph::Nullable::as_ref","value":"pub fn as_ref(&Self) -> Option<&Self::Wrapped>","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334259,"byte_end":334265,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"as_mut","qualname":"::matrix_graph::Nullable::as_mut","value":"pub fn as_mut(&mut Self) -> Option<&mut Self::Wrapped>","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334335,"byte_end":334342,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"is_null","qualname":"::matrix_graph::Nullable::is_null","value":"pub fn is_null(&Self) -> bool","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335118,"byte_end":335125,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"NotZero","qualname":"::matrix_graph::NotZero","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NotZero` is used to optimize the memory usage of edge weights `E` in a\n [`MatrixGraph`](struct.MatrixGraph.html), replacing the default `Option<E>` sentinel.","sig":null,"attributes":[{"value":"/ `NotZero` is used to optimize the memory usage of edge weights `E` in a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334681,"byte_end":334756,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ [`MatrixGraph`](struct.MatrixGraph.html), replacing the default `Option<E>` sentinel.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334757,"byte_end":334846,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334847,"byte_end":334850,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Pre-requisite: edge weight should implement [`Zero`](trait.Zero.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334851,"byte_end":334925,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334926,"byte_end":334929,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that if you're already using the standard non-zero types (such as `NonZeroU32`), you don't","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334930,"byte_end":335029,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ have to use this wrapper and can leave the default `Null` type argument.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335030,"byte_end":335106,"line_start":87,"line_end":87,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336336,"byte_end":336340,"line_start":142,"line_end":142,"column_start":11,"column_end":15},"name":"Zero","qualname":"::matrix_graph::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" Base trait for types that can be wrapped in a [`NotZero`](struct.NotZero.html).","sig":null,"attributes":[{"value":"/ Base trait for types that can be wrapped in a [`NotZero`](struct.NotZero.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336020,"byte_end":336103,"line_start":136,"line_end":136,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336104,"byte_end":336107,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Implementors must provide a singleton object that will be used to mark empty edges in a","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336108,"byte_end":336199,"line_start":138,"line_end":138,"column_start":1,"column_end":92}},{"value":"/ [`MatrixGraph`](struct.MatrixGraph.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336200,"byte_end":336245,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336246,"byte_end":336249,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Note that this trait is already implemented for the base numeric types.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336250,"byte_end":336325,"line_start":141,"line_end":141,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336425,"byte_end":336429,"line_start":144,"line_end":144,"column_start":8,"column_end":12},"name":"zero","qualname":"::matrix_graph::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":" Return the singleton object which can be used as a sentinel value.\n","sig":null,"attributes":[{"value":"/ Return the singleton object which can be used as a sentinel value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336347,"byte_end":336417,"line_start":143,"line_end":143,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336511,"byte_end":336518,"line_start":147,"line_end":147,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::matrix_graph::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":" Return true if `self` is equal to the sentinel value.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is equal to the sentinel value.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":336446,"byte_end":336503,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337114,"byte_end":337124,"line_start":178,"line_end":178,"column_start":8,"column_end":18},"name":"node_index","qualname":"::matrix_graph::node_index","value":"pub fn node_index(usize) -> NodeIndex","parent":null,"children":[],"decl_id":null,"docs":" Short version of `NodeIndex::new` (with Ix = `DefaultIx`)\n","sig":null,"attributes":[{"value":"/ Short version of `NodeIndex::new` (with Ix = `DefaultIx`)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337035,"byte_end":337096,"line_start":176,"line_end":176,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337097,"byte_end":337106,"line_start":177,"line_end":177,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338287,"byte_end":338298,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"MatrixGraph","qualname":"::matrix_graph::MatrixGraph","value":"MatrixGraph {  }","parent":null,"children":[{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630}],"decl_id":null,"docs":" `MatrixGraph<N, E, Ty, Null>` is a graph datastructure using an adjacency matrix\n representation.","sig":null,"attributes":[{"value":"/ `MatrixGraph<N, E, Ty, Null>` is a graph datastructure using an adjacency matrix","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337177,"byte_end":337261,"line_start":182,"line_end":182,"column_start":1,"column_end":85}},{"value":"/ representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337262,"byte_end":337281,"line_start":183,"line_end":183,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337282,"byte_end":337285,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ `MatrixGraph` is parameterized over:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337286,"byte_end":337326,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337327,"byte_end":337330,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337331,"byte_end":337403,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337404,"byte_end":337455,"line_start":188,"line_end":188,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337456,"byte_end":337544,"line_start":189,"line_end":189,"column_start":1,"column_end":89}},{"value":"/ - Nullable type `Null`, which denotes the edges' presence (defaults to `Option<E>`). You may","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337545,"byte_end":337641,"line_start":190,"line_end":190,"column_start":1,"column_end":97}},{"value":"/   specify [`NotZero<E>`](struct.NotZero.html) if you want to use a sentinel value (such as 0)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337642,"byte_end":337739,"line_start":191,"line_end":191,"column_start":1,"column_end":98}},{"value":"/   to mark the absence of an edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337740,"byte_end":337777,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/ - Index type `Ix` that sets the maximum size for the graph (defaults to `DefaultIx`).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337778,"byte_end":337867,"line_start":193,"line_end":193,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337868,"byte_end":337871,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The graph uses **O(|V^2|)** space, with fast edge insertion & amortized node insertion, as well","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337872,"byte_end":337971,"line_start":195,"line_end":195,"column_start":1,"column_end":100}},{"value":"/ as efficient graph search and graph algorithms on dense graphs.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":337972,"byte_end":338039,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338040,"byte_end":338043,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ This graph is backed by a flattened 2D array. For undirected graphs, only the lower triangular","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338044,"byte_end":338142,"line_start":198,"line_end":198,"column_start":1,"column_end":99}},{"value":"/ matrix is stored. Since the backing array stores edge weights, it is recommended to box large","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338143,"byte_end":338240,"line_start":199,"line_end":199,"column_start":1,"column_end":98}},{"value":"/ edge weights.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338241,"byte_end":338258,"line_start":200,"line_end":200,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338587,"byte_end":338595,"line_start":213,"line_end":213,"column_start":10,"column_end":18},"name":"DiMatrix","qualname":"::matrix_graph::DiMatrix","value":"MatrixGraph<N, E, Directed, Null, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `MatrixGraph` with directed edges.\n","sig":null,"attributes":[{"value":"/ A `MatrixGraph` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338537,"byte_end":338577,"line_start":212,"line_end":212,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338730,"byte_end":338738,"line_start":216,"line_end":216,"column_start":10,"column_end":18},"name":"UnMatrix","qualname":"::matrix_graph::UnMatrix","value":"MatrixGraph<N, E, Undirected, Null, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `MatrixGraph` with undirected edges.\n","sig":null,"attributes":[{"value":"/ A `MatrixGraph` with undirected edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338678,"byte_end":338720,"line_start":215,"line_end":215,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339011,"byte_end":339024,"line_start":222,"line_end":222,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MatrixGraph` with estimated capacity for nodes.\n","sig":null,"attributes":[{"value":"/ Create a new `MatrixGraph` with estimated capacity for nodes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338934,"byte_end":338999,"line_start":221,"line_end":221,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339698,"byte_end":339703,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"clear","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges.\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339655,"byte_end":339686,"line_start":243,"line_end":243,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340012,"byte_end":340022,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"node_count","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[{"value":"/ Return the number of nodes (vertices) in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339888,"byte_end":339943,"line_start":252,"line_end":252,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339948,"byte_end":339951,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339956,"byte_end":339986,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":339991,"byte_end":340000,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340190,"byte_end":340200,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340077,"byte_end":340121,"line_start":260,"line_end":260,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340126,"byte_end":340129,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340134,"byte_end":340164,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340169,"byte_end":340178,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340333,"byte_end":340344,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"/ Return whether the graph has directed edges or not.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340252,"byte_end":340307,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340312,"byte_end":340321,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340683,"byte_end":340691,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"add_node","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[{"value":"/ Add a node (also called vertex) with associated data `weight` to the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340399,"byte_end":340478,"line_start":274,"line_end":274,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340483,"byte_end":340486,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340491,"byte_end":340521,"line_start":276,"line_end":276,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340526,"byte_end":340529,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340534,"byte_end":340571,"line_start":278,"line_end":278,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340576,"byte_end":340579,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the MatrixGraph is at the maximum number of nodes for its index type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340584,"byte_end":340671,"line_start":280,"line_end":280,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340981,"byte_end":340992,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::remove_node","value":"pub fn remove_node(&mut Self, NodeIndex<Ix>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph.","sig":null,"attributes":[{"value":"/ Remove `a` from the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340791,"byte_end":340821,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340826,"byte_end":340829,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(V)** time, due to the removal of edges with other nodes.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340834,"byte_end":340910,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340915,"byte_end":340918,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":340923,"byte_end":340969,"line_start":289,"line_end":289,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342335,"byte_end":342346,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::update_edge","value":"pub fn update_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Update the edge from `a` to `b` to the graph, with its associated data `weight`.","sig":null,"attributes":[{"value":"/ Update the edge from `a` to `b` to the graph, with its associated data `weight`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":341990,"byte_end":342074,"line_start":321,"line_end":321,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342079,"byte_end":342082,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Return the previous data, if any.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342087,"byte_end":342124,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342129,"byte_end":342132,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time, best case.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342137,"byte_end":342178,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ Computes in **O(|V|^2)** time, worst case (matrix needs to be re-allocated).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342183,"byte_end":342263,"line_start":326,"line_end":326,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342268,"byte_end":342271,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342276,"byte_end":342323,"line_start":328,"line_end":328,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343320,"byte_end":343328,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E)","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[{"value":"/ Add an edge from `a` to `b` to the graph, with its associated","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342713,"byte_end":342778,"line_start":340,"line_end":340,"column_start":5,"column_end":70}},{"value":"/ data `weight`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342783,"byte_end":342801,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342806,"byte_end":342809,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new edge.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342814,"byte_end":342851,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342856,"byte_end":342859,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time, best case.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342864,"byte_end":342905,"line_start":345,"line_end":345,"column_start":5,"column_end":46}},{"value":"/ Computes in **O(|V|^2)** time, worst case (matrix needs to be re-allocated).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342910,"byte_end":342990,"line_start":346,"line_end":346,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":342995,"byte_end":342998,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343003,"byte_end":343050,"line_start":348,"line_end":348,"column_start":5,"column_end":52}},{"value":"/ **Panics** if an edge already exists from `a` to `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343055,"byte_end":343112,"line_start":349,"line_end":349,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343117,"byte_end":343120,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ **Note:** `MatrixGraph` does not allow adding parallel (“duplicate”) edges. If you want to avoid","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343125,"byte_end":343229,"line_start":351,"line_end":351,"column_start":5,"column_end":105}},{"value":"/ this, use [`.update_edge(a, b, weight)`](#method.update_edge) instead.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343234,"byte_end":343308,"line_start":352,"line_end":352,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343677,"byte_end":343688,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::remove_edge","value":"pub fn remove_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>) -> E","parent":null,"children":[],"decl_id":null,"docs":" Remove the edge from `a` to `b` to the graph.","sig":null,"attributes":[{"value":"/ Remove the edge from `a` to `b` to the graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343498,"byte_end":343547,"line_start":358,"line_end":358,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343552,"byte_end":343555,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343560,"byte_end":343607,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/ **Panics** if no edge exists between `a` and `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":343612,"byte_end":343665,"line_start":361,"line_end":361,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344170,"byte_end":344178,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"has_edge","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::has_edge","value":"pub fn has_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if there is an edge between `a` and `b`.","sig":null,"attributes":[{"value":"/ Return true if there is an edge between `a` and `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344042,"byte_end":344098,"line_start":372,"line_end":372,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344103,"byte_end":344106,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344111,"byte_end":344158,"line_start":374,"line_end":374,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344499,"byte_end":344510,"line_start":385,"line_end":385,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::node_weight","value":"pub fn node_weight(&Self, NodeIndex<Ix>) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344332,"byte_end":344367,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344372,"byte_end":344375,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344380,"byte_end":344433,"line_start":382,"line_end":382,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344438,"byte_end":344441,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node doesn't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344446,"byte_end":344487,"line_start":384,"line_end":384,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344766,"byte_end":344781,"line_start":394,"line_end":394,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, NodeIndex<Ix>) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`, mutably.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344586,"byte_end":344630,"line_start":389,"line_end":389,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344635,"byte_end":344638,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[a]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344643,"byte_end":344700,"line_start":391,"line_end":391,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344705,"byte_end":344708,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node doesn't exist.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344713,"byte_end":344754,"line_start":393,"line_end":393,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345048,"byte_end":345059,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::edge_weight","value":"pub fn edge_weight(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344869,"byte_end":344904,"line_start":398,"line_end":398,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344909,"byte_end":344912,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[e]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344917,"byte_end":344970,"line_start":400,"line_end":400,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344975,"byte_end":344978,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ **Panics** if no edge exists between `a` and `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":344983,"byte_end":345036,"line_start":402,"line_end":402,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345410,"byte_end":345425,"line_start":413,"line_end":413,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`, mutably.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345218,"byte_end":345262,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345267,"byte_end":345270,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[e]`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345275,"byte_end":345332,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345337,"byte_end":345340,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ **Panics** if no edge exists between `a` and `b`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345345,"byte_end":345398,"line_start":412,"line_end":412,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345934,"byte_end":345943,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::neighbors","value":"pub fn neighbors(&Self, NodeIndex<Ix>) -> Neighbors<, Ty, Null, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345592,"byte_end":345659,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345664,"byte_end":345667,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345672,"byte_end":345714,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345719,"byte_end":345764,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345769,"byte_end":345772,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345777,"byte_end":345838,"line_start":423,"line_end":423,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is [`NodeIndex<Ix>`](../graph/struct.NodeIndex.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":345843,"byte_end":345922,"line_start":424,"line_end":424,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346463,"byte_end":346468,"line_start":440,"line_end":440,"column_start":12,"column_end":17},"name":"edges","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, Ty, Null, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346148,"byte_end":346191,"line_start":433,"line_end":433,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346196,"byte_end":346199,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346204,"byte_end":346246,"line_start":435,"line_end":435,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346251,"byte_end":346298,"line_start":436,"line_end":436,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346303,"byte_end":346306,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346311,"byte_end":346372,"line_start":438,"line_end":438,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is [`Edges<E, Ix>`](../graph/struct.Edges.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346377,"byte_end":346451,"line_start":439,"line_end":439,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347159,"byte_end":347169,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MatrixGraph` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `MatrixGraph` from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346611,"byte_end":346668,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346673,"byte_end":346676,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346681,"byte_end":346728,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346733,"byte_end":346790,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346795,"byte_end":346838,"line_start":448,"line_end":448,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346843,"byte_end":346846,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346851,"byte_end":346907,"line_start":450,"line_end":450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346912,"byte_end":346915,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346920,"byte_end":346927,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ use petgraph::matrix_graph::MatrixGraph;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346932,"byte_end":346976,"line_start":453,"line_end":453,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346981,"byte_end":346984,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let gr = MatrixGraph::<(), i32>::from_edges(&[","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":346989,"byte_end":347039,"line_start":455,"line_end":455,"column_start":5,"column_end":55}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347044,"byte_end":347075,"line_start":456,"line_end":456,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347080,"byte_end":347103,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347108,"byte_end":347123,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347128,"byte_end":347135,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347140,"byte_end":347147,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347759,"byte_end":347776,"line_start":480,"line_end":480,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<MatrixGraph<N, E, Ty, Null, Ix>>::extend_with_edges","value":"pub fn extend_with_edges<I>(&mut Self, I) where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[{"value":"/ Extend the graph from an iterable of edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347461,"byte_end":347508,"line_start":473,"line_end":473,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347513,"byte_end":347516,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347521,"byte_end":347568,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347573,"byte_end":347630,"line_start":476,"line_end":476,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347635,"byte_end":347678,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347683,"byte_end":347686,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":347691,"byte_end":347747,"line_start":479,"line_end":479,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348926,"byte_end":348944,"line_start":509,"line_end":509,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<MatrixGraph<N, E, Directed, Null, Ix>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, NodeIndex<Ix>, Direction)\n-> Neighbors<, Directed, Null, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348467,"byte_end":348541,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ `a`, in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348546,"byte_end":348582,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348587,"byte_end":348666,"line_start":502,"line_end":502,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348671,"byte_end":348674,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ - `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348679,"byte_end":348716,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/ - `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348721,"byte_end":348756,"line_start":505,"line_end":505,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348761,"byte_end":348764,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348769,"byte_end":348830,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is [`NodeIndex<Ix>`](../graph/struct.NodeIndex.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348835,"byte_end":348914,"line_start":508,"line_end":508,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349647,"byte_end":349661,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<MatrixGraph<N, E, Directed, Null, Ix>>::edges_directed","value":"pub fn edges_directed(&Self, NodeIndex<Ix>, Direction)\n-> Edges<, Directed, Null, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`, in the specified direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349301,"byte_end":349372,"line_start":525,"line_end":525,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349377,"byte_end":349380,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ - `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349385,"byte_end":349422,"line_start":527,"line_end":527,"column_start":5,"column_end":42}},{"value":"/ - `Incoming`: All edges to `a`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349427,"byte_end":349462,"line_start":528,"line_end":528,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349467,"byte_end":349470,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node `a` doesn't exist.<br>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349475,"byte_end":349540,"line_start":530,"line_end":530,"column_start":5,"column_end":70}},{"value":"/ Iterator element type is [`EdgeReference<E, Ix>`](../graph/struct.EdgeReference.html).","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349545,"byte_end":349635,"line_start":531,"line_end":531,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350160,"byte_end":350175,"line_start":547,"line_end":547,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::matrix_graph::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":3100},{"krate":0,"index":3101}],"decl_id":null,"docs":" Iterator over the node identifiers of a graph.","sig":null,"attributes":[{"value":"/ Iterator over the node identifiers of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349903,"byte_end":349953,"line_start":541,"line_end":541,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349954,"byte_end":349957,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ Created from a call to [`.node_identifiers()`][1] on a [`MatrixGraph`][2].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":349958,"byte_end":350036,"line_start":543,"line_end":543,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350037,"byte_end":350040,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ [1]: ../visit/trait.IntoNodeIdentifiers.html#tymethod.node_identifiers","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350041,"byte_end":350115,"line_start":545,"line_end":545,"column_start":1,"column_end":75}},{"value":"/ [2]: struct.MatrixGraph.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350116,"byte_end":350148,"line_start":546,"line_end":546,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350853,"byte_end":350867,"line_start":575,"line_end":575,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::matrix_graph::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117}],"decl_id":null,"docs":" Iterator over all nodes of a graph.","sig":null,"attributes":[{"value":"/ Iterator over all nodes of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350610,"byte_end":350649,"line_start":569,"line_end":569,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350650,"byte_end":350653,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ Created from a call to [`.node_references()`][1] on a [`MatrixGraph`][2].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350654,"byte_end":350731,"line_start":571,"line_end":571,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350732,"byte_end":350735,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ [1]: ../visit/trait.IntoNodeReferences.html#tymethod.node_references","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350736,"byte_end":350808,"line_start":573,"line_end":573,"column_start":1,"column_end":73}},{"value":"/ [2]: struct.MatrixGraph.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350809,"byte_end":350841,"line_start":574,"line_end":574,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351698,"byte_end":351712,"line_start":607,"line_end":607,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::matrix_graph::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"decl_id":null,"docs":" Iterator over all edges of a graph.","sig":null,"attributes":[{"value":"/ Iterator over all edges of a graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351455,"byte_end":351494,"line_start":601,"line_end":601,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351495,"byte_end":351498,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ Created from a call to [`.edge_references()`][1] on a [`MatrixGraph`][2].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351499,"byte_end":351576,"line_start":603,"line_end":603,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351577,"byte_end":351580,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ [1]: ../visit/trait.IntoEdgeReferences.html#tymethod.edge_references","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351581,"byte_end":351653,"line_start":605,"line_end":605,"column_start":1,"column_end":73}},{"value":"/ [2]: struct.MatrixGraph.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351654,"byte_end":351686,"line_start":606,"line_end":606,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353809,"byte_end":353818,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::matrix_graph::Neighbors","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[{"value":"/ Iterator over the neighbors of a node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353520,"byte_end":353562,"line_start":664,"line_end":664,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353563,"byte_end":353566,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353567,"byte_end":353612,"line_start":666,"line_end":666,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353613,"byte_end":353616,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ Created with [`.neighbors()`][1], [`.neighbors_directed()`][2].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353617,"byte_end":353684,"line_start":668,"line_end":668,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353685,"byte_end":353688,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.MatrixGraph.html#method.neighbors","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353689,"byte_end":353738,"line_start":670,"line_end":670,"column_start":1,"column_end":50}},{"value":"/ [2]: struct.MatrixGraph.html#method.neighbors_directed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353739,"byte_end":353797,"line_start":671,"line_end":671,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3174},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354399,"byte_end":354404,"line_start":693,"line_end":693,"column_start":12,"column_end":17},"name":"Edges","qualname":"::matrix_graph::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185}],"decl_id":null,"docs":" Iterator over the edges of from or to a node","sig":null,"attributes":[{"value":"/ Iterator over the edges of from or to a node","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354170,"byte_end":354218,"line_start":687,"line_end":687,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354219,"byte_end":354222,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ Created with [`.edges()`][1], [`.edges_directed()`][2].","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354223,"byte_end":354282,"line_start":689,"line_end":689,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354283,"byte_end":354286,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.MatrixGraph.html#method.edges","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354287,"byte_end":354332,"line_start":691,"line_end":691,"column_start":1,"column_end":46}},{"value":"/ [2]: struct.MatrixGraph.html#method.edges_directed","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354333,"byte_end":354387,"line_start":692,"line_end":692,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362091,"byte_end":362094,"line_start":972,"line_end":972,"column_start":12,"column_end":15},"name":"new","qualname":"<MatrixGraph<N, E, Directed>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MatrixGraph` with directed edges.","sig":null,"attributes":[{"value":"/ Create a new `MatrixGraph` with directed edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361836,"byte_end":361887,"line_start":968,"line_end":968,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361892,"byte_end":361895,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. Use `MatrixGraph::with_capacity` or `MatrixGraph::default` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361900,"byte_end":361996,"line_start":970,"line_end":970,"column_start":5,"column_end":101}},{"value":"/ a constructor that is generic in all the type parameters of `MatrixGraph`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362001,"byte_end":362079,"line_start":971,"line_end":971,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362451,"byte_end":362465,"line_start":982,"line_end":982,"column_start":12,"column_end":26},"name":"new_undirected","qualname":"<MatrixGraph<N, E, Undirected>>::new_undirected","value":"pub fn new_undirected() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `MatrixGraph` with undirected edges.","sig":null,"attributes":[{"value":"/ Create a new `MatrixGraph` with undirected edges.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362194,"byte_end":362247,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362252,"byte_end":362255,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. Use `MatrixGraph::with_capacity` or `MatrixGraph::default` for","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362260,"byte_end":362356,"line_start":980,"line_end":980,"column_start":5,"column_end":101}},{"value":"/ a constructor that is generic in all the type parameters of `MatrixGraph`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362361,"byte_end":362439,"line_start":981,"line_end":981,"column_start":5,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/simple_paths.rs","byte_start":382520,"byte_end":382536,"line_start":17,"line_end":17,"column_start":8,"column_end":24},"name":"all_simple_paths","qualname":"::simple_paths::all_simple_paths","value":"pub fn all_simple_paths<TargetColl,\n                        G>(G, G::NodeId, G::NodeId, usize, Option<usize>)\n-> /*impl Trait*/ where G: NodeCount, G: IntoNeighborsDirected,\nG::NodeId: Eq + Hash, TargetColl: FromIterator<G::NodeId>","parent":null,"children":[],"decl_id":null,"docs":" Returns iterator that produces all simple paths from `from` node to `to`, which contains at least `min_intermidiate_nodes` nodes\n and at most `max_intermidiate_nodes`, if given, limited by graph's order otherwise\n Simple path is path without repetitions\n Algorithm is adopted from https://networkx.github.io/documentation/stable/reference/algorithms/generated/networkx.algorithms.simple_paths.all_simple_paths.html\n","sig":null,"attributes":[{"value":"/ Returns iterator that produces all simple paths from `from` node to `to`, which contains at least `min_intermidiate_nodes` nodes","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/simple_paths.rs","byte_start":382085,"byte_end":382217,"line_start":13,"line_end":13,"column_start":1,"column_end":133}},{"value":"/ and at most `max_intermidiate_nodes`, if given, limited by graph's order otherwise","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/simple_paths.rs","byte_start":382218,"byte_end":382304,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/ Simple path is path without repetitions","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/simple_paths.rs","byte_start":382305,"byte_end":382348,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ Algorithm is adopted from https://networkx.github.io/documentation/stable/reference/algorithms/generated/networkx.algorithms.simple_paths.all_simple_paths.html","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/simple_paths.rs","byte_start":382349,"byte_end":382512,"line_start":16,"line_end":16,"column_start":1,"column_end":164}}]},{"kind":"Mod","id":{"krate":0,"index":3458},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unionfind","qualname":"::unionfind","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":4646},{"krate":0,"index":4653},{"krate":0,"index":4650},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3465}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure.\n","sig":null,"attributes":[{"value":"/ `UnionFind<K>` is a disjoint-set data structure.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389612,"byte_end":389664,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4646},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":390230,"byte_end":390239,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"UnionFind","qualname":"::unionfind::UnionFind","value":"UnionFind {  }","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements\n indexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.","sig":null,"attributes":[{"value":"/ `UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389720,"byte_end":389813,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/ indexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389814,"byte_end":389909,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389910,"byte_end":389913,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ <http://en.wikipedia.org/wiki/Disjoint-set_data_structure>","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389914,"byte_end":389976,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389977,"byte_end":389980,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Too awesome not to quote:","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":389981,"byte_end":390010,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":390011,"byte_end":390014,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ “The amortized time per operation is **O(α(n))** where **α(n)** is the","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":390015,"byte_end":390093,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ inverse of **f(x) = A(x, x)** with **A** being the extremely fast-growing Ackermann function.”","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":390094,"byte_end":390194,"line_start":14,"line_end":14,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391168,"byte_end":391171,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<UnionFind<K>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UnionFind` of `n` disjoint sets.\n","sig":null,"attributes":[{"value":"/ Create a new `UnionFind` of `n` disjoint sets.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391106,"byte_end":391156,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391433,"byte_end":391437,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"find","qualname":"<UnionFind<K>>::find","value":"pub fn find(&Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[{"value":"/ Return the representative for `x`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391331,"byte_end":391369,"line_start":53,"line_end":53,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391374,"byte_end":391377,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `x` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391382,"byte_end":391421,"line_start":55,"line_end":55,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392126,"byte_end":392134,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<UnionFind<K>>::find_mut","value":"pub fn find_mut(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[{"value":"/ Return the representative for `x`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391882,"byte_end":391920,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391925,"byte_end":391928,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Write back the found representative, flattening the internal","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391933,"byte_end":391997,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ datastructure in the process and quicken future lookups.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392002,"byte_end":392062,"line_start":75,"line_end":75,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392067,"byte_end":392070,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `x` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392075,"byte_end":392114,"line_start":77,"line_end":77,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392770,"byte_end":392775,"line_start":96,"line_end":96,"column_start":12,"column_end":17},"name":"equiv","qualname":"<UnionFind<K>>::equiv","value":"pub fn equiv(&Self, K, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given elements belong to the same set, and returns\n `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given elements belong to the same set, and returns","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392655,"byte_end":392731,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ `false` otherwise.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392736,"byte_end":392758,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":393065,"byte_end":393070,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"union","qualname":"<UnionFind<K>>::union","value":"pub fn union(&mut Self, K, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unify the two sets containing `x` and `y`.","sig":null,"attributes":[{"value":"/ Unify the two sets containing `x` and `y`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392853,"byte_end":392899,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392904,"byte_end":392907,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Return `false` if the sets were already the same, `true` if they were unified.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392912,"byte_end":392994,"line_start":102,"line_end":102,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":392999,"byte_end":393002,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `x` or `y` is out of bounds.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":393007,"byte_end":393053,"line_start":104,"line_end":104,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":393952,"byte_end":393965,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"into_labeling","qualname":"<UnionFind<K>>::into_labeling","value":"pub fn into_labeling(Self) -> Vec<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector mapping each element to its representative.\n","sig":null,"attributes":[{"value":"/ Return a vector mapping each element to its representative.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":393877,"byte_end":393940,"line_start":134,"line_end":134,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":3481},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":5463},{"krate":0,"index":3504},{"krate":0,"index":5465},{"krate":0,"index":3505},{"krate":0,"index":3506}],"decl_id":null,"docs":" Commonly used items.","sig":null,"attributes":[{"value":"/ Commonly used items.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394802,"byte_end":394826,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394827,"byte_end":394830,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394831,"byte_end":394838,"line_start":3,"line_end":3,"column_start":1,"column_end":8}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394839,"byte_end":394868,"line_start":4,"line_end":4,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/prelude.rs","byte_start":394869,"byte_end":394876,"line_start":5,"line_end":5,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6129,"byte_end":6134,"line_start":163,"line_end":163,"column_start":9,"column_end":14},"name":"graph","qualname":"::graph","value":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.\n","sig":null,"attributes":[{"value":"/ `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6030,"byte_end":6120,"line_start":162,"line_end":162,"column_start":1,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4657},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6997,"byte_end":7005,"line_start":192,"line_end":192,"column_start":5,"column_end":13},"name":"Outgoing","qualname":"::Direction::Outgoing","value":"Direction::Outgoing","parent":{"krate":0,"index":4656},"children":[],"decl_id":null,"docs":" An `Outgoing` edge is an outward edge *from* the current node.\n","sig":null,"attributes":[{"value":"/ An `Outgoing` edge is an outward edge *from* the current node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6926,"byte_end":6992,"line_start":191,"line_end":191,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4660},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7084,"byte_end":7092,"line_start":194,"line_end":194,"column_start":5,"column_end":13},"name":"Incoming","qualname":"::Direction::Incoming","value":"Direction::Incoming","parent":{"krate":0,"index":4656},"children":[],"decl_id":null,"docs":" An `Incoming` edge is an inbound edge *to* the current node.\n","sig":null,"attributes":[{"value":"/ An `Incoming` edge is an inbound edge *to* the current node.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7015,"byte_end":7079,"line_start":193,"line_end":193,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":4656},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6910,"byte_end":6919,"line_start":190,"line_end":190,"column_start":10,"column_end":19},"name":"Direction","qualname":"::Direction","value":"pub enum Direction {\n\n    /// An `Outgoing` edge is an outward edge *from* the current node.\n    Outgoing = ,\n\n    /// An `Incoming` edge is an inbound edge *to* the current node.\n    Incoming = ,\n}","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4660}],"decl_id":null,"docs":" Edge direction.\n","sig":null,"attributes":[{"value":"/ Edge direction.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6805,"byte_end":6824,"line_start":187,"line_end":187,"column_start":1,"column_end":20}},{"value":"repr(usize)","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6886,"byte_end":6900,"line_start":189,"line_end":189,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7208,"byte_end":7216,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"opposite","qualname":"<Direction>::opposite","value":"pub fn opposite(&Self) -> Direction","parent":null,"children":[],"decl_id":null,"docs":" Return the opposite `Direction`.\n","sig":null,"attributes":[{"value":"/ Return the opposite `Direction`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7146,"byte_end":7182,"line_start":200,"line_end":200,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7187,"byte_end":7196,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7429,"byte_end":7434,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"index","qualname":"<Direction>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return `0` for `Outgoing` and `1` for `Incoming`.\n","sig":null,"attributes":[{"value":"/ Return `0` for `Outgoing` and `1` for `Incoming`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7350,"byte_end":7403,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7408,"byte_end":7417,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":4681},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7622,"byte_end":7630,"line_start":221,"line_end":221,"column_start":10,"column_end":18},"name":"Directed","qualname":"::Directed","value":"pub enum Directed { }","parent":null,"children":[],"decl_id":null,"docs":" Marker type for a directed graph.\n","sig":null,"attributes":[{"value":"/ Marker type for a directed graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7552,"byte_end":7589,"line_start":219,"line_end":219,"column_start":1,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":4687},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7730,"byte_end":7740,"line_start":226,"line_end":226,"column_start":10,"column_end":20},"name":"Undirected","qualname":"::Undirected","value":"pub enum Undirected { }","parent":null,"children":[],"decl_id":null,"docs":" Marker type for an undirected graph.\n","sig":null,"attributes":[{"value":"/ Marker type for an undirected graph.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7657,"byte_end":7697,"line_start":224,"line_end":224,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":3539},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7852,"byte_end":7860,"line_start":230,"line_end":230,"column_start":11,"column_end":19},"name":"EdgeType","qualname":"::EdgeType","value":"EdgeType","parent":null,"children":[{"krate":0,"index":3540}],"decl_id":null,"docs":" A graph's edge type determines whether it has directed edges or not.\n","sig":null,"attributes":[{"value":"/ A graph's edge type determines whether it has directed edges or not.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7769,"byte_end":7841,"line_start":229,"line_end":229,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7870,"byte_end":7881,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::EdgeType::is_directed","value":"pub fn is_directed() -> bool","parent":{"krate":0,"index":3539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3545},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8263,"byte_end":8279,"line_start":252,"line_end":252,"column_start":11,"column_end":27},"name":"IntoWeightedEdge","qualname":"::IntoWeightedEdge","value":"IntoWeightedEdge<E>","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":3548}],"decl_id":null,"docs":" Convert an element like `(i, j)` or `(i, j, w)` into\n a triple of source, target, edge weight.","sig":null,"attributes":[{"value":"/ Convert an element like `(i, j)` or `(i, j, w)` into","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8091,"byte_end":8147,"line_start":248,"line_end":248,"column_start":1,"column_end":57}},{"value":"/ a triple of source, target, edge weight.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8148,"byte_end":8192,"line_start":249,"line_end":249,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8193,"byte_end":8196,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ For `Graph::from_edges` and `GraphMap::from_edges`.","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8197,"byte_end":8252,"line_start":251,"line_end":251,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8294,"byte_end":8300,"line_start":253,"line_end":253,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::IntoWeightedEdge::NodeId","value":"type NodeId;","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8309,"byte_end":8327,"line_start":254,"line_end":254,"column_start":8,"column_end":26},"name":"into_weighted_edge","qualname":"::IntoWeightedEdge::into_weighted_edge","value":"pub fn into_weighted_edge(Self) -> (Self::NodeId, Self::NodeId, E)","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10143,"byte_end":10152,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10309,"byte_end":10318,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10367,"byte_end":10376,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10542,"byte_end":10551,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36090,"byte_end":36097,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36856,"byte_end":36863,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37293,"byte_end":37299,"line_start":108,"line_end":108,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37729,"byte_end":37736,"line_start":129,"line_end":129,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43120,"byte_end":43123,"line_start":44,"line_end":44,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45475,"byte_end":45487,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48616,"byte_end":48619,"line_start":235,"line_end":235,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49955,"byte_end":49959,"line_start":282,"line_end":282,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53433,"byte_end":53443,"line_start":393,"line_end":393,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53725,"byte_end":53735,"line_start":411,"line_end":411,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54144,"byte_end":54147,"line_start":432,"line_end":432,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54358,"byte_end":54370,"line_start":442,"line_end":442,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54581,"byte_end":54584,"line_start":452,"line_end":452,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54795,"byte_end":54799,"line_start":462,"line_end":462,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":14016,"byte_end":14022,"line_start":96,"line_end":96,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":19551,"byte_end":19556,"line_start":286,"line_end":286,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20083,"byte_end":20094,"line_start":309,"line_end":309,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22837,"byte_end":22845,"line_start":437,"line_end":437,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23330,"byte_end":23335,"line_start":462,"line_end":462,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23488,"byte_end":23499,"line_start":471,"line_end":471,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23644,"byte_end":23652,"line_start":480,"line_end":480,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25124,"byte_end":25129,"line_start":536,"line_end":536,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25469,"byte_end":25474,"line_start":552,"line_end":552,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25908,"byte_end":25919,"line_start":570,"line_end":570,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26188,"byte_end":26199,"line_start":582,"line_end":582,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26450,"byte_end":26461,"line_start":594,"line_end":594,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26677,"byte_end":26684,"line_start":606,"line_end":606,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27396,"byte_end":27401,"line_start":634,"line_end":634,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27559,"byte_end":27564,"line_start":642,"line_end":642,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27934,"byte_end":27945,"line_start":659,"line_end":659,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28136,"byte_end":28147,"line_start":668,"line_end":668,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28511,"byte_end":28522,"line_start":684,"line_end":684,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28693,"byte_end":28701,"line_start":694,"line_end":694,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28853,"byte_end":28861,"line_start":703,"line_end":703,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29962,"byte_end":29970,"line_start":740,"line_end":740,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55620,"byte_end":55621,"line_start":21,"line_end":21,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55815,"byte_end":55826,"line_start":31,"line_end":31,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56040,"byte_end":56047,"line_start":41,"line_end":41,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56297,"byte_end":56309,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56560,"byte_end":56572,"line_start":65,"line_end":65,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":57239,"byte_end":57260,"line_start":95,"line_end":95,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":59094,"byte_end":59111,"line_start":165,"line_end":165,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":60106,"byte_end":60132,"line_start":205,"line_end":205,"column_start":32,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":61062,"byte_end":61079,"line_start":243,"line_end":243,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":61466,"byte_end":61478,"line_start":260,"line_end":260,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62385,"byte_end":62386,"line_start":295,"line_end":295,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62893,"byte_end":62905,"line_start":315,"line_end":315,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":63166,"byte_end":63178,"line_start":326,"line_end":326,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":64223,"byte_end":64244,"line_start":372,"line_end":372,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":65621,"byte_end":65638,"line_start":430,"line_end":430,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":66144,"byte_end":66173,"line_start":453,"line_end":453,"column_start":29,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67919,"byte_end":67927,"line_start":15,"line_end":15,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68025,"byte_end":68033,"line_start":20,"line_end":20,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68121,"byte_end":68129,"line_start":24,"line_end":24,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68367,"byte_end":68375,"line_start":34,"line_end":34,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68636,"byte_end":68644,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68912,"byte_end":68920,"line_start":56,"line_end":56,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69230,"byte_end":69238,"line_start":68,"line_end":68,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69521,"byte_end":69534,"line_start":83,"line_end":83,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69884,"byte_end":69905,"line_start":99,"line_end":99,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":70323,"byte_end":70331,"line_start":120,"line_end":120,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":70761,"byte_end":70783,"line_start":138,"line_end":138,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73591,"byte_end":73596,"line_start":71,"line_end":71,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73722,"byte_end":73727,"line_start":79,"line_end":79,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":74044,"byte_end":74049,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":74428,"byte_end":74439,"line_start":106,"line_end":106,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":74789,"byte_end":74800,"line_start":120,"line_end":120,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":75144,"byte_end":75149,"line_start":133,"line_end":133,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":75773,"byte_end":75784,"line_start":160,"line_end":160,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":76400,"byte_end":76408,"line_start":187,"line_end":187,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77162,"byte_end":77167,"line_start":220,"line_end":220,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77400,"byte_end":77411,"line_start":231,"line_end":231,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77636,"byte_end":77644,"line_start":242,"line_end":242,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":79791,"byte_end":79796,"line_start":323,"line_end":323,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80135,"byte_end":80146,"line_start":338,"line_end":338,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80477,"byte_end":80485,"line_start":353,"line_end":353,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81710,"byte_end":81711,"line_start":392,"line_end":392,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":82058,"byte_end":82072,"line_start":406,"line_end":406,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109617,"byte_end":109627,"line_start":31,"line_end":31,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111299,"byte_end":111313,"line_start":93,"line_end":93,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90317,"byte_end":90325,"line_start":200,"line_end":200,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90563,"byte_end":90571,"line_start":213,"line_end":213,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":102300,"byte_end":102315,"line_start":613,"line_end":613,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104177,"byte_end":104182,"line_start":667,"line_end":667,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108252,"byte_end":108253,"line_start":800,"line_end":800,"column_start":21,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":121777,"byte_end":121788,"line_start":147,"line_end":147,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124297,"byte_end":124300,"line_start":58,"line_end":58,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124466,"byte_end":124469,"line_start":68,"line_end":68,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124802,"byte_end":124805,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126181,"byte_end":126184,"line_start":136,"line_end":136,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":129817,"byte_end":129820,"line_start":234,"line_end":234,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135046,"byte_end":135059,"line_start":413,"line_end":413,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135165,"byte_end":135178,"line_start":419,"line_end":419,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135218,"byte_end":135231,"line_start":421,"line_end":421,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135534,"byte_end":135547,"line_start":434,"line_end":434,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135973,"byte_end":135978,"line_start":457,"line_end":457,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":136480,"byte_end":136483,"line_start":478,"line_end":478,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":137483,"byte_end":137497,"line_start":517,"line_end":517,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":138627,"byte_end":138630,"line_start":559,"line_end":559,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":138846,"byte_end":138849,"line_start":570,"line_end":570,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":139328,"byte_end":139337,"line_start":592,"line_end":592,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140225,"byte_end":140228,"line_start":628,"line_end":628,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140558,"byte_end":140561,"line_start":644,"line_end":644,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140668,"byte_end":140671,"line_start":651,"line_end":651,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140895,"byte_end":140898,"line_start":663,"line_end":663,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141185,"byte_end":141200,"line_start":678,"line_end":678,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141804,"byte_end":141807,"line_start":707,"line_end":707,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141974,"byte_end":141977,"line_start":717,"line_end":717,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153671,"byte_end":153674,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154595,"byte_end":154598,"line_start":92,"line_end":92,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":156555,"byte_end":156558,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":156879,"byte_end":156882,"line_start":161,"line_end":161,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":157323,"byte_end":157330,"line_start":180,"line_end":180,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":157913,"byte_end":157920,"line_start":205,"line_end":205,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":158267,"byte_end":158275,"line_start":221,"line_end":221,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":160935,"byte_end":160944,"line_start":103,"line_end":103,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161317,"byte_end":161326,"line_start":124,"line_end":124,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161430,"byte_end":161439,"line_start":130,"line_end":130,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161979,"byte_end":161988,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162473,"byte_end":162482,"line_start":173,"line_end":173,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162586,"byte_end":162595,"line_start":179,"line_end":179,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163422,"byte_end":163426,"line_start":211,"line_end":211,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163536,"byte_end":163540,"line_start":219,"line_end":219,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164042,"byte_end":164046,"line_start":237,"line_end":237,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164162,"byte_end":164166,"line_start":245,"line_end":245,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":168198,"byte_end":168203,"line_start":351,"line_end":351,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":168618,"byte_end":168623,"line_start":371,"line_end":371,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170486,"byte_end":170491,"line_start":439,"line_end":439,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170898,"byte_end":170903,"line_start":453,"line_end":453,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171333,"byte_end":171338,"line_start":467,"line_end":467,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1672},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205074,"byte_end":205083,"line_start":1430,"line_end":1430,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":206321,"byte_end":206330,"line_start":1472,"line_end":1472,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207202,"byte_end":207211,"line_start":1501,"line_end":1501,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4345}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207325,"byte_end":207334,"line_start":1508,"line_end":1508,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":208164,"byte_end":208178,"line_start":1542,"line_end":1542,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":209700,"byte_end":209705,"line_start":1604,"line_end":1604,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":212266,"byte_end":212281,"line_start":1680,"line_end":1680,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":212729,"byte_end":212734,"line_start":1703,"line_end":1703,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213232,"byte_end":213246,"line_start":1724,"line_end":1724,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213720,"byte_end":213734,"line_start":1744,"line_end":1744,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":214152,"byte_end":214157,"line_start":1762,"line_end":1762,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":214493,"byte_end":214498,"line_start":1776,"line_end":1776,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":214826,"byte_end":214831,"line_start":1789,"line_end":1789,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215167,"byte_end":215172,"line_start":1803,"line_end":1803,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215412,"byte_end":215417,"line_start":1814,"line_end":1814,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215759,"byte_end":215768,"line_start":1832,"line_end":1832,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215962,"byte_end":215971,"line_start":1843,"line_end":1843,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217356,"byte_end":217369,"line_start":1894,"line_end":1894,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217564,"byte_end":217577,"line_start":1906,"line_end":1906,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1877},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219394,"byte_end":219405,"line_start":1962,"line_end":1962,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219668,"byte_end":219679,"line_start":1974,"line_end":1974,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219832,"byte_end":219843,"line_start":1980,"line_end":1980,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220054,"byte_end":220065,"line_start":1989,"line_end":1989,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220328,"byte_end":220339,"line_start":2001,"line_end":2001,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220492,"byte_end":220503,"line_start":2007,"line_end":2007,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220731,"byte_end":220744,"line_start":2017,"line_end":2017,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220847,"byte_end":220860,"line_start":2023,"line_end":2023,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220917,"byte_end":220930,"line_start":2025,"line_end":2025,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":221631,"byte_end":221645,"line_start":2053,"line_end":2053,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222008,"byte_end":222022,"line_start":2070,"line_end":2070,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222263,"byte_end":222277,"line_start":2081,"line_end":2081,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222329,"byte_end":222342,"line_start":2083,"line_end":2083,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222638,"byte_end":222651,"line_start":2096,"line_end":2096,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223223,"byte_end":223237,"line_start":2123,"line_end":2123,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223669,"byte_end":223683,"line_start":2142,"line_end":2142,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223991,"byte_end":224005,"line_start":2155,"line_end":2155,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225096,"byte_end":225102,"line_start":14,"line_end":14,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225384,"byte_end":225390,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225501,"byte_end":225507,"line_start":30,"line_end":30,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225675,"byte_end":225681,"line_start":40,"line_end":40,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225831,"byte_end":225837,"line_start":49,"line_end":49,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231292,"byte_end":231303,"line_start":101,"line_end":101,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233248,"byte_end":233259,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233623,"byte_end":233634,"line_start":174,"line_end":174,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2204},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":263696,"byte_end":263707,"line_start":1020,"line_end":1020,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":264426,"byte_end":264437,"line_start":1047,"line_end":1047,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":264778,"byte_end":264789,"line_start":1061,"line_end":1061,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":265122,"byte_end":265133,"line_start":1074,"line_end":1074,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":265474,"byte_end":265485,"line_start":1088,"line_end":1088,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":265730,"byte_end":265741,"line_start":1099,"line_end":1099,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":266096,"byte_end":266107,"line_start":1115,"line_end":1115,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":267343,"byte_end":267348,"line_start":1154,"line_end":1154,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":268962,"byte_end":268976,"line_start":1203,"line_end":1203,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269382,"byte_end":269396,"line_start":1220,"line_end":1220,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269832,"byte_end":269845,"line_start":1238,"line_end":1238,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269948,"byte_end":269961,"line_start":1244,"line_end":1244,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270018,"byte_end":270031,"line_start":1246,"line_end":1246,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270194,"byte_end":270207,"line_start":1255,"line_end":1255,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270503,"byte_end":270516,"line_start":1268,"line_end":1268,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":271934,"byte_end":271939,"line_start":1331,"line_end":1331,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":275124,"byte_end":275138,"line_start":1430,"line_end":1430,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2386},{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":275548,"byte_end":275562,"line_start":1447,"line_end":1447,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":276184,"byte_end":276193,"line_start":1469,"line_end":1469,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277205,"byte_end":277214,"line_start":1505,"line_end":1505,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277777,"byte_end":277786,"line_start":1524,"line_end":1524,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280002,"byte_end":280015,"line_start":1595,"line_end":1595,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4480}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280086,"byte_end":280099,"line_start":1599,"line_end":1599,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2442},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281177,"byte_end":281188,"line_start":1633,"line_end":1633,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281647,"byte_end":281658,"line_start":1652,"line_end":1652,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281957,"byte_end":281968,"line_start":1664,"line_end":1664,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":282581,"byte_end":282592,"line_start":1686,"line_end":1686,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":283051,"byte_end":283062,"line_start":1705,"line_end":1705,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287902,"byte_end":287910,"line_start":66,"line_end":66,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288133,"byte_end":288134,"line_start":74,"line_end":74,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288327,"byte_end":288343,"line_start":83,"line_end":83,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288553,"byte_end":288569,"line_start":92,"line_end":92,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2561}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288684,"byte_end":288692,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":299874,"byte_end":299882,"line_start":437,"line_end":437,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":300396,"byte_end":300404,"line_start":458,"line_end":458,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":301851,"byte_end":301860,"line_start":519,"line_end":519,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2622},{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":302441,"byte_end":302458,"line_start":547,"line_end":547,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":303258,"byte_end":303263,"line_start":582,"line_end":582,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":304221,"byte_end":304229,"line_start":623,"line_end":623,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":305013,"byte_end":305021,"line_start":658,"line_end":658,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":305433,"byte_end":305444,"line_start":679,"line_end":679,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":306207,"byte_end":306218,"line_start":713,"line_end":713,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":306777,"byte_end":306785,"line_start":738,"line_end":738,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307158,"byte_end":307166,"line_start":752,"line_end":752,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307501,"byte_end":307509,"line_start":765,"line_end":765,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308007,"byte_end":308010,"line_start":783,"line_end":783,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308043,"byte_end":308046,"line_start":784,"line_end":784,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308198,"byte_end":308201,"line_start":794,"line_end":794,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308404,"byte_end":308407,"line_start":801,"line_end":801,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308544,"byte_end":308547,"line_start":807,"line_end":807,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308814,"byte_end":308817,"line_start":816,"line_end":816,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308919,"byte_end":308922,"line_start":823,"line_end":823,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308955,"byte_end":308958,"line_start":825,"line_end":825,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309127,"byte_end":309130,"line_start":832,"line_end":832,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309630,"byte_end":309638,"line_start":854,"line_end":854,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309991,"byte_end":310006,"line_start":873,"line_end":873,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":310812,"byte_end":310826,"line_start":910,"line_end":910,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":311065,"byte_end":311073,"line_start":922,"line_end":922,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":311497,"byte_end":311505,"line_start":940,"line_end":940,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":312562,"byte_end":312570,"line_start":30,"line_end":30,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":318014,"byte_end":318029,"line_start":208,"line_end":208,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":318208,"byte_end":318209,"line_start":219,"line_end":219,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":329467,"byte_end":329475,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":329778,"byte_end":329786,"line_start":24,"line_end":24,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":330597,"byte_end":330598,"line_start":59,"line_end":59,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":330633,"byte_end":330639,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_utils.rs","byte_start":332572,"byte_end":332573,"line_start":32,"line_end":32,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333692,"byte_end":333699,"line_start":38,"line_end":38,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333729,"byte_end":333735,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334422,"byte_end":334428,"line_start":65,"line_end":65,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335160,"byte_end":335167,"line_start":90,"line_end":90,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335263,"byte_end":335270,"line_start":96,"line_end":96,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335867,"byte_end":335874,"line_start":126,"line_end":126,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338896,"byte_end":338907,"line_start":219,"line_end":219,"column_start":5,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348423,"byte_end":348434,"line_start":499,"line_end":499,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350264,"byte_end":350279,"line_start":552,"line_end":552,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350451,"byte_end":350466,"line_start":561,"line_end":561,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350988,"byte_end":351002,"line_start":581,"line_end":581,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351234,"byte_end":351248,"line_start":591,"line_end":591,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351954,"byte_end":351968,"line_start":616,"line_end":616,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":352335,"byte_end":352349,"line_start":630,"line_end":630,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3152},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353956,"byte_end":353965,"line_start":674,"line_end":674,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354689,"byte_end":354694,"line_start":703,"line_end":703,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":355461,"byte_end":355466,"line_start":729,"line_end":729,"column_start":68,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":359155,"byte_end":359164,"line_start":854,"line_end":854,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":360437,"byte_end":360446,"line_start":910,"line_end":910,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":360599,"byte_end":360608,"line_start":917,"line_end":917,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":360863,"byte_end":360873,"line_start":929,"line_end":929,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3237},{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361690,"byte_end":361701,"line_start":960,"line_end":960,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361802,"byte_end":361813,"line_start":967,"line_end":967,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362158,"byte_end":362169,"line_start":977,"line_end":977,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362729,"byte_end":362740,"line_start":991,"line_end":991,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":363084,"byte_end":363095,"line_start":1004,"line_end":1004,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":363306,"byte_end":363317,"line_start":1012,"line_end":1012,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3275}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":363726,"byte_end":363737,"line_start":1025,"line_end":1025,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":364204,"byte_end":364215,"line_start":1040,"line_end":1040,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":364462,"byte_end":364473,"line_start":1048,"line_end":1048,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":364807,"byte_end":364818,"line_start":1060,"line_end":1060,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":365173,"byte_end":365184,"line_start":1075,"line_end":1075,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":365380,"byte_end":365391,"line_start":1082,"line_end":1082,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":365523,"byte_end":365534,"line_start":1088,"line_end":1088,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":367670,"byte_end":367681,"line_start":1154,"line_end":1154,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":368040,"byte_end":368051,"line_start":1170,"line_end":1170,"column_start":9,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":368160,"byte_end":368171,"line_start":1175,"line_end":1175,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/traits_graph.rs","byte_start":387852,"byte_end":387857,"line_start":16,"line_end":16,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/traits_graph.rs","byte_start":388815,"byte_end":388826,"line_start":47,"line_end":47,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391063,"byte_end":391072,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7130,"byte_end":7139,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7914,"byte_end":7922,"line_start":234,"line_end":234,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8010,"byte_end":8020,"line_start":241,"line_end":241,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5539,"byte_end":5544,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5567,"byte_end":5571,"line_start":134,"line_end":134,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":757}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5582,"byte_end":5586,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":902}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":84497,"byte_end":84507,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":903}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5607,"byte_end":5610,"line_start":138,"line_end":138,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5634,"byte_end":5637,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1363}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":224094,"byte_end":224106,"line_start":2159,"line_end":2159,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":2055}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5739,"byte_end":5747,"line_start":145,"line_end":145,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2504}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5840,"byte_end":5852,"line_start":150,"line_end":150,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":2972}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":5990,"byte_end":5999,"line_start":157,"line_end":157,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":3458}},{"kind":"Mod","span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":6020,"byte_end":6027,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3481}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10143,"byte_end":10152,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10309,"byte_end":10318,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10367,"byte_end":10376,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/scored.rs","byte_start":10542,"byte_end":10551,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36090,"byte_end":36097,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":36856,"byte_end":36863,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3652},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37293,"byte_end":37299,"line_start":108,"line_end":108,"column_start":41,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":30220},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/dfsvisit.rs","byte_start":37729,"byte_end":37736,"line_start":129,"line_end":129,"column_start":21,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3652},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":43120,"byte_end":43123,"line_start":44,"line_end":44,"column_start":13,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":45475,"byte_end":45487,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":48616,"byte_end":48619,"line_start":235,"line_end":235,"column_start":13,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":49955,"byte_end":49959,"line_start":282,"line_end":282,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53433,"byte_end":53443,"line_start":393,"line_end":393,"column_start":12,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":53725,"byte_end":53735,"line_start":411,"line_end":411,"column_start":25,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54144,"byte_end":54147,"line_start":432,"line_end":432,"column_start":23,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3669},"to":{"krate":0,"index":139}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54358,"byte_end":54370,"line_start":442,"line_end":442,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3682},"to":{"krate":0,"index":139}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54581,"byte_end":54584,"line_start":452,"line_end":452,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":139}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/traversal.rs","byte_start":54795,"byte_end":54799,"line_start":462,"line_end":462,"column_start":23,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3705},"to":{"krate":0,"index":139}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13915,"byte_end":13919,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":13922,"byte_end":13931,"line_start":92,"line_end":92,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":14016,"byte_end":14022,"line_start":96,"line_end":96,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2499},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":14990,"byte_end":14998,"line_start":135,"line_end":135,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":199},"to":{"krate":0,"index":3742}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":15665,"byte_end":15678,"line_start":155,"line_end":155,"column_start":35,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":3742},"to":{"krate":0,"index":3751}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":17737,"byte_end":17755,"line_start":227,"line_end":227,"column_start":23,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3812},"to":{"krate":0,"index":3755}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":17758,"byte_end":17771,"line_start":227,"line_end":227,"column_start":44,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":3742},"to":{"krate":0,"index":3755}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":18682,"byte_end":18691,"line_start":253,"line_end":253,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3755},"to":{"krate":0,"index":3764}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":18694,"byte_end":18715,"line_start":253,"line_end":253,"column_start":43,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":3751},"to":{"krate":0,"index":3764}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":19042,"byte_end":19050,"line_start":265,"line_end":265,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":199},"to":{"krate":0,"index":3773}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":19551,"byte_end":19556,"line_start":286,"line_end":286,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20083,"byte_end":20094,"line_start":309,"line_end":309,"column_start":34,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20350,"byte_end":20359,"line_start":323,"line_end":323,"column_start":18,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":20629,"byte_end":20633,"line_start":336,"line_end":336,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":282}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21376,"byte_end":21380,"line_start":373,"line_end":373,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":301}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21592,"byte_end":21596,"line_start":382,"line_end":382,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":3787},"to":{"krate":0,"index":3801}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":21599,"byte_end":21618,"line_start":382,"line_end":382,"column_start":39,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":3773},"to":{"krate":0,"index":3801}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22455,"byte_end":22459,"line_start":424,"line_end":424,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":3787},"to":{"krate":0,"index":3812}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22462,"byte_end":22470,"line_start":424,"line_end":424,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":199},"to":{"krate":0,"index":3812}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":22837,"byte_end":22845,"line_start":437,"line_end":437,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23058,"byte_end":23067,"line_start":448,"line_end":448,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":3823}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23330,"byte_end":23335,"line_start":462,"line_end":462,"column_start":34,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3823}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23488,"byte_end":23499,"line_start":471,"line_end":471,"column_start":34,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3823}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":23644,"byte_end":23652,"line_start":480,"line_end":480,"column_start":30,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3823}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24162,"byte_end":24171,"line_start":502,"line_end":502,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":3831}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":24685,"byte_end":24694,"line_start":518,"line_end":518,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25012,"byte_end":25025,"line_start":531,"line_end":531,"column_start":34,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3831},"to":{"krate":0,"index":3849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25028,"byte_end":25037,"line_start":531,"line_end":531,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":3842},"to":{"krate":0,"index":3849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25124,"byte_end":25129,"line_start":536,"line_end":536,"column_start":38,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3831}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25469,"byte_end":25474,"line_start":552,"line_end":552,"column_start":45,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":25908,"byte_end":25919,"line_start":570,"line_end":570,"column_start":45,"column_end":56},"kind":{"Impl":{"id":27}},"from":{"krate":16,"index":164},"to":{"krate":0,"index":366}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26188,"byte_end":26199,"line_start":582,"line_end":582,"column_start":45,"column_end":56},"kind":{"Impl":{"id":28}},"from":{"krate":16,"index":164},"to":{"krate":0,"index":366}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26450,"byte_end":26461,"line_start":594,"line_end":594,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":16,"index":164},"to":{"krate":0,"index":366}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":26677,"byte_end":26684,"line_start":606,"line_end":606,"column_start":28,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":6867},"to":{"krate":0,"index":366}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27001,"byte_end":27010,"line_start":621,"line_end":621,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27396,"byte_end":27401,"line_start":634,"line_end":634,"column_start":34,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27559,"byte_end":27564,"line_start":642,"line_end":642,"column_start":34,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":27934,"byte_end":27945,"line_start":659,"line_end":659,"column_start":34,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28136,"byte_end":28147,"line_start":668,"line_end":668,"column_start":34,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28511,"byte_end":28522,"line_start":684,"line_end":684,"column_start":29,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28693,"byte_end":28701,"line_start":694,"line_end":694,"column_start":30,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":28853,"byte_end":28861,"line_start":703,"line_end":703,"column_start":30,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29373,"byte_end":29382,"line_start":722,"line_end":722,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3728},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/mod.rs","byte_start":29962,"byte_end":29970,"line_start":740,"line_end":740,"column_start":39,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55620,"byte_end":55621,"line_start":21,"line_end":21,"column_start":30,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":472},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":55815,"byte_end":55826,"line_start":31,"line_end":31,"column_start":27,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":16,"index":164},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56040,"byte_end":56047,"line_start":41,"line_end":41,"column_start":30,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":6867},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56297,"byte_end":56309,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":56560,"byte_end":56572,"line_start":65,"line_end":65,"column_start":26,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3875},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":57239,"byte_end":57260,"line_start":95,"line_end":95,"column_start":29,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":59094,"byte_end":59111,"line_start":165,"line_end":165,"column_start":29,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":60106,"byte_end":60132,"line_start":205,"line_end":205,"column_start":32,"column_end":58},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":61062,"byte_end":61079,"line_start":243,"line_end":243,"column_start":32,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":573},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":61466,"byte_end":61478,"line_start":260,"line_end":260,"column_start":24,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3875},"to":{"krate":0,"index":4022}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62385,"byte_end":62386,"line_start":295,"line_end":295,"column_start":30,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":62893,"byte_end":62905,"line_start":315,"line_end":315,"column_start":12,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":63166,"byte_end":63178,"line_start":326,"line_end":326,"column_start":26,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3913},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":64223,"byte_end":64244,"line_start":372,"line_end":372,"column_start":29,"column_end":50},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":65621,"byte_end":65638,"line_start":430,"line_end":430,"column_start":32,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/filter.rs","byte_start":66144,"byte_end":66173,"line_start":453,"line_end":453,"column_start":29,"column_end":58},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":67919,"byte_end":67927,"line_start":15,"line_end":15,"column_start":34,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68025,"byte_end":68033,"line_start":20,"line_end":20,"column_start":32,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68121,"byte_end":68129,"line_start":24,"line_end":24,"column_start":27,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3742}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68367,"byte_end":68375,"line_start":34,"line_end":34,"column_start":35,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3751}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68636,"byte_end":68644,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3755}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":68912,"byte_end":68920,"line_start":56,"line_end":56,"column_start":31,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3764}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69230,"byte_end":69238,"line_start":68,"line_end":68,"column_start":34,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69521,"byte_end":69534,"line_start":83,"line_end":83,"column_start":22,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":69884,"byte_end":69905,"line_start":99,"line_end":99,"column_start":21,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3987},"to":{"krate":0,"index":282}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":70323,"byte_end":70331,"line_start":120,"line_end":120,"column_start":32,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":3812}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/visit/reversed.rs","byte_start":70761,"byte_end":70783,"line_start":138,"line_end":138,"column_start":22,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":749},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":71869,"byte_end":71873,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3787},"to":{"krate":0,"index":4022}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72358,"byte_end":72365,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":4022},"to":{"krate":0,"index":4040}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72779,"byte_end":72783,"line_start":44,"line_end":44,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":3787},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":72786,"byte_end":72795,"line_start":44,"line_end":44,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":3842},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73484,"byte_end":73489,"line_start":67,"line_end":67,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":771},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73492,"byte_end":73499,"line_start":67,"line_end":67,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73591,"byte_end":73596,"line_start":71,"line_end":71,"column_start":29,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":73722,"byte_end":73727,"line_start":79,"line_end":79,"column_start":32,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":4022}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":74044,"byte_end":74049,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":4040}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":74428,"byte_end":74439,"line_start":106,"line_end":106,"column_start":32,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":4022}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":74789,"byte_end":74800,"line_start":120,"line_end":120,"column_start":35,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":4040}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":75144,"byte_end":75149,"line_start":133,"line_end":133,"column_start":30,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":75773,"byte_end":75784,"line_start":160,"line_end":160,"column_start":30,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":76400,"byte_end":76408,"line_start":187,"line_end":187,"column_start":26,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77162,"byte_end":77167,"line_start":220,"line_end":220,"column_start":31,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77400,"byte_end":77411,"line_start":231,"line_end":231,"column_start":31,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":77636,"byte_end":77644,"line_start":242,"line_end":242,"column_start":27,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":78346,"byte_end":78352,"line_start":270,"line_end":270,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":775},"to":{"krate":0,"index":852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":79791,"byte_end":79796,"line_start":323,"line_end":323,"column_start":37,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80135,"byte_end":80146,"line_start":338,"line_end":338,"column_start":37,"column_end":48},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80477,"byte_end":80485,"line_start":353,"line_end":353,"column_start":33,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":80833,"byte_end":80841,"line_start":368,"line_end":368,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":5543},"to":{"krate":0,"index":879}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":81710,"byte_end":81711,"line_start":392,"line_end":392,"column_start":49,"column_end":50},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":887},"to":{"krate":0,"index":879}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/data.rs","byte_start":82058,"byte_end":82072,"line_start":406,"line_end":406,"column_start":31,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":888},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":109617,"byte_end":109627,"line_start":31,"line_end":31,"column_start":9,"column_end":19},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/dominators.rs","byte_start":111299,"byte_end":111313,"line_start":93,"line_end":93,"column_start":26,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":921},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90317,"byte_end":90325,"line_start":200,"line_end":200,"column_start":13,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":90563,"byte_end":90571,"line_start":213,"line_end":213,"column_start":25,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4095},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":102300,"byte_end":102315,"line_start":613,"line_end":613,"column_start":22,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":104177,"byte_end":104182,"line_start":667,"line_end":667,"column_start":9,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108164,"byte_end":108169,"line_start":798,"line_end":798,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1049}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108172,"byte_end":108182,"line_start":798,"line_end":798,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1833},"to":{"krate":0,"index":1049}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108185,"byte_end":108188,"line_start":798,"line_end":798,"column_start":41,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2136},"to":{"krate":0,"index":1049}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108212,"byte_end":108219,"line_start":798,"line_end":798,"column_start":68,"column_end":75},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":1049}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108222,"byte_end":108227,"line_start":798,"line_end":798,"column_start":78,"column_end":83},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1049}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108252,"byte_end":108253,"line_start":800,"line_end":800,"column_start":21,"column_end":22},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1051},"to":{"krate":0,"index":1049}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108379,"byte_end":108386,"line_start":803,"line_end":803,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1049},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/algo/mod.rs","byte_start":108389,"byte_end":108393,"line_start":803,"line_end":803,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/astar.rs","byte_start":121777,"byte_end":121788,"line_start":147,"line_end":147,"column_start":9,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124297,"byte_end":124300,"line_start":58,"line_end":58,"column_start":32,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4154},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124466,"byte_end":124469,"line_start":68,"line_end":68,"column_start":51,"column_end":54},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4154},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":124802,"byte_end":124805,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":126181,"byte_end":126184,"line_start":136,"line_end":136,"column_start":16,"column_end":19},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":129817,"byte_end":129820,"line_start":234,"line_end":234,"column_start":20,"column_end":23},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135046,"byte_end":135059,"line_start":413,"line_end":413,"column_start":37,"column_end":50},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4198},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135165,"byte_end":135178,"line_start":419,"line_end":419,"column_start":36,"column_end":49},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4198},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135218,"byte_end":135231,"line_start":421,"line_end":421,"column_start":21,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135534,"byte_end":135547,"line_start":434,"line_end":434,"column_start":33,"column_end":46},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4198},"to":{"krate":0,"index":282}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":135973,"byte_end":135978,"line_start":457,"line_end":457,"column_start":34,"column_end":39},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4177},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":136480,"byte_end":136483,"line_start":478,"line_end":478,"column_start":29,"column_end":32},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":137483,"byte_end":137497,"line_start":517,"line_end":517,"column_start":34,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1231},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":138627,"byte_end":138630,"line_start":559,"line_end":559,"column_start":34,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":138846,"byte_end":138849,"line_start":570,"line_end":570,"column_start":34,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":139328,"byte_end":139337,"line_start":592,"line_end":592,"column_start":27,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4214},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140225,"byte_end":140228,"line_start":628,"line_end":628,"column_start":38,"column_end":41},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3831}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140558,"byte_end":140561,"line_start":644,"line_end":644,"column_start":45,"column_end":48},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140668,"byte_end":140671,"line_start":651,"line_end":651,"column_start":45,"column_end":48},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4154},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":140895,"byte_end":140898,"line_start":663,"line_end":663,"column_start":48,"column_end":51},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4154},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141185,"byte_end":141200,"line_start":678,"line_end":678,"column_start":23,"column_end":38},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141804,"byte_end":141807,"line_start":707,"line_end":707,"column_start":34,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/csr.rs","byte_start":141974,"byte_end":141977,"line_start":717,"line_end":717,"column_start":34,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3823}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":153671,"byte_end":153674,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":154595,"byte_end":154598,"line_start":92,"line_end":92,"column_start":13,"column_end":16},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":156555,"byte_end":156558,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":156879,"byte_end":156882,"line_start":161,"line_end":161,"column_start":28,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":157323,"byte_end":157330,"line_start":180,"line_end":180,"column_start":24,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":6796}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":157913,"byte_end":157920,"line_start":205,"line_end":205,"column_start":26,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/dot.rs","byte_start":158267,"byte_end":158275,"line_start":221,"line_end":221,"column_start":26,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":6843}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159587,"byte_end":159591,"line_start":33,"line_end":33,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159594,"byte_end":159601,"line_start":33,"line_end":33,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":1468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159604,"byte_end":159608,"line_start":33,"line_end":33,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":7026},"to":{"krate":0,"index":1468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159611,"byte_end":159614,"line_start":33,"line_end":33,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1822},"to":{"krate":0,"index":1468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":159622,"byte_end":159627,"line_start":33,"line_end":33,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1468}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":160935,"byte_end":160944,"line_start":103,"line_end":103,"column_start":21,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161317,"byte_end":161326,"line_start":124,"line_end":124,"column_start":34,"column_end":43},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161430,"byte_end":161439,"line_start":130,"line_end":130,"column_start":37,"column_end":46},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":161979,"byte_end":161988,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162473,"byte_end":162482,"line_start":173,"line_end":173,"column_start":34,"column_end":43},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4284},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":162586,"byte_end":162595,"line_start":179,"line_end":179,"column_start":37,"column_end":46},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4284},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163422,"byte_end":163426,"line_start":211,"line_end":211,"column_start":23,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4321},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":163536,"byte_end":163540,"line_start":219,"line_end":219,"column_start":24,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164042,"byte_end":164046,"line_start":237,"line_end":237,"column_start":23,"column_end":27},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4332},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":164162,"byte_end":164166,"line_start":245,"line_end":245,"column_start":24,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":168198,"byte_end":168203,"line_start":351,"line_end":351,"column_start":41,"column_end":46},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":168618,"byte_end":168623,"line_start":371,"line_end":371,"column_start":35,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170486,"byte_end":170491,"line_start":439,"line_end":439,"column_start":12,"column_end":17},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":170898,"byte_end":170903,"line_start":453,"line_end":453,"column_start":12,"column_end":17},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":171333,"byte_end":171338,"line_start":467,"line_end":467,"column_start":20,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":205074,"byte_end":205083,"line_start":1430,"line_end":1430,"column_start":38,"column_end":47},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":206321,"byte_end":206330,"line_start":1472,"line_end":1472,"column_start":30,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1695},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207202,"byte_end":207211,"line_start":1501,"line_end":1501,"column_start":27,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1695},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":207325,"byte_end":207334,"line_start":1508,"line_end":1508,"column_start":17,"column_end":26},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":208164,"byte_end":208178,"line_start":1542,"line_end":1542,"column_start":17,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":209700,"byte_end":209705,"line_start":1604,"line_end":1604,"column_start":34,"column_end":39},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":212266,"byte_end":212281,"line_start":1680,"line_end":1680,"column_start":34,"column_end":49},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":212729,"byte_end":212734,"line_start":1703,"line_end":1703,"column_start":31,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213232,"byte_end":213246,"line_start":1724,"line_end":1724,"column_start":30,"column_end":44},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1794},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":213720,"byte_end":213734,"line_start":1744,"line_end":1744,"column_start":30,"column_end":44},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1807},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":214152,"byte_end":214157,"line_start":1762,"line_end":1762,"column_start":45,"column_end":50},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":214493,"byte_end":214498,"line_start":1776,"line_end":1776,"column_start":48,"column_end":53},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":214826,"byte_end":214831,"line_start":1789,"line_end":1789,"column_start":45,"column_end":50},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215167,"byte_end":215172,"line_start":1803,"line_end":1803,"column_start":48,"column_end":53},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215412,"byte_end":215417,"line_start":1814,"line_end":1814,"column_start":32,"column_end":37},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215614,"byte_end":215618,"line_start":1825,"line_end":1825,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215759,"byte_end":215768,"line_start":1832,"line_end":1832,"column_start":36,"column_end":45},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":1852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":215962,"byte_end":215971,"line_start":1843,"line_end":1843,"column_start":36,"column_end":45},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4284},"to":{"krate":0,"index":1852}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217356,"byte_end":217369,"line_start":1894,"line_end":1894,"column_start":20,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1863},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":217564,"byte_end":217577,"line_start":1906,"line_end":1906,"column_start":21,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219394,"byte_end":219405,"line_start":1962,"line_end":1962,"column_start":34,"column_end":45},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4346},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219668,"byte_end":219679,"line_start":1974,"line_end":1974,"column_start":45,"column_end":56},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4346},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":219832,"byte_end":219843,"line_start":1980,"line_end":1980,"column_start":43,"column_end":54},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4346},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220054,"byte_end":220065,"line_start":1989,"line_end":1989,"column_start":34,"column_end":45},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4356},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220328,"byte_end":220339,"line_start":2001,"line_end":2001,"column_start":45,"column_end":56},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4356},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220492,"byte_end":220503,"line_start":2007,"line_end":2007,"column_start":43,"column_end":54},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4356},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220731,"byte_end":220744,"line_start":2017,"line_end":2017,"column_start":38,"column_end":51},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220847,"byte_end":220860,"line_start":2023,"line_end":2023,"column_start":37,"column_end":50},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":220917,"byte_end":220930,"line_start":2025,"line_end":2025,"column_start":42,"column_end":55},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":221631,"byte_end":221645,"line_start":2053,"line_end":2053,"column_start":30,"column_end":44},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1930},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222008,"byte_end":222022,"line_start":2070,"line_end":2070,"column_start":41,"column_end":55},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1930},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222263,"byte_end":222277,"line_start":2081,"line_end":2081,"column_start":39,"column_end":53},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1930},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222329,"byte_end":222342,"line_start":2083,"line_end":2083,"column_start":17,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":222638,"byte_end":222651,"line_start":2096,"line_end":2096,"column_start":29,"column_end":42},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4366},"to":{"krate":0,"index":282}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223223,"byte_end":223237,"line_start":2123,"line_end":2123,"column_start":30,"column_end":44},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223669,"byte_end":223683,"line_start":2142,"line_end":2142,"column_start":41,"column_end":55},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/mod.rs","byte_start":223991,"byte_end":224005,"line_start":2155,"line_end":2155,"column_start":39,"column_end":53},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":5497}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225096,"byte_end":225102,"line_start":14,"line_end":14,"column_start":13,"column_end":19},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225384,"byte_end":225390,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225501,"byte_end":225507,"line_start":30,"line_end":30,"column_start":29,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225675,"byte_end":225681,"line_start":40,"line_end":40,"column_start":32,"column_end":38},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2499},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/frozen.rs","byte_start":225831,"byte_end":225837,"line_start":49,"line_end":49,"column_start":24,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":231292,"byte_end":231303,"line_start":101,"line_end":101,"column_start":35,"column_end":46},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233248,"byte_end":233259,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":233623,"byte_end":233634,"line_start":174,"line_end":174,"column_start":20,"column_end":31},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":263696,"byte_end":263707,"line_start":1020,"line_end":1020,"column_start":41,"column_end":52},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":264426,"byte_end":264437,"line_start":1047,"line_end":1047,"column_start":45,"column_end":56},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":264778,"byte_end":264789,"line_start":1061,"line_end":1061,"column_start":48,"column_end":59},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":265122,"byte_end":265133,"line_start":1074,"line_end":1074,"column_start":45,"column_end":56},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":265474,"byte_end":265485,"line_start":1088,"line_end":1088,"column_start":48,"column_end":59},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":265730,"byte_end":265741,"line_start":1099,"line_end":1099,"column_start":32,"column_end":43},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":266096,"byte_end":266107,"line_start":1115,"line_end":1115,"column_start":50,"column_end":61},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":267343,"byte_end":267348,"line_start":1154,"line_end":1154,"column_start":56,"column_end":61},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":268962,"byte_end":268976,"line_start":1203,"line_end":1203,"column_start":30,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2279},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269382,"byte_end":269396,"line_start":1220,"line_end":1220,"column_start":41,"column_end":55},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2279},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269832,"byte_end":269845,"line_start":1238,"line_end":1238,"column_start":38,"column_end":51},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4467},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":269948,"byte_end":269961,"line_start":1244,"line_end":1244,"column_start":37,"column_end":50},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4467},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270018,"byte_end":270031,"line_start":1246,"line_end":1246,"column_start":42,"column_end":55},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4467},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270194,"byte_end":270207,"line_start":1255,"line_end":1255,"column_start":17,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":270503,"byte_end":270516,"line_start":1268,"line_end":1268,"column_start":29,"column_end":42},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4467},"to":{"krate":0,"index":282}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":271934,"byte_end":271939,"line_start":1331,"line_end":1331,"column_start":34,"column_end":39},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2346},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":275124,"byte_end":275138,"line_start":1430,"line_end":1430,"column_start":30,"column_end":44},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2377},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":275548,"byte_end":275562,"line_start":1447,"line_end":1447,"column_start":41,"column_end":55},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2377},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":276184,"byte_end":276193,"line_start":1469,"line_end":1469,"column_start":38,"column_end":47},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2397},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277205,"byte_end":277214,"line_start":1505,"line_end":1505,"column_start":17,"column_end":26},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":277777,"byte_end":277786,"line_start":1524,"line_end":1524,"column_start":30,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2412},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280002,"byte_end":280015,"line_start":1595,"line_end":1595,"column_start":31,"column_end":44},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2431},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":280086,"byte_end":280099,"line_start":1599,"line_end":1599,"column_start":21,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281177,"byte_end":281188,"line_start":1633,"line_end":1633,"column_start":41,"column_end":52},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2452},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281647,"byte_end":281658,"line_start":1652,"line_end":1652,"column_start":52,"column_end":63},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2452},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":281957,"byte_end":281968,"line_start":1664,"line_end":1664,"column_start":38,"column_end":49},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3831}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":282581,"byte_end":282592,"line_start":1686,"line_end":1686,"column_start":41,"column_end":52},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2480},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graph_impl/stable_graph/mod.rs","byte_start":283051,"byte_end":283062,"line_start":1705,"line_end":1705,"column_start":52,"column_end":63},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2480},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":287902,"byte_end":287910,"line_start":66,"line_end":66,"column_start":77,"column_end":85},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288090,"byte_end":288094,"line_start":73,"line_end":73,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":2555}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288097,"byte_end":288100,"line_start":73,"line_end":73,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1822},"to":{"krate":0,"index":2555}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288103,"byte_end":288107,"line_start":73,"line_end":73,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":7026},"to":{"krate":0,"index":2555}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288133,"byte_end":288134,"line_start":74,"line_end":74,"column_start":23,"column_end":24},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2557},"to":{"krate":0,"index":2555}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288327,"byte_end":288343,"line_start":83,"line_end":83,"column_start":26,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4493},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288553,"byte_end":288569,"line_start":92,"line_end":92,"column_start":31,"column_end":47},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4493},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":288684,"byte_end":288692,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":299874,"byte_end":299882,"line_start":437,"line_end":437,"column_start":45,"column_end":53},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":5445}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":300396,"byte_end":300404,"line_start":458,"line_end":458,"column_start":39,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":5458}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":301851,"byte_end":301860,"line_start":519,"line_end":519,"column_start":30,"column_end":39},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2612},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":302441,"byte_end":302458,"line_start":547,"line_end":547,"column_start":30,"column_end":47},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2626},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":303258,"byte_end":303263,"line_start":582,"line_end":582,"column_start":33,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2642},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":304221,"byte_end":304229,"line_start":623,"line_end":623,"column_start":33,"column_end":41},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2665},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":305013,"byte_end":305021,"line_start":658,"line_end":658,"column_start":44,"column_end":52},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2665},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":305433,"byte_end":305444,"line_start":679,"line_end":679,"column_start":33,"column_end":44},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2692},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":306207,"byte_end":306218,"line_start":713,"line_end":713,"column_start":44,"column_end":55},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2692},"to":{"krate":2,"index":5472}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":306777,"byte_end":306785,"line_start":738,"line_end":738,"column_start":34,"column_end":42},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307158,"byte_end":307166,"line_start":752,"line_end":752,"column_start":37,"column_end":45},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":307501,"byte_end":307509,"line_start":765,"line_end":765,"column_start":28,"column_end":36},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4481},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308007,"byte_end":308010,"line_start":783,"line_end":783,"column_start":22,"column_end":25},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308043,"byte_end":308046,"line_start":784,"line_end":784,"column_start":23,"column_end":26},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308198,"byte_end":308201,"line_start":794,"line_end":794,"column_start":27,"column_end":30},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308404,"byte_end":308407,"line_start":801,"line_end":801,"column_start":28,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308544,"byte_end":308547,"line_start":807,"line_end":807,"column_start":21,"column_end":24},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308814,"byte_end":308817,"line_start":816,"line_end":816,"column_start":23,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308919,"byte_end":308922,"line_start":823,"line_end":823,"column_start":20,"column_end":23},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":308955,"byte_end":308958,"line_start":825,"line_end":825,"column_start":22,"column_end":25},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":7026}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309127,"byte_end":309130,"line_start":832,"line_end":832,"column_start":40,"column_end":43},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309630,"byte_end":309638,"line_start":854,"line_end":854,"column_start":30,"column_end":38},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":309991,"byte_end":310006,"line_start":873,"line_end":873,"column_start":33,"column_end":48},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2798},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":310812,"byte_end":310826,"line_start":910,"line_end":910,"column_start":33,"column_end":47},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2822},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":311065,"byte_end":311073,"line_start":922,"line_end":922,"column_start":34,"column_end":42},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3831}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/graphmap.rs","byte_start":311497,"byte_end":311505,"line_start":940,"line_end":940,"column_start":41,"column_end":49},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4481},"to":{"krate":0,"index":3849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":312562,"byte_end":312570,"line_start":30,"line_end":30,"column_start":14,"column_end":22},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":318014,"byte_end":318029,"line_start":208,"line_end":208,"column_start":32,"column_end":47},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2898},"to":{"krate":0,"index":2894}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/isomorphism.rs","byte_start":318208,"byte_end":318209,"line_start":219,"line_end":219,"column_start":35,"column_end":36},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2906},"to":{"krate":0,"index":2894}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":329467,"byte_end":329475,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2934},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":329778,"byte_end":329786,"line_start":24,"line_end":24,"column_start":24,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2945},"to":{"krate":2,"index":6838}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":330361,"byte_end":330369,"line_start":47,"line_end":47,"column_start":26,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":5543},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":330597,"byte_end":330598,"line_start":59,"line_end":59,"column_start":27,"column_end":28},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2955},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_format.rs","byte_start":330633,"byte_end":330639,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_utils.rs","byte_start":331722,"byte_end":331730,"line_start":1,"line_end":1,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":5543},"to":{"krate":0,"index":2963}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/iter_utils.rs","byte_start":332572,"byte_end":332573,"line_start":32,"line_end":32,"column_start":26,"column_end":27},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2971},"to":{"krate":0,"index":2963}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333692,"byte_end":333699,"line_start":38,"line_end":38,"column_start":31,"column_end":38},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":3010}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333729,"byte_end":333735,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"kind":{"Impl":{"id":280}},"from":{"krate":2,"index":30061},"to":{"krate":0,"index":3010}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":333993,"byte_end":334000,"line_start":46,"line_end":46,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334003,"byte_end":334007,"line_start":46,"line_end":46,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1986},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334056,"byte_end":334062,"line_start":46,"line_end":46,"column_start":84,"column_end":90},"kind":"SuperTrait","from":{"krate":0,"index":3010},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":334422,"byte_end":334428,"line_start":65,"line_end":65,"column_start":22,"column_end":28},"kind":{"Impl":{"id":281}},"from":{"krate":2,"index":30061},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335160,"byte_end":335167,"line_start":90,"line_end":90,"column_start":27,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3027},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335263,"byte_end":335270,"line_start":96,"line_end":96,"column_start":28,"column_end":35},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":3015}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":335867,"byte_end":335874,"line_start":126,"line_end":126,"column_start":35,"column_end":42},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3027},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":338896,"byte_end":338907,"line_start":219,"line_end":219,"column_start":5,"column_end":16},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":348423,"byte_end":348434,"line_start":499,"line_end":499,"column_start":56,"column_end":67},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350264,"byte_end":350279,"line_start":552,"line_end":552,"column_start":25,"column_end":40},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350451,"byte_end":350466,"line_start":561,"line_end":561,"column_start":38,"column_end":53},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3097},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":350988,"byte_end":351002,"line_start":581,"line_end":581,"column_start":21,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351234,"byte_end":351248,"line_start":591,"line_end":591,"column_start":45,"column_end":59},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3111},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":351954,"byte_end":351968,"line_start":616,"line_end":616,"column_start":49,"column_end":63},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":352335,"byte_end":352349,"line_start":630,"line_end":630,"column_start":9,"column_end":23},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3130},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":353956,"byte_end":353965,"line_start":674,"line_end":674,"column_start":68,"column_end":77},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":354689,"byte_end":354694,"line_start":703,"line_end":703,"column_start":49,"column_end":54},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":355461,"byte_end":355466,"line_start":729,"line_end":729,"column_start":68,"column_end":73},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3174},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":359155,"byte_end":359164,"line_start":854,"line_end":854,"column_start":9,"column_end":18},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":360437,"byte_end":360446,"line_start":910,"line_end":910,"column_start":26,"column_end":35},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4638},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":360599,"byte_end":360608,"line_start":917,"line_end":917,"column_start":29,"column_end":38},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4638},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":360863,"byte_end":360873,"line_start":929,"line_end":929,"column_start":23,"column_end":33},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3230},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361690,"byte_end":361701,"line_start":960,"line_end":960,"column_start":9,"column_end":20},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":361802,"byte_end":361813,"line_start":967,"line_end":967,"column_start":12,"column_end":23},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362158,"byte_end":362169,"line_start":977,"line_end":977,"column_start":12,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":362729,"byte_end":362740,"line_start":991,"line_end":991,"column_start":9,"column_end":20},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":363084,"byte_end":363095,"line_start":1004,"line_end":1004,"column_start":9,"column_end":20},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":363306,"byte_end":363317,"line_start":1012,"line_end":1012,"column_start":9,"column_end":20},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":363726,"byte_end":363737,"line_start":1025,"line_end":1025,"column_start":47,"column_end":58},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":364204,"byte_end":364215,"line_start":1040,"line_end":1040,"column_start":50,"column_end":61},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4619},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":364462,"byte_end":364473,"line_start":1048,"line_end":1048,"column_start":9,"column_end":20},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":364807,"byte_end":364818,"line_start":1060,"line_end":1060,"column_start":9,"column_end":20},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3854}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":365173,"byte_end":365184,"line_start":1075,"line_end":1075,"column_start":9,"column_end":20},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":365380,"byte_end":365391,"line_start":1082,"line_end":1082,"column_start":9,"column_end":20},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3823}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":365523,"byte_end":365534,"line_start":1088,"line_end":1088,"column_start":9,"column_end":20},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3787}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":367670,"byte_end":367681,"line_start":1154,"line_end":1154,"column_start":9,"column_end":20},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3831}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":368040,"byte_end":368051,"line_start":1170,"line_end":1170,"column_start":9,"column_end":20},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":3849}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/matrix_graph.rs","byte_start":368160,"byte_end":368171,"line_start":1175,"line_end":1175,"column_start":9,"column_end":20},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4619},"to":{"krate":0,"index":771}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/traits_graph.rs","byte_start":387852,"byte_end":387857,"line_start":16,"line_end":16,"column_start":43,"column_end":48},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/traits_graph.rs","byte_start":388815,"byte_end":388826,"line_start":47,"line_end":47,"column_start":43,"column_end":54},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":3865}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/unionfind.rs","byte_start":391063,"byte_end":391072,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7130,"byte_end":7139,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":7914,"byte_end":7922,"line_start":234,"line_end":234,"column_start":19,"column_end":27},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4681},"to":{"krate":0,"index":3539}},{"span":{"file_name":"/Users/takanorifukuyama/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.5.0/src/lib.rs","byte_start":8010,"byte_end":8020,"line_start":241,"line_end":241,"column_start":19,"column_end":29},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4687},"to":{"krate":0,"index":3539}}]}